2020-07-11 08:29:35.463 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7224 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 08:29:35.463 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 08:29:37.292 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 08:29:37.292 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 08:29:37.345 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
2020-07-11 08:29:37.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2c8b8bf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2fd1b25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a6f59254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5baae35f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49edcb30' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$807f8611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:29:38.650 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 08:29:38.666 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 08:29:38.666 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 08:29:38.666 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 08:29:38.682 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 08:29:39.031 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 08:29:39.031 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3507 ms
2020-07-11 08:29:39.363 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 08:29:39.363 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 08:29:39.883 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 08:29:39.883 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 08:29:39.883 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 08:29:39.883 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 08:29:40.415 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 08:29:42.540 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 08:29:42.574 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 08:29:42.590 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 08:29:42.590 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 08:29:42.605 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 08:29:42.605 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 08:29:42.605 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594427382574'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 08:29:42.605 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 08:29:42.605 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 08:29:42.605 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@616f81b5
2020-07-11 08:29:42.690 febs [main] INFO  p6spy - 2020-07-11 08:29:42 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 08:29:43.746 febs [main] INFO  p6spy - 2020-07-11 08:29:43 | 耗时 2 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 08:29:44.653 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 08:29:44.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 08:29:44.976 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e4bb10b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c579b5b, org.springframework.security.web.header.HeaderWriterFilter@18c60d81, org.springframework.security.web.authentication.logout.LogoutFilter@14eb96e9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@397dfbe8, org.springframework.security.web.session.ConcurrentSessionFilter@1d40f597, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e0704e2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e7f29d5, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@308be1a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@178c6261, org.springframework.security.web.session.SessionManagementFilter@423762ae, org.springframework.security.web.access.ExceptionTranslationFilter@20db19ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@59831016]
2020-07-11 08:29:45.023 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 08:29:45.039 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 08:29:45.039 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 08:29:45.450 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 08:29:46.041 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 08:29:46.067 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 08:29:46.114 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 08:29:46.145 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 08:29:46.152 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 08:29:46.167 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 08:29:46.183 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.51 seconds (JVM running for 13.415)
2020-07-11 08:29:47.171 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 08:29:47.187 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 08:29:47.187 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594374660943"'s failed in-progress jobs.
2020-07-11 08:29:47.196 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594427382574 started.
2020-07-11 08:29:47.201 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:29:48.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 08:29:48.220 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 08:29:48.220 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 08:29:48.220 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 08:29:48.220 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 08:29:48.887 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 08:29:49.165 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:f5e0d009-50be-410b-81fe-716877dfed83:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 08:29:49.167 febs [QpidJMS Connection Executor: ID:f5e0d009-50be-410b-81fe-716877dfed83:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 08:29:49.503 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 08:29:49.504 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 08:29:49.519 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 08:29:50.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:29:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:29:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:29:50.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:29:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:29:50.130 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:29:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:29:50.132 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-07-11 08:29:50.147 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:29:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 89, '2020-07-11T08:29:50.043+0800');
2020-07-11 08:29:51.719 febs [RMI TCP Connection(5)-192.168.3.108] INFO  p6spy - 2020-07-11 08:29:51 | 耗时 1 ms | SQL 语句：
select 1;
2020-07-11 08:29:59.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:30:00.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:30:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:30:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:30:00.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:30:00.058 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 08:30:00.062 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T08:30:00.021+0800');
2020-07-11 08:30:11.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:30:20.015 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:30:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:30:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:30:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:30:20.049 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 08:30:20.053 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:30:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T08:30:20.015+0800');
2020-07-11 08:30:23.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:30:30.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:30:30.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:30:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:30:30.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:30:30.065 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 08:30:30.069 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:30:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T08:30:30.025+0800');
2020-07-11 08:30:35.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:30:40.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:30:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:30:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:30:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:30:40.052 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:30:40.055 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:30:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:30:40.021+0800');
2020-07-11 08:30:47.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:30:50.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:30:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:30:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:30:50.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:30:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:30:50.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:30:50.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:30:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:30:50.021+0800');
2020-07-11 08:30:59.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:31:00.013 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:31:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:31:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:31:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:31:00.048 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:31:00.052 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:31:00.013+0800');
2020-07-11 08:31:11.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:31:20.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:31:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:31:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:31:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:31:20.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 08:31:20.060 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:31:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T08:31:20.021+0800');
2020-07-11 08:31:23.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:31:30.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:31:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:31:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:31:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:31:30.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:31:30.052 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:31:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:31:30.019+0800');
2020-07-11 08:31:35.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:31:40.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:31:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:31:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:31:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:31:40.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:31:40.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:31:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:31:40.021+0800');
2020-07-11 08:31:47.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:31:50.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:31:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:31:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:31:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:31:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:31:50.050 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:31:50.053 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:31:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:31:50.022+0800');
2020-07-11 08:31:59.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:32:00.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:32:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:32:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:32:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:32:00.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:32:00.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:32:00.020+0800');
2020-07-11 08:32:11.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:32:20.010 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:32:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:32:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:32:20.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:32:20.039 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:32:20.042 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:32:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:32:20.010+0800');
2020-07-11 08:32:23.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:32:25.919 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:32:25.937 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:32:25.943 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:32:25.948 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:32:25.953 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:32:25.957 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:32:25 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:32:30.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:32:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:32:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:32:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:32:30.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:32:30.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:32:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:32:30.019+0800');
2020-07-11 08:32:35.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:32:40.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:32:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:32:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:32:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:32:40.052 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 08:32:40.055 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:32:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T08:32:40.021+0800');
2020-07-11 08:32:47.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:32:50.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:32:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:32:50.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:32:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:32:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:32:50.059 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 08:32:50.062 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:32:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T08:32:50.023+0800');
2020-07-11 08:32:59.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:33:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:33:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:33:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:33:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:33:00.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:33:00.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:33:00.020+0800');
2020-07-11 08:33:11.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:33:20.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:33:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:33:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:33:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:33:20.052 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:33:20.055 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:33:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:33:20.022+0800');
2020-07-11 08:33:23.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:33:30.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:33:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:33:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:33:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:33:30.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:33:30.054 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:33:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:33:30.022+0800');
2020-07-11 08:33:35.209 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:33:40.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:33:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:33:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:33:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:33:40.052 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 08:33:40.055 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:33:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T08:33:40.021+0800');
2020-07-11 08:33:47.209 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:33:50.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:33:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:33:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:33:50.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:33:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:33:50.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:33:50.051 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:33:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:33:50.020+0800');
2020-07-11 08:33:59.211 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:34:00.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:34:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:34:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:34:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:34:00.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:34:00.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:34:00.021+0800');
2020-07-11 08:34:11.211 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:34:20.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:34:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:34:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:34:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:34:20.051 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:34:20.053 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:34:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:34:20.021+0800');
2020-07-11 08:34:23.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:34:30.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:34:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:34:30.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:34:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:34:30.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:34:30.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:34:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:34:30.021+0800');
2020-07-11 08:34:35.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:34:40.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:34:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:34:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:34:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:34:40.048 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:34:40.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:34:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:34:40.019+0800');
2020-07-11 08:34:47.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:34:50.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:34:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:34:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:34:50.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:34:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:34:50.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:34:50.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:34:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:34:50.022+0800');
2020-07-11 08:34:59.216 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:35:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:35:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:35:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:35:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:35:00.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:35:00.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:35:00.020+0800');
2020-07-11 08:35:11.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:35:20.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:35:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:35:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:35:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:35:20.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:35:20.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:35:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:35:20.021+0800');
2020-07-11 08:35:23.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:35:30.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:35:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:35:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:35:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:35:30.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:35:30.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:35:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:35:30.018+0800');
2020-07-11 08:35:35.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:35:40.023 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:35:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:35:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:35:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:35:40.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:35:40.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:35:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:35:40.023+0800');
2020-07-11 08:35:47.219 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:35:50.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:35:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:35:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:35:50.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:35:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:35:50.047 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:35:50.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:35:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:35:50.021+0800');
2020-07-11 08:35:59.221 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:36:00.024 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:36:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:36:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:36:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:36:00.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:36:00.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:36:00.024+0800');
2020-07-11 08:36:11.221 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:36:20.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:36:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:36:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:36:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:36:20.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:36:20.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:36:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:36:20.020+0800');
2020-07-11 08:36:23.221 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:36:30.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:36:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:36:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:36:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:36:30.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:36:30.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:36:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:36:30.008+0800');
2020-07-11 08:36:35.223 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:36:40.007 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:36:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:36:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:36:40.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:36:40.036 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:36:40.039 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:36:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:36:40.007+0800');
2020-07-11 08:36:47.223 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:36:50.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:36:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:36:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:36:50.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:36:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:36:50.049 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:36:50.052 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:36:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:36:50.021+0800');
2020-07-11 08:36:59.224 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:37:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:37:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:37:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:37:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:37:00.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:37:00.049 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:37:00.022+0800');
2020-07-11 08:37:11.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:37:20.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:37:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:37:20.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:37:20.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:37:20.072 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:37:20.074 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:37:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:37:20.044+0800');
2020-07-11 08:37:23.225 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:37:30.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:37:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:37:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:37:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:37:30.047 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:37:30.050 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:37:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:37:30.020+0800');
2020-07-11 08:37:35.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:37:40.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:37:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:37:40.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:37:40.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:37:40.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:37:40.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:37:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:37:40.045+0800');
2020-07-11 08:37:47.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:37:50.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:37:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:37:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:37:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:37:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:37:50.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:37:50.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:37:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:37:50.018+0800');
2020-07-11 08:37:59.225 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:38:00.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:38:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:38:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:38:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:38:00.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:38:00.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:38:00.020+0800');
2020-07-11 08:38:11.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:38:20.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:38:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:38:20.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:38:20.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:38:20.072 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:38:20.075 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:38:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:38:20.045+0800');
2020-07-11 08:38:23.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:38:30.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:38:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:38:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:38:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:38:30.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:38:30.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:38:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:38:30.021+0800');
2020-07-11 08:38:35.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:38:40.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:38:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:38:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:38:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:38:40.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:38:40.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:38:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:38:40.020+0800');
2020-07-11 08:38:47.230 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:38:50.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:38:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:38:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:38:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:38:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:38:50.063 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 08:38:50.067 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:38:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T08:38:50.021+0800');
2020-07-11 08:38:53.522 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:38:53.527 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:38:53.531 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:38:53.537 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:38:53.541 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:38:53.545 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 08:38:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:38:59.231 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:39:00.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:39:00.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:39:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:39:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:39:00.035 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:39:00.037 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:39:00.009+0800');
2020-07-11 08:39:11.231 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:39:20.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:39:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:39:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:39:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:39:20.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:39:20.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:39:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:39:20.019+0800');
2020-07-11 08:39:23.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:39:30.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:39:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:39:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:39:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:39:30.047 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:39:30.050 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:39:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:39:30.020+0800');
2020-07-11 08:39:35.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:39:40.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:39:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:39:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:39:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:39:40.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:39:40.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:39:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:39:40.020+0800');
2020-07-11 08:39:47.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:39:50.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:39:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:39:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:39:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:39:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:39:50.062 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 08:39:50.066 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:39:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T08:39:50.023+0800');
2020-07-11 08:39:59.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:40:00.014 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:40:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:40:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:40:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:40:00.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:40:00.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:40:00.014+0800');
2020-07-11 08:40:11.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:40:14.976 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:40:14.980 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:40:14.985 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:40:14.989 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:40:14.993 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:40:14.998 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 08:40:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:40:20.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:40:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:40:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:40:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:40:20.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:40:20.046 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:40:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:40:20.019+0800');
2020-07-11 08:40:23.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:40:30.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:40:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:40:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:40:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:40:30.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:40:30.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:40:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:40:30.020+0800');
2020-07-11 08:40:35.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:40:40.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:40:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:40:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:40:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:40:40.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:40:40.046 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:40:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:40:40.018+0800');
2020-07-11 08:40:47.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:40:50.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:40:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:40:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:40:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:40:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:40:50.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:40:50.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:40:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:40:50.017+0800');
2020-07-11 08:40:59.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:41:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:41:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:41:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:41:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:41:00.038 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:41:00.041 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:41:00.012+0800');
2020-07-11 08:41:11.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:41:20.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:41:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:41:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:41:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:41:20.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 08:41:20.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:41:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T08:41:20.018+0800');
2020-07-11 08:41:23.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:41:30.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:41:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:41:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:41:30.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:41:30.070 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:41:30.073 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:41:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:41:30.043+0800');
2020-07-11 08:41:35.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:41:40.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:41:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:41:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:41:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:41:40.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:41:40.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:41:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:41:40.018+0800');
2020-07-11 08:41:47.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:41:50.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:41:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:41:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:41:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:41:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:41:50.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:41:50.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:41:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:41:50.020+0800');
2020-07-11 08:41:59.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:42:00.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:42:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:42:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:42:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:42:00.037 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:42:00.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:42:00.012+0800');
2020-07-11 08:42:11.235 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:42:20.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:42:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:42:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:42:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:42:20.040 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:42:20.043 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:42:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:42:20.017+0800');
2020-07-11 08:42:23.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:42:30.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:42:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:42:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:42:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:42:30.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:42:30.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:42:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:42:30.018+0800');
2020-07-11 08:42:35.235 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:42:40.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:42:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:42:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:42:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:42:40.034 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:42:40.036 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:42:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:42:40.010+0800');
2020-07-11 08:42:47.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:42:50.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:42:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:42:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:42:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:42:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:42:50.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:42:50.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:42:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:42:50.021+0800');
2020-07-11 08:42:59.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:43:00.015 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:43:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:43:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:43:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:43:00.040 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:43:00.043 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:43:00.014+0800');
2020-07-11 08:43:11.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:43:20.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:43:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:43:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:43:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:43:20.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:43:20.044 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:43:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:43:20.017+0800');
2020-07-11 08:43:23.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:43:30.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:43:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:43:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:43:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:43:30.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:43:30.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:43:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:43:30.018+0800');
2020-07-11 08:43:35.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:43:40.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:43:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:43:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:43:40.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:43:40.035 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:43:40.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:43:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:43:40.009+0800');
2020-07-11 08:43:47.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:43:50.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:43:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:43:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:43:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:43:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:43:50.041 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:43:50.043 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:43:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:43:50.017+0800');
2020-07-11 08:43:59.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:44:00.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:44:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:44:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:44:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:44:00.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:44:00.041 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:44:00.013+0800');
2020-07-11 08:44:11.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:44:20.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:44:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:44:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:44:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:44:20.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:44:20.047 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:44:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:44:20.021+0800');
2020-07-11 08:44:23.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:44:30.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:44:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:44:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:44:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:44:30.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:44:30.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:44:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:44:30.019+0800');
2020-07-11 08:44:35.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:44:40.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:44:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:44:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:44:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:44:40.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:44:40.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:44:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:44:40.019+0800');
2020-07-11 08:44:47.239 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:44:50.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:44:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:44:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:44:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:44:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:44:50.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:44:50.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:44:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:44:50.020+0800');
2020-07-11 08:44:59.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:45:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:45:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:45:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:45:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:45:00.038 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:45:00.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:45:00.012+0800');
2020-07-11 08:45:11.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:45:20.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:45:20.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:45:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:45:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:45:20.040 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:45:20.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:45:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:45:20.016+0800');
2020-07-11 08:45:23.241 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:45:30.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:45:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:45:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:45:30.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:45:30.067 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:45:30.070 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:45:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:45:30.042+0800');
2020-07-11 08:45:35.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:45:40.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:45:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:45:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:45:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:45:40.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:45:40.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:45:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:45:40.018+0800');
2020-07-11 08:45:47.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:45:50.015 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:45:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:45:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:45:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:45:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:45:50.041 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:45:50.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:45:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:45:50.015+0800');
2020-07-11 08:45:59.242 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:46:00.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:46:00.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:46:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:46:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:46:00.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:46:00.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:46:00.009+0800');
2020-07-11 08:46:11.243 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:46:12.678 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:46:12.684 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:46:12.691 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:46:12.695 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:46:12.699 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:46:12.703 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 08:46:12 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:46:20.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:46:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:46:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:46:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:46:20.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:46:20.046 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:46:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:46:20.019+0800');
2020-07-11 08:46:23.244 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:46:30.028 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:46:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:46:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:46:30.159 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:30 | 耗时 37 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:46:30.161 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：133 毫秒
2020-07-11 08:46:30.164 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:46:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 133, '2020-07-11T08:46:30.028+0800');
2020-07-11 08:46:35.243 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:46:40.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:46:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:46:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:46:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:46:40.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:46:40.047 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:46:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:46:40.019+0800');
2020-07-11 08:46:47.244 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:46:50.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:46:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:46:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:46:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:46:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:46:50.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:46:50.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:46:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:46:50.020+0800');
2020-07-11 08:46:59.244 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:47:00.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:47:00.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:47:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:47:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:47:00.034 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:47:00.037 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:47:00.009+0800');
2020-07-11 08:47:11.245 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:47:20.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:47:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:47:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:47:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:47:20.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:47:20.042 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:47:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:47:20.016+0800');
2020-07-11 08:47:23.245 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:47:30.016 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:47:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:47:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:47:30.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:47:30.039 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:47:30.042 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:47:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:47:30.016+0800');
2020-07-11 08:47:35.247 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:47:40.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:47:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:47:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:47:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:47:40.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:47:40.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:47:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:47:40.017+0800');
2020-07-11 08:47:47.249 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:47:50.016 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:47:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:47:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:47:50.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:47:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:47:50.040 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:47:50.042 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:47:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:47:50.016+0800');
2020-07-11 08:47:59.249 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:48:00.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:48:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:48:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:48:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:48:00.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:48:00.041 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:48:00.013+0800');
2020-07-11 08:48:11.249 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:48:20.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:48:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:48:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:48:20.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:48:20.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 08:48:20.055 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:48:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T08:48:20.020+0800');
2020-07-11 08:48:23.249 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:48:30.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:48:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:48:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:48:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:48:30.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:48:30.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:48:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:48:30.017+0800');
2020-07-11 08:48:35.251 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:48:35.449 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:48:35 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 08:48:40.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:48:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:48:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:48:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:48:40.047 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:48:40.050 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:48:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:48:40.020+0800');
2020-07-11 08:48:47.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:48:48.811 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:48:48.816 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:48:48.821 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:48:48.825 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:48:48.830 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:48:48.834 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:48:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:48:50.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:48:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:48:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:48:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:48:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:48:50.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:48:50.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:48:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:48:50.019+0800');
2020-07-11 08:48:50.235 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:48:50 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 08:48:59.252 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:49:00.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:49:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:49:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:49:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:49:00.042 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:49:00.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:49:00.018+0800');
2020-07-11 08:49:11.251 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:49:20.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:49:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:49:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:49:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:49:20.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:49:20.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:49:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:49:20.019+0800');
2020-07-11 08:49:23.252 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:49:30.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:49:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:49:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:49:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:49:30.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:49:30.048 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:49:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:49:30.019+0800');
2020-07-11 08:49:35.251 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:49:40.022 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:49:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:49:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:49:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:49:40.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:49:40.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:49:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:49:40.022+0800');
2020-07-11 08:49:47.253 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:49:50.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:49:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:49:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:49:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:49:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:49:50.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:49:50.045 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:49:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:49:50.017+0800');
2020-07-11 08:49:59.253 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:50:00.068 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:50:00.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:50:00.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:50:00.115 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:50:00.116 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 08:50:00.119 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T08:50:00.068+0800');
2020-07-11 08:50:09.426 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:50:09.432 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:50:09.436 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:50:09.440 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:50:09.445 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:50:09.448 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:50:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:50:11.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:50:20.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:50:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:50:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:50:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:50:20.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:50:20.046 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:50:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:50:20.017+0800');
2020-07-11 08:50:23.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:50:30.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:50:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:50:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:50:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:50:30.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:50:30.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:50:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:50:30.019+0800');
2020-07-11 08:50:35.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:50:40.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:50:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:50:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:50:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:50:40.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:50:40.046 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:50:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:50:40.017+0800');
2020-07-11 08:50:47.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:50:50.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:50:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:50:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:50:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:50:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:50:50.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:50:50.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:50:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:50:50.016+0800');
2020-07-11 08:50:59.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:51:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:51:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:51:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:51:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:51:00.046 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:51:00.048 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:51:00.020+0800');
2020-07-11 08:51:11.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:51:20.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:51:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:51:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:51:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:51:20.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:51:20.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:51:20.020+0800');
2020-07-11 08:51:23.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:51:30.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:51:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:51:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:51:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:51:30.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:51:30.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:51:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:51:30.018+0800');
2020-07-11 08:51:35.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:51:40.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:51:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:51:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:51:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:51:40.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:51:40.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:51:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:51:40.020+0800');
2020-07-11 08:51:47.257 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:51:50.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:51:50.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:51:50.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:51:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:51:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:51:50.032 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:51:50.035 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:51:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:51:50.008+0800');
2020-07-11 08:51:59.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:52:00.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:52:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:52:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:52:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:52:00.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 08:52:00.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T08:52:00.013+0800');
2020-07-11 08:52:11.258 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:52:20.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:52:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:52:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:52:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:52:20.040 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:52:20.043 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:52:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:52:20.012+0800');
2020-07-11 08:52:23.258 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:52:30.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:52:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:52:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:52:30.114 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:52:30.117 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：77 毫秒
2020-07-11 08:52:30.121 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:52:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 77, '2020-07-11T08:52:30.040+0800');
2020-07-11 08:52:34.822 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:52:34.827 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:52:34.832 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:52:34.837 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:52:34.840 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:52:34.844 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:52:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:52:35.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:52:40.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:52:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:52:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:52:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:52:40.034 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:52:40.037 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:52:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:52:40.011+0800');
2020-07-11 08:52:47.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:52:50.006 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:52:50.008 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:52:50.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:52:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:52:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:52:50.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:52:50.035 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:52:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:52:50.006+0800');
2020-07-11 08:52:59.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:53:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:53:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:53:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:00 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:53:00.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:53:00.064 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-07-11 08:53:00.067 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-07-11T08:53:00.012+0800');
2020-07-11 08:53:05.260 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 08:53:05.263 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:53:05.268 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:53:05.274 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:53:05.278 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:53:05.283 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 08:53:05 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:53:11.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:53:20.006 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:53:20.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:53:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:53:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:53:20.030 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:53:20.032 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:53:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:53:20.006+0800');
2020-07-11 08:53:23.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:53:30.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:53:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:53:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:53:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:53:30.041 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:53:30.043 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:53:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:53:30.018+0800');
2020-07-11 08:53:35.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:53:40.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:53:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:53:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:53:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:53:40.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 08:53:40.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 08:53:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T08:53:40.017+0800');
2020-07-11 08:53:44.210 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 08:53:44.213 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:53:44.217 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:53:44.221 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:53:44.226 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:53:44.231 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 08:53:44 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:53:47.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:53:49.167 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 08:53:49.171 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:53:49.175 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:53:49.178 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:53:49.182 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:53:49.185 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 08:53:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:53:50.007 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:53:50.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:53:50.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:53:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:53:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:53:50.035 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 08:53:50.037 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:53:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T08:53:50.007+0800');
2020-07-11 08:53:59.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:54:00.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:54:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:54:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:54:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:54:00.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:54:00.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:54:00.021+0800');
2020-07-11 08:54:11.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:54:20.009 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:54:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:54:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:54:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:54:20.034 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:54:20.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:54:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:54:20.009+0800');
2020-07-11 08:54:23.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:54:30.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:54:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:54:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:54:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:54:30.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 08:54:30.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:54:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T08:54:30.017+0800');
2020-07-11 08:54:35.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:54:40.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:54:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:54:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:54:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:54:40.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:54:40.046 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:54:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:54:40.019+0800');
2020-07-11 08:54:47.265 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:54:50.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:54:50.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:54:50.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:54:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:54:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:54:50.030 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 08:54:50.032 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:54:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T08:54:50.007+0800');
2020-07-11 08:54:59.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:55:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:55:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:55:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:55:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:55:00.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 08:55:00.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T08:55:00.019+0800');
2020-07-11 08:55:11.265 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594427382574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:55:20.729 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16792 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 08:55:20.735 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 08:55:23.460 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 08:55:23.462 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 08:55:23.528 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-07-11 08:55:24.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eac1fd55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$81338c84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$652c03b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$19e154be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@402d6012' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3eb5f770] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:55:24.913 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 08:55:24.929 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 08:55:24.938 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 08:55:24.938 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 08:55:24.946 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 08:55:25.316 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 08:55:25.317 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4462 ms
2020-07-11 08:55:25.751 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 08:55:25.761 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 08:55:26.345 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 08:55:26.346 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 08:55:26.346 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 08:55:26.346 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 08:55:26.952 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 08:55:29.309 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 08:55:29.348 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 08:55:29.365 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 08:55:29.365 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 08:55:29.369 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 08:55:29.371 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 08:55:29.372 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594428929350'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 08:55:29.372 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 08:55:29.373 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 08:55:29.375 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3fdede3a
2020-07-11 08:55:29.470 febs [main] INFO  p6spy - 2020-07-11 08:55:29 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 08:55:30.924 febs [main] INFO  p6spy - 2020-07-11 08:55:30 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 08:55:32.474 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 08:55:32.900 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 08:55:32.900 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 08:55:32.900 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 08:55:32.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 08:55:33.000 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e00723b, org.springframework.security.web.context.SecurityContextPersistenceFilter@1267f832, org.springframework.security.web.header.HeaderWriterFilter@d03cdc7, org.springframework.security.web.authentication.logout.LogoutFilter@3c4231e5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3390621a, org.springframework.security.web.session.ConcurrentSessionFilter@4d4337f9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73eaae1e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bb661e0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4e23ddf0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e305953, org.springframework.security.web.session.SessionManagementFilter@642334d6, org.springframework.security.web.access.ExceptionTranslationFilter@7f38545a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a0b550a]
2020-07-11 08:55:33.078 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 08:55:33.106 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 08:55:33.108 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 08:55:33.739 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 08:55:34.576 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 08:55:34.628 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 08:55:34.703 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 08:55:34.729 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 08:55:34.746 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 08:55:34.770 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 08:55:34.774 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.345 seconds (JVM running for 17.766)
2020-07-11 08:55:35.732 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 08:55:35.745 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 08:55:35.745 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594427382574"'s failed in-progress jobs.
2020-07-11 08:55:35.751 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 08:55:35.763 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428929350 started.
2020-07-11 08:55:35.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428929350_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:55:36.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 08:55:36.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 08:55:36.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 08:55:36.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 08:55:36.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 08:55:37.482 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 08:55:37.780 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:810122d8-1a23-481e-92dd-84f9b966b6eb:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 08:55:37.781 febs [QpidJMS Connection Executor: ID:810122d8-1a23-481e-92dd-84f9b966b6eb:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 08:55:38.510 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 08:55:38.510 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 08:55:38.525 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 08:55:40.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:55:40.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:55:40.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:55:40.106 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:55:40.108 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：65 毫秒
2020-07-11 08:55:40.123 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:55:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 65, '2020-07-11T08:55:40.043+0800');
2020-07-11 08:55:40.517 febs [RMI TCP Connection(5)-192.168.3.108] INFO  p6spy - 2020-07-11 08:55:40 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 08:55:47.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428929350_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:55:50.013 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:55:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:55:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:55:50.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:55:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:55:50.056 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 08:55:50.061 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:55:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T08:55:50.013+0800');
2020-07-11 08:55:55.418 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428929350 paused.
2020-07-11 08:55:55.433 febs [Thread-35] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-07-11 08:55:55.438 febs [Thread-35] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-07-11 08:55:55.438 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428929350 shutting down.
2020-07-11 08:55:55.438 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428929350 paused.
2020-07-11 08:55:55.439 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428929350 shutdown complete.
2020-07-11 08:55:55.445 febs [Thread-35] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-07-11 08:55:55.445 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-07-11 08:55:55.452 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-07-11 08:55:59.998 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6172 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 08:56:00.004 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 08:56:01.572 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 08:56:01.574 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 08:56:01.638 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-07-11 08:56:02.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f23b1b81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88acaab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6ca521df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$215a72ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2905b568' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$462f159c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 08:56:02.964 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 08:56:02.980 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 08:56:02.989 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 08:56:02.990 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 08:56:02.999 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 08:56:03.112 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 08:56:03.112 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3042 ms
2020-07-11 08:56:03.523 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 08:56:03.531 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 08:56:03.996 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 08:56:03.996 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 08:56:03.997 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 08:56:03.997 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 08:56:04.534 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 08:56:06.742 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 08:56:06.802 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 08:56:06.815 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 08:56:06.815 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 08:56:06.819 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 08:56:06.821 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 08:56:06.822 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594428966803'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 08:56:06.822 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 08:56:06.822 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 08:56:06.824 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6e00d737
2020-07-11 08:56:06.908 febs [main] INFO  p6spy - 2020-07-11 08:56:06 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 08:56:08.036 febs [main] INFO  p6spy - 2020-07-11 08:56:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 08:56:08.979 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 08:56:09.257 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 08:56:09.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 08:56:09.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1acd2a14, org.springframework.security.web.context.SecurityContextPersistenceFilter@501956f9, org.springframework.security.web.header.HeaderWriterFilter@3e8995cc, org.springframework.security.web.authentication.logout.LogoutFilter@1de6f29d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7d466ef9, org.springframework.security.web.session.ConcurrentSessionFilter@71d8794f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fbed6fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29dcad7e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@601ca994, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5432be12, org.springframework.security.web.session.SessionManagementFilter@3c1ef806, org.springframework.security.web.access.ExceptionTranslationFilter@268f126f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a4e1ca7]
2020-07-11 08:56:09.388 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 08:56:09.406 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 08:56:09.408 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 08:56:09.843 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 08:56:10.535 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 08:56:10.551 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 08:56:10.629 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 08:56:10.654 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 08:56:10.668 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 08:56:10.691 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 08:56:10.694 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.606 seconds (JVM running for 12.912)
2020-07-11 08:56:10.728 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 08:56:10.728 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 08:56:10.728 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 08:56:10.728 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 08:56:10.729 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 08:56:11.489 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 08:56:11.655 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 08:56:11.678 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428966803 started.
2020-07-11 08:56:11.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:56:11.833 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 08:56:11.834 febs [QpidJMS Connection Executor: ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 08:56:12.309 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 08:56:12.309 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 08:56:12.323 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-07-11 08:56:12.324 febs [RMI TCP Connection(4)-192.168.3.108] INFO  p6spy - 2020-07-11 08:56:12 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 08:56:20.061 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:56:20.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:56:20.109 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:56:20.168 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:56:20.171 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：110 毫秒
2020-07-11 08:56:20.196 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 110, '2020-07-11T08:56:20.061+0800');
2020-07-11 08:56:20.442 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 08:56:20.461 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:56:20.470 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:56:20.478 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:56:20.485 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:56:20.499 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 08:56:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:56:23.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:56:26.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 08:56:26.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594428929350"'s failed in-progress jobs.
2020-07-11 08:56:30.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:56:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:56:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:56:30.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:56:30.062 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 08:56:30.067 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 08:56:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T08:56:30.023+0800');
2020-07-11 08:56:35.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:56:40.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:56:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:56:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:56:40.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:56:40.053 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:56:40.057 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 08:56:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:56:40.018+0800');
2020-07-11 08:56:47.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:56:50.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:56:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:56:50.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:56:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:56:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:56:50.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 08:56:50.069 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 08:56:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T08:56:50.021+0800');
2020-07-11 08:56:59.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:57:00.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:57:00.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:57:00.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:57:00.108 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:57:00.111 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：68 毫秒
2020-07-11 08:57:00.117 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 08:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 68, '2020-07-11T08:57:00.042+0800');
2020-07-11 08:57:01.616 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 08:57:01.627 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 08:57:01.635 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 08:57:01.642 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 08:57:01.649 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 08:57:01.658 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 08:57:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 08:57:11.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:57:20.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:57:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:57:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:57:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:57:20.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:57:20.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 08:57:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:57:20.009+0800');
2020-07-11 08:57:23.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:57:30.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:57:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:57:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:57:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:57:30.054 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 08:57:30.058 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 08:57:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T08:57:30.020+0800');
2020-07-11 08:57:35.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:57:40.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:57:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:57:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:57:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:57:40.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 08:57:40.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 08:57:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T08:57:40.018+0800');
2020-07-11 08:57:47.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:57:50.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:57:50.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:57:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:57:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:57:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:57:50.051 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 08:57:50.057 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 08:57:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T08:57:50.012+0800');
2020-07-11 08:57:59.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:58:00.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:58:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:58:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:58:00.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:58:00.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 08:58:00.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 08:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T08:58:00.010+0800');
2020-07-11 08:58:11.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:58:20.040 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:58:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:58:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:58:20.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:58:20.076 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:58:20.079 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 08:58:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:58:20.040+0800');
2020-07-11 08:58:23.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:58:30.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:58:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:58:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:58:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:58:30.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 08:58:30.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 08:58:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T08:58:30.017+0800');
2020-07-11 08:58:35.688 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:58:40.041 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:58:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:58:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:58:40.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:58:40.074 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 08:58:40.078 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 08:58:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T08:58:40.041+0800');
2020-07-11 08:58:47.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:58:50.006 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:58:50.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:58:50.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:58:50.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:58:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:58:50.037 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 08:58:50.040 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 08:58:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T08:58:50.006+0800');
2020-07-11 08:58:59.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:59:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:59:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:59:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:59:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:59:00.055 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 08:59:00.059 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 08:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T08:59:00.021+0800');
2020-07-11 08:59:11.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:59:20.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:59:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:59:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:59:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:59:20.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 08:59:20.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 08:59:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T08:59:20.009+0800');
2020-07-11 08:59:23.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:59:30.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:59:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:59:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:59:30.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:59:30.055 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 08:59:30.059 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 08:59:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T08:59:30.019+0800');
2020-07-11 08:59:35.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:59:40.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:59:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:59:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:59:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:59:40.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 08:59:40.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 08:59:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T08:59:40.019+0800');
2020-07-11 08:59:47.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 08:59:50.008 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 08:59:50.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 08:59:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 08:59:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 08:59:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 08:59:50.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 08:59:50.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 08:59:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T08:59:50.008+0800');
2020-07-11 08:59:59.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:00:00.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:00:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:00:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:00:00.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:00:00.075 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-07-11 09:00:00.078 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-07-11T09:00:00.021+0800');
2020-07-11 09:00:02.906 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:00:02.913 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:00:02.919 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:00:02.923 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:00:02.926 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:00:02.931 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:00:11.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:00:20.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:00:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:00:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:00:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:00:20.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 09:00:20.056 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:00:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T09:00:20.019+0800');
2020-07-11 09:00:23.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:00:30.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:00:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:00:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:00:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:00:30.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:00:30.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:00:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:00:30.018+0800');
2020-07-11 09:00:35.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:00:40.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:00:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:00:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:00:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:00:40.047 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:00:40.051 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:00:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:00:40.018+0800');
2020-07-11 09:00:47.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:00:50.010 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:00:50.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:00:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:00:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:00:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:00:50.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:00:50.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:00:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:00:50.010+0800');
2020-07-11 09:00:59.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:01:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:01:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:01:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:01:00.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:01:00.041 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:01:00.044 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:01:00.010+0800');
2020-07-11 09:01:11.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:01:20.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:01:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:01:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:01:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:01:20.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:01:20.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:01:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:01:20.017+0800');
2020-07-11 09:01:23.697 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:01:30.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:01:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:01:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:01:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:01:30.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:01:30.048 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:01:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:01:30.017+0800');
2020-07-11 09:01:35.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:01:40.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:01:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:01:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:01:40.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:01:40.068 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:01:40.071 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:01:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:01:40.040+0800');
2020-07-11 09:01:47.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:01:50.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:01:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:01:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:01:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:01:50.063 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-07-11 09:01:50.067 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-07-11T09:01:50.017+0800');
2020-07-11 09:01:50.085 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:01:50.092 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:01:50.097 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:01:50.104 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:01:50.109 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:01:50.114 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:01:59.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:02:00.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:02:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:02:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:02:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:02:00.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:02:00.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:02:00.011+0800');
2020-07-11 09:02:11.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:02:20.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:02:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:02:20.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:02:20.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:02:20.038 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:02:20.041 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:02:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:02:20.008+0800');
2020-07-11 09:02:23.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:02:30.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:02:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:02:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:02:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:02:30.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:02:30.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:02:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:02:30.020+0800');
2020-07-11 09:02:34.887 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:02:34.893 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:02:34.897 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:02:34.902 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:02:34.907 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:02:34.911 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:02:35.697 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:02:40.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:02:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:02:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:02:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:02:40.047 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:02:40.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:02:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:02:40.019+0800');
2020-07-11 09:02:47.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:02:50.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:02:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:02:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:02:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:02:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:02:50.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:02:50.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:02:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:02:50.019+0800');
2020-07-11 09:02:51.837 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - IdleTimeoutCheck closed the transport due to the peer exceeding our requested idle-timeout.
2020-07-11 09:02:51.864 febs [QpidJMS Connection Executor: ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:02:52.877 febs [AmqpProvider :(2):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 09:02:53.343 febs [QpidJMS Connection Executor: ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionRestored, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:02:59.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:03:00.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:03:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:03:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:03:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:03:00.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:03:00.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:03:00.018+0800');
2020-07-11 09:03:11.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:03:18.358 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:03:18.364 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:03:18.368 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:03:18.373 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:03:18.378 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:03:18.384 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:03:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:03:20.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:03:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:03:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:03:20.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:03:20.061 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 09:03:20.066 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:03:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T09:03:20.019+0800');
2020-07-11 09:03:22.822 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:03:22.828 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:03:22.834 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:03:22.840 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:03:22.844 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:03:22.850 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:03:22 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:03:23.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:03:30.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:03:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:03:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:03:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:03:30.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:03:30.049 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:03:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:03:30.017+0800');
2020-07-11 09:03:35.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:03:40.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:03:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:03:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:03:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:03:40.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:03:40.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:03:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:03:40.021+0800');
2020-07-11 09:03:47.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:03:50.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:03:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:03:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:03:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:03:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:03:50.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:03:50.048 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:03:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:03:50.020+0800');
2020-07-11 09:03:59.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:04:00.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:04:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:04:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:04:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:04:00.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:04:00.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:04:00.018+0800');
2020-07-11 09:04:10.543 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:04:10.549 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:04:10.555 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:04:10.563 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:04:10.569 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:04:10.576 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:04:11.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:04:20.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:04:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:04:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:04:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:04:20.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:04:20.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:04:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:04:20.020+0800');
2020-07-11 09:04:23.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:04:30.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:04:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:04:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:04:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:04:30.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:04:30.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:04:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:04:30.018+0800');
2020-07-11 09:04:35.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:04:40.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:04:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:04:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:04:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:04:40.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:04:40.046 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:04:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:04:40.016+0800');
2020-07-11 09:04:47.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:04:50.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:04:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:04:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:04:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:04:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:04:50.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:04:50.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:04:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:04:50.016+0800');
2020-07-11 09:04:59.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:05:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:05:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:05:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:05:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:05:00.040 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:05:00.043 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:05:00.012+0800');
2020-07-11 09:05:11.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:05:20.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:05:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:05:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:05:20.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:05:20.075 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 09:05:20.079 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:05:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T09:05:20.033+0800');
2020-07-11 09:05:23.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:05:30.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:05:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:05:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:05:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:05:30.051 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:05:30.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:05:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:05:30.020+0800');
2020-07-11 09:05:35.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:05:40.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:05:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:05:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:05:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:05:40.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:05:40.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:05:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:05:40.017+0800');
2020-07-11 09:05:47.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:05:50.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:05:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:05:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:05:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:05:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:05:50.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:05:50.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:05:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:05:50.019+0800');
2020-07-11 09:05:59.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:06:00.061 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:06:00.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:06:00.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:06:00.130 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:06:00.131 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：70 毫秒
2020-07-11 09:06:00.137 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 70, '2020-07-11T09:06:00.061+0800');
2020-07-11 09:06:08.494 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:06:08.502 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:06:08.508 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:06:08.515 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:06:08.521 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:06:08.528 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:06:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:06:11.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:06:20.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:06:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:06:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:06:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:06:20.049 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:06:20.053 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:06:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:06:20.019+0800');
2020-07-11 09:06:23.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:06:30.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:06:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:06:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:06:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:06:30.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:06:30.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:06:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:06:30.017+0800');
2020-07-11 09:06:35.702 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:06:40.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:06:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:06:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:06:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:06:40.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:06:40.048 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:06:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:06:40.018+0800');
2020-07-11 09:06:47.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:06:50.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:06:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:06:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:06:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:06:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:06:50.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:06:50.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:06:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:06:50.017+0800');
2020-07-11 09:06:59.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:07:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:07:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:07:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:07:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:07:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:07:00.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:07:00.016+0800');
2020-07-11 09:07:11.706 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:07:20.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:07:20.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:07:20.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:07:20.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:07:20.073 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:07:20.076 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:07:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:07:20.044+0800');
2020-07-11 09:07:23.705 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:07:30.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:07:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:07:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:07:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:07:30.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:07:30.049 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:07:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:07:30.020+0800');
2020-07-11 09:07:35.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:07:40.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:07:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:07:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:07:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:07:40.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:07:40.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:07:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:07:40.018+0800');
2020-07-11 09:07:47.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:07:50.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:07:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:07:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:07:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:07:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:07:50.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:07:50.044 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:07:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:07:50.016+0800');
2020-07-11 09:07:59.708 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:08:00.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:08:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:08:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:08:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:08:00.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:08:00.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:08:00.017+0800');
2020-07-11 09:08:10.496 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 8, 16;
2020-07-11 09:08:11.708 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:08:20.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:08:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:08:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:08:20.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:08:20.071 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:08:20.074 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:08:20.045+0800');
2020-07-11 09:08:20.879 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:20.885 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:20.890 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:20.894 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:20.898 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:20.902 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:23.710 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:08:26.864 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:26 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 8, 16;
2020-07-11 09:08:30.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:08:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:08:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:08:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:08:30.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:08:30.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:08:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:08:30.017+0800');
2020-07-11 09:08:35.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:08:40.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:08:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:08:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:08:40.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:08:40.069 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:08:40.072 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:08:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:08:40.043+0800');
2020-07-11 09:08:47.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:08:49.650 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:49.655 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:49.661 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:49.665 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:49.669 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:49.673 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:50.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:08:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:08:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:08:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:08:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:08:50.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:08:50.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:08:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:08:50.018+0800');
2020-07-11 09:08:56.592 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:56.597 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:56.602 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:56.607 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:56.613 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:56.619 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:08:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:57.787 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:57.792 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:57.797 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:57.803 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:57.808 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:57.814 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:08:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:58.502 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:58.507 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:58.514 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:58.519 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:58.524 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:58.530 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:08:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:59.241 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:08:59.245 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:08:59.250 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:08:59.256 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:08:59.261 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:08:59.265 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:08:59 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:08:59.710 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:09:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:09:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:09:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:09:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:09:00.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:09:00.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:09:00.018+0800');
2020-07-11 09:09:11.711 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:09:13.460 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:09:13 | 耗时 1 ms | SQL 语句：
SELECT a.* FROM a_account a WHERE a.kh_account = 'fxp' AND a.kh_pwd = '123456';
2020-07-11 09:09:13.465 febs [http-nio-8099-exec-7] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6EA2AB82C1E7F6571D5EF30C32D22642
2020-07-11 09:09:13.661 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:09:13 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:09:13.672 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:09:13 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:09:15.150 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:15.155 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:15.161 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:15.167 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:15.171 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:15.175 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:15 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:17.120 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:17 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 09:09:20.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:09:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:09:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:09:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:09:20.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:09:20.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:09:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:09:20.018+0800');
2020-07-11 09:09:22.900 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:22.906 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:22.950 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:22.958 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:22.963 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:22.969 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:09:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:23.637 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:23.642 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:23.646 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:23.651 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:23.656 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:23.660 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:23.712 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:09:24.714 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:09:24 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 09:09:29.919 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:29.923 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:29.928 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:29.933 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:29.938 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:29.943 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:29 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:30.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:09:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:09:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:09:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:09:30.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:09:30.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:09:30.017+0800');
2020-07-11 09:09:30.564 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:30.569 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:30.574 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:30.578 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:30.584 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:30.588 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:32.873 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:09:32 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 09:09:35.711 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:09:36.921 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:09:36.925 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:09:36.930 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:09:36.935 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:09:36.941 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:09:36.947 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:09:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:09:37.769 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:09:37 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 09:09:40.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:09:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:09:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:09:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:09:40.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:09:40.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:09:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:09:40.016+0800');
2020-07-11 09:09:47.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:09:50.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:09:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:09:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:09:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:09:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:09:50.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:09:50.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:09:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:09:50.018+0800');
2020-07-11 09:09:59.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:10:00.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:10:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:10:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:10:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:10:00.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:10:00.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:10:00.016+0800');
2020-07-11 09:10:11.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:10:20.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:10:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:10:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:10:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:10:20.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:10:20.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:10:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:10:20.019+0800');
2020-07-11 09:10:23.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:10:30.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:10:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:10:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:10:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:10:30.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:10:30.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:10:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:10:30.018+0800');
2020-07-11 09:10:35.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:10:40.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:10:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:10:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:10:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:10:40.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:10:40.048 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:10:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:10:40.018+0800');
2020-07-11 09:10:47.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:10:50.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:10:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:10:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:10:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:10:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:10:50.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:10:50.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:10:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:10:50.018+0800');
2020-07-11 09:10:59.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:11:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:11:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:11:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:11:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:11:00.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:11:00.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:11:00.020+0800');
2020-07-11 09:11:11.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:11:20.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:11:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:11:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:11:20.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:11:20.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:11:20.054 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:11:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:11:20.020+0800');
2020-07-11 09:11:23.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:11:30.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:11:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:11:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:11:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:11:30.045 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:11:30.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:11:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:11:30.019+0800');
2020-07-11 09:11:35.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:11:40.010 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:11:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:11:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:11:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:11:40.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:11:40.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:11:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:11:40.010+0800');
2020-07-11 09:11:47.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:11:50.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:11:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:11:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:11:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:11:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:11:50.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:11:50.047 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:11:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:11:50.019+0800');
2020-07-11 09:11:59.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:12:00.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:12:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:12:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:12:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:12:00.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:12:00.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:12:00.017+0800');
2020-07-11 09:12:11.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:12:20.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:12:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:12:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:12:20.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:12:20.059 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 09:12:20.064 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:12:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T09:12:20.019+0800');
2020-07-11 09:12:23.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:12:26.163 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:12:26.169 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:12:26.175 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:12:26.180 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:12:26.185 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:12:26.191 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:12:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:12:27.570 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:12:27 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 09:12:30.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:12:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:12:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:12:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:12:30.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:12:30.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:12:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:12:30.018+0800');
2020-07-11 09:12:35.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:12:40.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:12:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:12:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:12:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:12:40.047 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:12:40.052 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:12:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:12:40.018+0800');
2020-07-11 09:12:47.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:12:50.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:12:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:12:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:12:50.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:12:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:12:50.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:12:50.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:12:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:12:50.022+0800');
2020-07-11 09:12:59.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:13:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:13:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:13:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:13:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:13:00.039 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:13:00.042 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:13:00.013+0800');
2020-07-11 09:13:11.723 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:13:20.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:13:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:13:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:13:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:13:20.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:13:20.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:13:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:13:20.017+0800');
2020-07-11 09:13:23.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:13:30.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:13:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:13:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:13:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:13:30.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:13:30.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:13:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:13:30.021+0800');
2020-07-11 09:13:35.723 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:13:40.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:13:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:13:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:13:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:13:40.038 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:13:40.041 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:13:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:13:40.009+0800');
2020-07-11 09:13:47.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:13:50.016 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:13:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:13:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:13:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:13:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:13:50.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:13:50.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:13:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:13:50.016+0800');
2020-07-11 09:13:59.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:14:00.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:14:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:14:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:14:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:14:00.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:14:00.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:14:00.019+0800');
2020-07-11 09:14:11.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:14:20.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:14:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:14:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:14:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:14:20.042 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:14:20.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:14:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:14:20.017+0800');
2020-07-11 09:14:23.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:14:30.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:14:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:14:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:14:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:14:30.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:14:30.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:14:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:14:30.020+0800');
2020-07-11 09:14:35.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:14:40.008 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:14:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:14:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:14:40.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:14:40.039 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:14:40.042 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:14:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:14:40.008+0800');
2020-07-11 09:14:47.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:14:50.024 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:14:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:14:50.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:14:50.095 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:14:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:14:50.097 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：73 毫秒
2020-07-11 09:14:50.102 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:14:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 73, '2020-07-11T09:14:50.024+0800');
2020-07-11 09:14:59.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:15:00.033 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:15:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:00 | 耗时 4 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:15:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:15:00.154 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:15:00.156 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：123 毫秒
2020-07-11 09:15:00.160 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 123, '2020-07-11T09:15:00.033+0800');
2020-07-11 09:15:11.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:15:18.525 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:15:18.530 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:15:18.535 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:15:18.543 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:15:18.548 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:15:18.552 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:15:20.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:15:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:15:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:15:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:15:20.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:15:20.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:15:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:15:20.018+0800');
2020-07-11 09:15:23.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:15:30.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:15:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:15:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:15:30.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:15:30.059 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 09:15:30.062 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:15:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T09:15:30.021+0800');
2020-07-11 09:15:31.246 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:15:31.253 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:15:31.260 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:15:31.266 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:15:31.271 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:15:31.276 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:15:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:15:33.645 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:15:33.652 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:15:33.656 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:15:33.661 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:15:33.666 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:15:33.671 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:15:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:15:35.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:15:39.189 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:15:39.195 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:15:39.199 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:15:39.203 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:15:39.209 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:15:39.213 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:15:39 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:15:40.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:15:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:15:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:15:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:15:40.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:15:40.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:15:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:15:40.020+0800');
2020-07-11 09:15:46.319 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:15:46.324 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:15:46.330 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:15:46.334 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:15:46.339 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:15:46.344 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:15:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:15:47.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:15:50.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:15:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:15:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:15:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:15:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:15:50.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:15:50.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:15:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:15:50.018+0800');
2020-07-11 09:15:59.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:16:00.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:16:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:16:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:16:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:16:00.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:16:00.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:16:00.018+0800');
2020-07-11 09:16:11.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:16:20.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:16:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:16:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:16:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:16:20.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:16:20.057 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:16:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:16:20.020+0800');
2020-07-11 09:16:23.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:16:30.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:16:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:16:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:16:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:16:30.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:16:30.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:16:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:16:30.009+0800');
2020-07-11 09:16:35.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:16:40.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:16:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:16:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:16:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:16:40.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:16:40.046 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:16:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:16:40.017+0800');
2020-07-11 09:16:47.794 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:16:50.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:16:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:16:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:16:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:16:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:16:50.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:16:50.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:16:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:16:50.018+0800');
2020-07-11 09:16:59.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:17:00.009 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:17:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:17:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:17:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:17:00.035 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:17:00.037 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:17:00.009+0800');
2020-07-11 09:17:07.698 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:17:07.704 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:17:07.709 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:17:07.713 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:17:07.718 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:17:07.723 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:17:07 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:17:11.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:17:20.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:17:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:17:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:17:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:17:20.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:17:20.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:17:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:17:20.017+0800');
2020-07-11 09:17:23.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:17:30.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:17:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:17:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:17:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:17:30.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:17:30.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:17:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:17:30.022+0800');
2020-07-11 09:17:35.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:17:40.015 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:17:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:17:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:17:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:17:40.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:17:40.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:17:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:17:40.015+0800');
2020-07-11 09:17:47.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:17:50.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:17:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:17:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:17:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:17:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:17:50.041 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:17:50.044 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:17:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:17:50.017+0800');
2020-07-11 09:17:59.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:18:00.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:18:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:18:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:18:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:18:00.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:18:00.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:18:00.011+0800');
2020-07-11 09:18:10.675 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:18:10.681 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:18:10.687 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:18:10.692 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:18:10.696 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:18:10.701 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:18:11.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:18:18.356 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:18:18.360 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:18:18.365 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:18:18.369 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:18:18.374 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:18:18.378 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:18:20.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:18:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:18:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:18:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:18:20.053 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 09:18:20.057 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:18:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T09:18:20.018+0800');
2020-07-11 09:18:23.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:18:30.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:18:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:18:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:18:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:18:30.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:18:30.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:18:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:18:30.019+0800');
2020-07-11 09:18:35.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:18:40.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:18:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:18:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:18:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:18:40.037 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:18:40.041 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:18:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:18:40.013+0800');
2020-07-11 09:18:47.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:18:50.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:18:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:18:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:18:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:18:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:18:50.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:18:50.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:18:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:18:50.019+0800');
2020-07-11 09:18:59.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:19:00.013 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:19:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:19:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:19:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:19:00.039 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:19:00.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:19:00.013+0800');
2020-07-11 09:19:11.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:19:20.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:19:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:19:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:19:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:19:20.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:19:20.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:19:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:19:20.016+0800');
2020-07-11 09:19:23.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:19:30.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:19:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:19:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:19:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:19:30.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:19:30.047 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:19:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:19:30.019+0800');
2020-07-11 09:19:35.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:19:40.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:19:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:19:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:19:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:19:40.036 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:19:40.038 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:19:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:19:40.009+0800');
2020-07-11 09:19:47.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:19:50.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:19:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:19:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:19:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:19:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:19:50.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:19:50.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:19:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:19:50.019+0800');
2020-07-11 09:19:51.532 febs [AmqpProvider :(2):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - Transport failed: 远程主机强迫关闭了一个现有的连接。
2020-07-11 09:19:51.566 febs [QpidJMS Connection Executor: ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:19:51.595 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[1] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:51.642 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[2] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:51.712 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[3] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:51.843 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[4] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:52.094 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[5] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:52.582 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[6] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:53.554 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[7] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:55.482 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[8] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:59.332 febs [FailoverProvider: async work thread] INFO  o.a.q.j.p.failover.FailoverProvider - Connection attempt:[9] to: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1 failed
2020-07-11 09:19:59.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:20:00.012 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:20:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:20:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:20:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:20:00.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 09:20:00.053 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T09:20:00.012+0800');
2020-07-11 09:20:07.782 febs [AmqpProvider :(12):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 09:20:08.335 febs [QpidJMS Connection Executor: ID:e0c70bcc-087a-4cbf-83d6-5d28619e5fae:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionRestored, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:20:11.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:20:20.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:20:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:20:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:20:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:20:20.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:20:20.046 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:20:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:20:20.016+0800');
2020-07-11 09:20:23.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:20:30.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:20:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:20:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:20:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:20:30.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:20:30.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:20:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:20:30.018+0800');
2020-07-11 09:20:35.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:20:40.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:20:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:20:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:20:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:20:40.038 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:20:40.041 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:20:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:20:40.010+0800');
2020-07-11 09:20:47.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:20:50.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:20:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:20:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:20:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:20:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:20:50.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:20:50.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:20:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:20:50.018+0800');
2020-07-11 09:20:59.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594428966803_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:21:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:21:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:21:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:21:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:21:00.039 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:21:00.042 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:21:00.011+0800');
2020-07-11 09:21:05.686 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428966803 paused.
2020-07-11 09:21:05.702 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-07-11 09:21:05.706 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-07-11 09:21:05.706 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428966803 shutting down.
2020-07-11 09:21:05.706 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428966803 paused.
2020-07-11 09:21:05.708 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594428966803 shutdown complete.
2020-07-11 09:21:05.712 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-07-11 09:21:05.713 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-07-11 09:21:05.721 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-07-11 09:21:12.987 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 3092 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 09:21:12.990 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 09:21:15.553 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 09:21:15.555 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 09:21:15.647 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75ms. Found 0 repository interfaces.
2020-07-11 09:21:16.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.548 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$356a438b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbdbd2ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$afd449e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.738 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$64899af4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@79ba0a6f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$895e3da6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:16.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:21:17.154 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 09:21:17.168 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 09:21:17.176 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 09:21:17.176 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 09:21:17.183 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 09:21:17.287 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 09:21:17.287 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4234 ms
2020-07-11 09:21:17.616 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 09:21:17.624 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 09:21:18.115 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 09:21:18.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 09:21:18.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 09:21:18.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 09:21:18.611 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 09:21:20.660 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 09:21:20.691 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 09:21:20.702 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 09:21:20.702 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 09:21:20.705 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 09:21:20.707 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 09:21:20.708 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594430480692'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 09:21:20.708 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 09:21:20.708 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 09:21:20.709 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@8ee03f5
2020-07-11 09:21:20.782 febs [main] INFO  p6spy - 2020-07-11 09:21:20 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 09:21:21.882 febs [main] INFO  p6spy - 2020-07-11 09:21:21 | 耗时 11 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 09:21:22.719 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 09:21:22.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 09:21:22.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 09:21:23.017 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@568c9ee1, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c7f804c, org.springframework.security.web.header.HeaderWriterFilter@36349e29, org.springframework.security.web.authentication.logout.LogoutFilter@b87ea8b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6074d638, org.springframework.security.web.session.ConcurrentSessionFilter@63ad5fe7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@259aec72, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27682fa9, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@546c30c2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b839f68, org.springframework.security.web.session.SessionManagementFilter@5aeebccc, org.springframework.security.web.access.ExceptionTranslationFilter@2a60981c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60e80279]
2020-07-11 09:21:23.065 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 09:21:23.079 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 09:21:23.081 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 09:21:23.453 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 09:21:24.005 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 09:21:24.022 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 09:21:24.085 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 09:21:24.105 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 09:21:24.119 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 09:21:24.137 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 09:21:24.140 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.939 seconds (JVM running for 13.014)
2020-07-11 09:21:24.163 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 09:21:24.163 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 09:21:24.163 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 09:21:24.163 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 09:21:24.164 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.43.46:8099/login
2020-07-11 09:21:24.935 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 09:21:25.106 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 09:21:25.118 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 09:21:25.118 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594428966803"'s failed in-progress jobs.
2020-07-11 09:21:25.133 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594430480692 started.
2020-07-11 09:21:25.139 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:21:25.330 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:94d1ece2-487e-4ef9-b245-94dc91c7a3c0:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 09:21:25.331 febs [QpidJMS Connection Executor: ID:94d1ece2-487e-4ef9-b245-94dc91c7a3c0:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:21:25.989 febs [RMI TCP Connection(7)-192.168.43.46] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 09:21:25.989 febs [RMI TCP Connection(7)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 09:21:26.004 febs [RMI TCP Connection(6)-192.168.43.46] INFO  p6spy - 2020-07-11 09:21:26 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 09:21:26.006 febs [RMI TCP Connection(7)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-07-11 09:21:30.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:21:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:21:30.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:21:30.108 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:21:30.111 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：75 毫秒
2020-07-11 09:21:30.125 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:21:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 75, '2020-07-11T09:21:30.036+0800');
2020-07-11 09:21:37.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:21:40.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:21:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:21:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:21:40.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:21:40.062 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 09:21:40.067 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:21:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T09:21:40.023+0800');
2020-07-11 09:21:49.138 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:21:50.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:21:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:21:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:21:50.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:21:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:21:50.052 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 09:21:50.056 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:21:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T09:21:50.017+0800');
2020-07-11 09:22:01.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:22:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:22:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:22:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:22:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:22:10.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 09:22:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T09:22:10.018+0800');
2020-07-11 09:22:13.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:22:20.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:22:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:22:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:22:20.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:22:20.056 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 09:22:20.060 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:22:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T09:22:20.018+0800');
2020-07-11 09:22:25.138 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:22:30.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:22:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:22:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:22:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:22:30.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:22:30.055 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:22:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:22:30.019+0800');
2020-07-11 09:22:37.141 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:22:40.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:22:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:22:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:22:40.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:22:40.059 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 09:22:40.063 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:22:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T09:22:40.021+0800');
2020-07-11 09:22:49.141 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:22:50.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:22:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:22:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:22:50.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:22:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:22:50.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:22:50.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:22:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:22:50.018+0800');
2020-07-11 09:23:01.141 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:23:10.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:23:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:23:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:23:10.088 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:23:10.090 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：70 毫秒
2020-07-11 09:23:10.095 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 70, '2020-07-11T09:23:10.020+0800');
2020-07-11 09:23:13.142 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430480692_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:23:17.429 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17512 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 09:23:17.431 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 09:23:18.819 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 09:23:18.821 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 09:23:18.893 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 09:23:19.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e57d84b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4c9677a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$88c1dea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3d772fb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@629e8212' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$624bd266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 09:23:19.982 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 09:23:19.995 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 09:23:20.004 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 09:23:20.004 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 09:23:20.011 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 09:23:20.114 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 09:23:20.114 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2629 ms
2020-07-11 09:23:20.449 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 09:23:20.456 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 09:23:20.893 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 09:23:20.893 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 09:23:20.894 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 09:23:20.894 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 09:23:21.356 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 09:23:23.304 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 09:23:23.333 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 09:23:23.344 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 09:23:23.344 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 09:23:23.347 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 09:23:23.349 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 09:23:23.349 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594430603334'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 09:23:23.349 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 09:23:23.350 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 09:23:23.351 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c682e26
2020-07-11 09:23:23.420 febs [main] INFO  p6spy - 2020-07-11 09:23:23 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 09:23:24.442 febs [main] INFO  p6spy - 2020-07-11 09:23:24 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 09:23:25.298 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 09:23:25.536 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 09:23:25.537 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 09:23:25.603 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36b761e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@37f71e8, org.springframework.security.web.header.HeaderWriterFilter@67823972, org.springframework.security.web.authentication.logout.LogoutFilter@e3692ca, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1c7744c1, org.springframework.security.web.session.ConcurrentSessionFilter@594c66c3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@397dfbe8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2555a986, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@486dd616, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e27d97b, org.springframework.security.web.session.SessionManagementFilter@16c9e378, org.springframework.security.web.access.ExceptionTranslationFilter@27682fa9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67292fc7]
2020-07-11 09:23:25.650 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 09:23:25.668 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 09:23:25.669 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 09:23:26.024 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 09:23:26.559 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 09:23:26.573 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 09:23:26.630 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 09:23:26.650 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 09:23:26.663 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 09:23:26.681 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 09:23:26.684 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 9.95 seconds (JVM running for 11.191)
2020-07-11 09:23:26.706 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 09:23:26.707 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 09:23:26.707 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 09:23:26.707 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 09:23:26.707 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.43.46:8099/login
2020-07-11 09:23:27.405 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 09:23:27.651 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 09:23:27.666 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594430603334 started.
2020-07-11 09:23:27.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:23:27.719 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:2471b253-7daa-45d2-b447-87dd009912f1:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 09:23:27.720 febs [QpidJMS Connection Executor: ID:2471b253-7daa-45d2-b447-87dd009912f1:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:23:28.258 febs [RMI TCP Connection(3)-192.168.43.46] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 09:23:28.258 febs [RMI TCP Connection(3)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 09:23:28.269 febs [RMI TCP Connection(2)-192.168.43.46] INFO  p6spy - 2020-07-11 09:23:28 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 09:23:28.271 febs [RMI TCP Connection(3)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-07-11 09:23:30.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:23:30.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:23:30.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:23:30.103 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:23:30.105 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-07-11 09:23:30.119 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:23:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-07-11T09:23:30.047+0800');
2020-07-11 09:23:39.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:23:40.013 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:23:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:23:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:23:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:23:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:23:40.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 09:23:40.053 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:23:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T09:23:40.013+0800');
2020-07-11 09:23:42.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 09:23:42.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594430480692"'s failed in-progress jobs.
2020-07-11 09:23:42.677 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 09:23:51.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:24:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:24:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:24:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:24:00.053 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 09:24:00.057 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T09:24:00.019+0800');
2020-07-11 09:24:03.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:24:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:24:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:24:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:24:10.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 09:24:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T09:24:10.022+0800');
2020-07-11 09:24:15.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:20.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:24:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:24:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:24:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:24:20.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:24:20.058 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:24:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:24:20.021+0800');
2020-07-11 09:24:27.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:30.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:24:30.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:24:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:24:30.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:24:30.057 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-07-11 09:24:30.063 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:24:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-07-11T09:24:30.011+0800');
2020-07-11 09:24:39.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:40.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:24:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:24:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:24:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:24:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:24:40.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:24:40.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:24:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:24:40.018+0800');
2020-07-11 09:24:40.914 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - Transport failed: 远程主机强迫关闭了一个现有的连接。
2020-07-11 09:24:40.955 febs [QpidJMS Connection Executor: ID:2471b253-7daa-45d2-b447-87dd009912f1:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:24:42.910 febs [AmqpProvider :(2):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 09:24:44.620 febs [QpidJMS Connection Executor: ID:2471b253-7daa-45d2-b447-87dd009912f1:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionRestored, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 09:24:48.001 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:48.021 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:48.033 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:48.039 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:48.044 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:48.051 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:24:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:51.596 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:51.605 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:51.611 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:51.619 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:51.628 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:51.635 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:24:51 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:51.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:24:52.855 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:52.860 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:52.868 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:52.873 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:52.878 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:52.885 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:24:52 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:53.587 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:53.595 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:53.602 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:53.607 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:53.613 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:53.621 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:24:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:54.199 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:54.204 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:54.212 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:54.217 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:54.223 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:54.228 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:54.929 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:54.934 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:54.942 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:54.946 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:54.952 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:54.958 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:24:54 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:24:55.476 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:24:55.482 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:24:55.488 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:24:55.493 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:24:55.499 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:24:55.506 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:24:55 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:25:00.014 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:25:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:25:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:25:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:25:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:25:00.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:25:00.014+0800');
2020-07-11 09:25:03.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:25:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:25:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:25:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:25:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:25:10.051 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:25:10.054 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:25:10.021+0800');
2020-07-11 09:25:15.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:25:20.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:25:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:25:20.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:25:20.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:25:20.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:25:20.074 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:25:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:25:20.042+0800');
2020-07-11 09:25:27.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:25:28.262 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:25:28.266 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:25:28.272 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:25:28.280 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:25:28.284 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:25:28.291 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:25:28 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:25:30.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:25:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:25:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:25:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:25:30.047 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:25:30.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:25:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:25:30.019+0800');
2020-07-11 09:25:34.017 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:25:34.022 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:25:34.029 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:25:34.034 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:25:34.038 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:25:34.043 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:25:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:25:39.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:25:40.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:25:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:25:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:25:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:25:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:25:40.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:25:40.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:25:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:25:40.016+0800');
2020-07-11 09:25:51.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:26:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:26:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:26:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:26:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:26:00.048 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:26:00.052 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:26:00.021+0800');
2020-07-11 09:26:03.676 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:26:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:26:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:26:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:26:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:26:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:26:10.054 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:26:10.019+0800');
2020-07-11 09:26:15.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:26:20.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:26:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:26:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:26:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:26:20.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:26:20.053 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:26:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:26:20.020+0800');
2020-07-11 09:26:21.733 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:26:21 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 8, 16;
2020-07-11 09:26:27.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:26:30.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:26:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:26:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:26:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:26:30.050 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:26:30.053 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:26:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:26:30.022+0800');
2020-07-11 09:26:39.679 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:26:40.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:26:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:26:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:26:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:26:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:26:40.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:26:40.047 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:26:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:26:40.018+0800');
2020-07-11 09:26:51.680 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:27:00.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:27:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:27:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:27:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:27:00.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:27:00.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:27:00.022+0800');
2020-07-11 09:27:03.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:27:10.044 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:27:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:27:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:27:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:27:10.070 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:27:10.073 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:27:10.044+0800');
2020-07-11 09:27:15.681 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:27:20.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:27:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:27:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:27:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:27:20.048 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:27:20.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:27:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:27:20.019+0800');
2020-07-11 09:27:27.681 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:27:30.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:27:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:27:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:27:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:27:30.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:27:30.052 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:27:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:27:30.018+0800');
2020-07-11 09:27:39.680 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:27:40.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:27:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:27:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:27:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:27:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:27:40.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:27:40.045 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:27:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:27:40.017+0800');
2020-07-11 09:27:51.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:28:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:28:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:28:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:28:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:28:00.056 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 09:28:00.059 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T09:28:00.022+0800');
2020-07-11 09:28:03.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:28:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:28:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:28:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:28:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:28:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:28:10.018+0800');
2020-07-11 09:28:15.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:28:20.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:28:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:28:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:28:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:28:20.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:28:20.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:28:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:28:20.021+0800');
2020-07-11 09:28:27.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:28:30.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:28:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:28:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:28:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:28:30.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:28:30.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:28:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:28:30.018+0800');
2020-07-11 09:28:39.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:28:40.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:28:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:28:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:28:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:28:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:28:40.042 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:28:40.044 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:28:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:28:40.018+0800');
2020-07-11 09:28:51.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:29:00.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:29:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:29:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:29:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:29:00.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:29:00.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:29:00.023+0800');
2020-07-11 09:29:03.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:29:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:29:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:29:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:29:10.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:29:10.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:29:10.021+0800');
2020-07-11 09:29:15.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:29:20.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:29:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:29:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:29:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:29:20.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:29:20.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:29:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:29:20.018+0800');
2020-07-11 09:29:27.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:29:30.037 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:29:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:29:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:29:30.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:29:30.068 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:29:30.071 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:29:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:29:30.037+0800');
2020-07-11 09:29:39.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:29:40.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:29:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:29:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:29:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:29:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:29:40.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 09:29:40.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:29:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T09:29:40.011+0800');
2020-07-11 09:29:51.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:30:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:30:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:30:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:30:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:30:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:30:00.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:30:00.022+0800');
2020-07-11 09:30:03.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:30:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:30:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:30:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:30:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:30:10.076 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 09:30:10.079 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T09:30:10.044+0800');
2020-07-11 09:30:15.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:30:20.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:30:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:30:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:30:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:30:20.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:30:20.052 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:30:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:30:20.022+0800');
2020-07-11 09:30:27.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:30:30.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:30:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:30:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:30:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:30:30.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:30:30.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:30:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:30:30.019+0800');
2020-07-11 09:30:39.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:30:40.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:30:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:30:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:30:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:30:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:30:40.048 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:30:40.051 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:30:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:30:40.019+0800');
2020-07-11 09:30:51.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:31:00.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:31:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:31:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:31:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:31:00.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:31:00.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:31:00.022+0800');
2020-07-11 09:31:03.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:31:10.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:31:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:31:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:31:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:31:10.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:31:10.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:31:10.020+0800');
2020-07-11 09:31:15.691 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:31:20.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:31:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:31:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:31:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:31:20.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:31:20.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:31:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:31:20.019+0800');
2020-07-11 09:31:27.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:31:30.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:31:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:31:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:31:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:31:30.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:31:30.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:31:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:31:30.021+0800');
2020-07-11 09:31:39.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:31:40.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:31:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:31:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:31:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:31:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:31:40.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:31:40.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:31:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:31:40.017+0800');
2020-07-11 09:31:51.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:32:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:32:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:32:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:32:00.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:32:00.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:32:00.019+0800');
2020-07-11 09:32:03.691 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:32:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:32:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:32:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:32:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:32:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:32:10.016+0800');
2020-07-11 09:32:15.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:20.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:32:20.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:32:20.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:32:20.108 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:32:20.109 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：84 毫秒
2020-07-11 09:32:20.113 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:32:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 84, '2020-07-11T09:32:20.025+0800');
2020-07-11 09:32:27.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:30.012 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:32:30.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:30 | 耗时 21 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:32:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:32:30.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:32:30.059 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-07-11 09:32:30.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:32:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-07-11T09:32:30.012+0800');
2020-07-11 09:32:39.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:40.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:32:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:32:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:32:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:32:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:32:40.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:32:40.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:32:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:32:40.017+0800');
2020-07-11 09:32:51.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:32:58.223 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:32:58.228 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:32:58.232 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:32:58.236 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:32:58.239 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:32:58.244 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:32:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:33:00.012 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:33:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:33:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:33:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:33:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 09:33:00.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T09:33:00.012+0800');
2020-07-11 09:33:03.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:33:09.605 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:33:09.609 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:33:09.613 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:33:09.617 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:33:09.622 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:33:09.627 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:33:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:33:10.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:33:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:33:10.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:33:10.052 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:33:10.019+0800');
2020-07-11 09:33:15.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:33:20.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:33:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:33:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:33:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:33:20.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:33:20.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:33:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:33:20.017+0800');
2020-07-11 09:33:22.157 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:33:22.160 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:33:22.165 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:33:22.169 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:33:22.175 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:33:22.179 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:33:22 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:33:27.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:33:30.009 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:33:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:33:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:33:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:33:30.034 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:33:30.036 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:33:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:33:30.009+0800');
2020-07-11 09:33:35.032 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:33:35.036 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:33:35.039 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:33:35.044 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:33:35.048 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:33:35.052 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:33:39.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:33:40.015 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:33:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:33:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:33:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:33:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:33:40.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:33:40.040 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:33:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:33:40.015+0800');
2020-07-11 09:33:51.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:34:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:34:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:34:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:34:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:34:00.037 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:34:00.040 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:34:00.011+0800');
2020-07-11 09:34:03.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:34:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:34:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:34:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:34:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:34:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:34:10.020+0800');
2020-07-11 09:34:15.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:34:20.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:34:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:34:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:34:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:34:20.041 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:34:20.044 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:34:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:34:20.018+0800');
2020-07-11 09:34:23.320 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:34:23.324 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:34:23.327 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:34:23.330 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:34:23.335 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:34:23.339 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:34:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:34:27.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:34:30.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:34:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:34:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:34:30.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:34:30.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:34:30.035 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:34:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:34:30.009+0800');
2020-07-11 09:34:39.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:34:40.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:34:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:34:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:34:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:34:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:34:40.043 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:34:40.046 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:34:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:34:40.017+0800');
2020-07-11 09:34:51.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:35:00.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:35:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:35:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:35:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:35:00.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:35:00.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:35:00.019+0800');
2020-07-11 09:35:03.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:35:10.015 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:35:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:35:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:35:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:35:10.040 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:35:10.042 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:35:10.015+0800');
2020-07-11 09:35:15.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:35:20.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:35:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:35:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:35:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:35:20.055 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 09:35:20.062 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:35:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T09:35:20.019+0800');
2020-07-11 09:35:21.505 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:35:21.508 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:35:21.512 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:35:21.516 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:35:21.521 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:35:21.525 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:35:21 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:35:27.697 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:35:30.006 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:35:30.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:35:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:35:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:35:30.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:35:30.033 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:35:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:35:30.006+0800');
2020-07-11 09:35:39.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:35:40.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:35:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:35:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:35:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:35:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:35:40.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:35:40.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:35:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:35:40.016+0800');
2020-07-11 09:35:51.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:36:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:36:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:36:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:36:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:36:00.038 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:36:00.041 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:36:00.013+0800');
2020-07-11 09:36:03.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:36:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:36:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:36:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:36:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:36:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:36:10.017+0800');
2020-07-11 09:36:15.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:36:20.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:36:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:36:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:36:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:36:20.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:36:20.047 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:36:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:36:20.019+0800');
2020-07-11 09:36:27.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:36:30.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:36:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:36:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:36:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:36:30.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:36:30.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:36:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:36:30.020+0800');
2020-07-11 09:36:39.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:36:40.007 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:36:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:36:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:36:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:36:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:36:40.031 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:36:40.034 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:36:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:36:40.007+0800');
2020-07-11 09:36:47.301 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:36:47 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 8, 16;
2020-07-11 09:36:51.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:37:00.014 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:37:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:37:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:37:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:37:00.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:37:00.042 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:37:00.014+0800');
2020-07-11 09:37:03.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:37:10.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:37:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:37:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:37:10.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:37:10.097 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 09:37:10.100 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T09:37:10.049+0800');
2020-07-11 09:37:15.702 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:37:20.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:37:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:37:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:37:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:37:20.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:37:20.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:37:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:37:20.020+0800');
2020-07-11 09:37:27.702 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:37:30.010 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:37:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:37:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:37:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:37:30.035 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:37:30.038 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:37:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:37:30.010+0800');
2020-07-11 09:37:39.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:37:40.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:37:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:37:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:37:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:37:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:37:40.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:37:40.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:37:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:37:40.009+0800');
2020-07-11 09:37:51.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:38:00.010 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:38:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:38:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:38:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:38:00.037 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:38:00.039 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:38:00.010+0800');
2020-07-11 09:38:03.706 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:38:10.015 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:38:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:38:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:38:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:38:10.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:38:10.015+0800');
2020-07-11 09:38:15.723 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:38:20.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:38:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:38:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:38:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:38:20.041 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 09:38:20.044 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:38:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T09:38:20.009+0800');
2020-07-11 09:38:27.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:38:30.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:38:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:38:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:38:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:38:30.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:38:30.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:38:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:38:30.011+0800');
2020-07-11 09:38:31.013 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:38:31.018 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:38:31.022 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:38:31.027 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:38:31.031 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:38:31.035 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:38:31 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:38:39.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:38:40.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:38:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:38:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:38:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:38:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:38:40.041 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:38:40.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:38:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:38:40.017+0800');
2020-07-11 09:38:51.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:39:00.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:39:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:39:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:39:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:39:00.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:39:00.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:39:00.023+0800');
2020-07-11 09:39:03.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:39:10.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:39:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:39:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:39:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:39:10.073 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:39:10.075 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:39:10.043+0800');
2020-07-11 09:39:15.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:39:20.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:39:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:39:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:39:20.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:39:20.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:39:20.076 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:39:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:39:20.042+0800');
2020-07-11 09:39:27.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:39:30.007 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:39:30.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:39:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:39:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:39:30.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:39:30.032 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:39:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:39:30.007+0800');
2020-07-11 09:39:36.891 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:39:36.897 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:39:36.901 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:39:36.905 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:39:36.910 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:39:36.914 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:39:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:39:39.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:39:40.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:39:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:39:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:39:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:39:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:39:40.034 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:39:40.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:39:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:39:40.008+0800');
2020-07-11 09:39:41.425 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:39:41.428 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:39:41.430 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:39:41.434 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:39:41.440 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:39:41.443 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:39:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:39:51.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:40:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:40:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:40:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:40:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:40:00.037 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:40:00.039 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:40:00.011+0800');
2020-07-11 09:40:03.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:40:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:40:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:40:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:40:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:40:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:40:10.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:40:10.020+0800');
2020-07-11 09:40:15.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:40:20.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:40:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:40:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:40:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:40:20.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:40:20.047 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:40:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:40:20.020+0800');
2020-07-11 09:40:27.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:40:30.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:40:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:40:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:40:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:40:30.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:40:30.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:40:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:40:30.010+0800');
2020-07-11 09:40:39.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:40:40.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:40:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:40:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:40:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:40:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:40:40.032 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:40:40.034 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:40:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:40:40.008+0800');
2020-07-11 09:40:51.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:41:00.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:41:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:41:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:41:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:41:00.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:41:00.038 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:41:00.011+0800');
2020-07-11 09:41:03.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:41:10.010 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:41:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:41:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:41:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:41:10.042 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 09:41:10.045 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T09:41:10.010+0800');
2020-07-11 09:41:10.223 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:41:10.228 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:41:10.231 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:41:10.235 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:41:10.240 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:41:10.244 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:41:15.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:41:20.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:41:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:41:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:41:20.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:41:20.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:41:20.041 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:41:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:41:20.010+0800');
2020-07-11 09:41:27.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:41:30.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:41:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:41:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:41:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:41:30.041 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:41:30.044 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:41:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:41:30.017+0800');
2020-07-11 09:41:39.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:41:40.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:41:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:41:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:41:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:41:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:41:40.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:41:40.035 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:41:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:41:40.009+0800');
2020-07-11 09:41:51.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:42:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:42:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:42:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:42:00.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:42:00.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:42:00.023+0800');
2020-07-11 09:42:03.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:42:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:42:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:42:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:42:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:42:10.020+0800');
2020-07-11 09:42:15.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:20.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:42:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:42:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:42:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:42:20.048 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:42:20.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:42:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:42:20.022+0800');
2020-07-11 09:42:27.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:30.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:42:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:42:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:42:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:42:30.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:42:30.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:42:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:42:30.020+0800');
2020-07-11 09:42:39.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:40.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:42:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:42:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:42:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:42:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:42:40.037 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:42:40.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:42:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:42:40.009+0800');
2020-07-11 09:42:51.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:42:59.347 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:42:59.350 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:42:59.354 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:42:59.358 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:42:59.363 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:42:59.367 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:42:59 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:43:00.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:43:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:43:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:43:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:43:00.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:43:00.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:43:00.021+0800');
2020-07-11 09:43:03.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:43:10.077 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:43:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:43:10.086 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:43:10.200 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:10 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:43:10.267 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：190 毫秒
2020-07-11 09:43:10.304 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:43:10 | 耗时 32 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 190, '2020-07-11T09:43:10.077+0800');
2020-07-11 09:43:15.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:43:20.184 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:43:20.257 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:43:20.260 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:43:20.291 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:43:20.292 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：108 毫秒
2020-07-11 09:43:20.297 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:43:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 108, '2020-07-11T09:43:20.184+0800');
2020-07-11 09:43:27.732 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:43:30.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:43:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:43:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:43:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:43:30.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:43:30.046 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:43:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:43:30.018+0800');
2020-07-11 09:43:39.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:43:40.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:43:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:43:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:43:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:43:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:43:40.038 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:43:40.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:43:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:43:40.010+0800');
2020-07-11 09:43:51.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:44:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:44:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:44:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:44:00.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:44:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:44:00.020+0800');
2020-07-11 09:44:03.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:10.143 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:44:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:44:10.153 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:44:10.186 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:44:10.187 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-07-11 09:44:10.191 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-07-11T09:44:10.143+0800');
2020-07-11 09:44:15.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:20.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:44:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:44:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:44:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:44:20.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:44:20.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:44:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:44:20.020+0800');
2020-07-11 09:44:27.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:30.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:44:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:44:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:44:30.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:44:30.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:44:30.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:44:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:44:30.011+0800');
2020-07-11 09:44:39.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:40.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:44:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:44:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:44:40.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:44:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:44:40.054 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 09:44:40.068 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:44:40 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T09:44:40.021+0800');
2020-07-11 09:44:51.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:44:57.034 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:44:57.037 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:44:57.042 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:44:57.047 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:44:57.052 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:44:57.056 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:44:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:45:00.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:45:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:45:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:45:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:45:00.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 09:45:00.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T09:45:00.018+0800');
2020-07-11 09:45:03.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:45:10.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:45:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:45:10.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:45:10.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:45:10.018+0800');
2020-07-11 09:45:15.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:45:20.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:45:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:45:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:45:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:45:20.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:45:20.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:45:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:45:20.018+0800');
2020-07-11 09:45:26.183 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:45:26.187 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:45:26.191 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:45:26.196 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:45:26.200 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:45:26.204 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:45:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:45:27.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:45:30.007 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:45:30.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:45:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:45:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:45:30.029 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:45:30.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:45:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:45:30.007+0800');
2020-07-11 09:45:33.401 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:45:33.404 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:45:33.408 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:45:33.412 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:45:33.417 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:45:33.421 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:45:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:45:34.959 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:45:34.962 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:45:34.965 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:45:34.970 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:45:34.974 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:45:34.978 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:45:39.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:45:40.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:45:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:45:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:45:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:45:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:45:40.034 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:45:40.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:45:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:45:40.009+0800');
2020-07-11 09:45:41.805 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:45:41.808 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:45:41.811 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:45:41.815 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:45:41.821 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:45:41.825 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:45:41 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:45:51.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:46:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:46:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:46:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:46:00.038 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:46:00.040 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:46:00.013+0800');
2020-07-11 09:46:03.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:46:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:46:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:46:10.017+0800');
2020-07-11 09:46:15.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:20.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:46:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:46:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:46:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:46:20.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:46:20.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:46:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:46:20.020+0800');
2020-07-11 09:46:23.037 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:46:23.041 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:46:23.046 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:46:23.051 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:46:23.055 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:46:23.058 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:46:23 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:46:27.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:30.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:46:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:46:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:46:30.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:46:30.036 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:46:30.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:46:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:46:30.010+0800');
2020-07-11 09:46:36.332 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:46:36.337 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:46:36.341 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:46:36.345 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:46:36.350 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:46:36.355 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:46:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:46:39.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:40.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:46:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:46:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:46:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:46:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:46:40.031 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:46:40.033 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:46:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:46:40.008+0800');
2020-07-11 09:46:51.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:46:56.902 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:46:56.906 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:46:56.909 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:46:56.913 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:46:56.917 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:46:56.923 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:46:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:46:58.686 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:46:58.690 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:46:58.694 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:46:58.698 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:46:58.704 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:46:58.709 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:46:58 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:47:00.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:47:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:47:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:47:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:47:00.036 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:47:00.038 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:47:00.011+0800');
2020-07-11 09:47:02.797 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:47:02.800 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:47:02.805 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:47:02.809 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:47:02.814 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:47:02.820 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:47:02 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:47:03.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:47:10.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:47:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:47:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:47:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:47:10.034 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:47:10.037 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:47:10.010+0800');
2020-07-11 09:47:15.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:47:17.211 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:47:17 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = 'null' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 09:47:20.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:47:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:47:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:47:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:47:20.032 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:47:20.035 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:47:20.009+0800');
2020-07-11 09:47:20.333 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:47:20.337 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:47:20.340 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:47:20.343 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:47:20.348 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:47:20.353 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:47:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:47:27.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:47:30.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:47:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:47:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:47:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:47:30.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:47:30.047 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:47:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:47:30.020+0800');
2020-07-11 09:47:39.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:47:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:47:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:47:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:47:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:47:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:47:40.032 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:47:40.034 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:47:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:47:40.009+0800');
2020-07-11 09:47:51.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:48:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:48:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:48:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:48:00.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:48:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:48:00.022+0800');
2020-07-11 09:48:03.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:48:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:48:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:48:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:48:10.018+0800');
2020-07-11 09:48:15.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:20.088 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:48:20.112 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:20 | 耗时 5 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:48:20.115 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:48:20.231 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:48:20.232 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：144 毫秒
2020-07-11 09:48:20.236 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:48:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 144, '2020-07-11T09:48:20.088+0800');
2020-07-11 09:48:25.423 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:48:25.427 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:48:25.431 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:48:25.436 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:48:25.441 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:48:25.446 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:48:25 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:48:26.264 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:48:26.268 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:48:26.272 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:48:26.276 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:48:26.281 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:48:26.285 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:48:27.674 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 09:48:27.677 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:48:27.680 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:48:27.686 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:48:27.690 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:48:27.694 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:48:27.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:30.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:48:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:48:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:48:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:48:30.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:48:30.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:48:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:48:30.017+0800');
2020-07-11 09:48:39.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:40.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:48:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:48:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:48:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:48:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:48:40.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:48:40.038 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:48:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:48:40.009+0800');
2020-07-11 09:48:51.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:48:55.935 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 09:48:55 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = 'null' LIMIT 0, 8;
2020-07-11 09:48:56.640 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:48:56 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = 'null' LIMIT 0, 8;
2020-07-11 09:48:57.569 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:48:57 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = 'null' LIMIT 0, 8;
2020-07-11 09:48:58.198 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:48:58 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = 'null' LIMIT 0, 8;
2020-07-11 09:49:00.026 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:49:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:49:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:49:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:49:00.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:49:00.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:49:00.026+0800');
2020-07-11 09:49:03.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:49:10.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:49:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:49:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:49:10.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:49:10.052 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:49:10.020+0800');
2020-07-11 09:49:15.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:49:20.053 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:49:20.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:49:20.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:49:20.086 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:49:20.087 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 09:49:20.089 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:49:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T09:49:20.053+0800');
2020-07-11 09:49:27.750 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:49:30.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:49:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:49:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:49:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:49:30.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:49:30.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:49:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:49:30.019+0800');
2020-07-11 09:49:38.159 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 09:49:38 | 耗时 0 ms | SQL 语句：
SELECT a.* FROM a_account a WHERE a.kh_account = 'fxp' AND a.kh_pwd = '123456';
2020-07-11 09:49:38.164 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D258852BF94C9D41078AB8980B0B2D8B
2020-07-11 09:49:38.264 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:49:38 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:49:38.269 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:49:38 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:49:39.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:49:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:49:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:49:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:49:40.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:49:40.059 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 09:49:40.061 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T09:49:40.018+0800');
2020-07-11 09:49:40.575 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:49:40.579 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:49:40.582 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:49:40.585 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:49:40.588 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:49:40.594 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:49:46.303 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 09:49:46.306 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 09:49:46.380 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:49:46.384 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:49:46.392 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:49:46.407 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 09:49:46.411 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 09:49:46.414 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:49:46.418 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 09:49:46.421 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 09:49:46.425 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:49:46.428 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 09:49:46.430 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 09:49:46.435 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:49:46.439 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 09:49:46.441 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 09:49:46.445 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:49:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:49:48.172 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:49:48.175 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:49:48.180 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:49:48.185 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:49:48.189 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:49:48.193 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 09:49:48 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:49:51.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:50:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:50:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:50:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:50:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:50:00.047 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:50:00.021+0800');
2020-07-11 09:50:03.758 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:50:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:50:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:50:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:50:10.018+0800');
2020-07-11 09:50:15.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:20.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:50:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:50:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:50:20.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:50:20.068 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:50:20.071 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:50:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:50:20.043+0800');
2020-07-11 09:50:26.475 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:50:26.479 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:50:26.483 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:50:26.486 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:50:26.490 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:50:26.494 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:50:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:50:27.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:30.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:50:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:50:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:50:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:50:30.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:50:30.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:50:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:50:30.017+0800');
2020-07-11 09:50:33.394 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 09:50:33.398 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 09:50:33.400 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 09:50:33.403 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 09:50:33.407 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 09:50:33.411 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 09:50:39.756 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:40.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:50:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:50:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:50:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:50:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:50:40.042 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:50:40.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:50:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:50:40.016+0800');
2020-07-11 09:50:51.756 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:50:53.919 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:50:53 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:50:53.924 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:50:53 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:51:00.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:51:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:51:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:51:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:51:00.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:51:00.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:51:00.019+0800');
2020-07-11 09:51:03.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:51:10.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:51:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:51:10.047 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:51:10.050 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:51:10.017+0800');
2020-07-11 09:51:15.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:51:20.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:51:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:51:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:51:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:51:20.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 09:51:20.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T09:51:20.020+0800');
2020-07-11 09:51:27.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:51:30.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:51:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:51:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:51:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:51:30.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:51:30.041 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:51:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:51:30.016+0800');
2020-07-11 09:51:39.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:51:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:51:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:51:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:51:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:51:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:51:40.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:51:40.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:51:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:51:40.009+0800');
2020-07-11 09:51:51.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:52:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:52:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:52:00.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:00 | 耗时 18 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:52:00.082 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-07-11 09:52:00.086 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-07-11T09:52:00.030+0800');
2020-07-11 09:52:03.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:52:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:52:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:52:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:52:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:52:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:52:10.019+0800');
2020-07-11 09:52:15.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:20.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:52:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:52:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:52:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:52:20.041 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:52:20.043 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:52:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:52:20.017+0800');
2020-07-11 09:52:27.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:30.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:52:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:52:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:52:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:52:30.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:52:30.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:52:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:52:30.021+0800');
2020-07-11 09:52:39.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:40.006 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:52:40.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:52:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:52:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:52:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:52:40.029 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:52:40.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:52:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:52:40.006+0800');
2020-07-11 09:52:51.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:52:59.177 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:52:59 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:52:59.181 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:52:59 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:53:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:53:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:53:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:53:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:53:00.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:53:00.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:53:00.020+0800');
2020-07-11 09:53:03.761 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:53:10.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:53:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:53:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:53:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:53:10.053 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 09:53:10.056 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T09:53:10.023+0800');
2020-07-11 09:53:12.237 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:53:12 | 耗时 3 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:53:12.241 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:53:12 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:53:14.002 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:53:14 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_feed_info;
2020-07-11 09:53:14.014 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 09:53:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_feed_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 09:53:14.499 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:53:14 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_heart_info;
2020-07-11 09:53:14.501 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 09:53:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, power, period_id, heart_state, heart_temperature, state, creator, create_date, modifier, mod_date FROM a_equipment_heart_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 09:53:15.009 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:53:15 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_roller_info;
2020-07-11 09:53:15.011 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 09:53:15 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 09:53:15.012 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:53:15 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_energy_info;
2020-07-11 09:53:15.013 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 09:53:15 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, current_a, current_b, current_c, voltage_b, voltage_a, voltage_c, power_a, power_b, power_c, state, creator, create_date, modifier, mod_date FROM a_equipment_energy_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 09:53:15.591 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 09:53:15 | 耗时 3 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info;
2020-07-11 09:53:15.761 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:53:16.091 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 09:53:16 | 耗时 5 ms | SQL 语句：
SELECT id, sb_code, power, period_id, heart_state, heart_temperature, state, creator, create_date, modifier, mod_date FROM a_equipment_heart_info;
2020-07-11 09:53:20.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:53:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:53:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:53:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:53:20.040 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:53:20.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:53:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:53:20.017+0800');
2020-07-11 09:53:21.448 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:53:21 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 09:53:21.452 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 09:53:21 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 09:53:27.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:53:30.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:53:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:53:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:53:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:53:30.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:53:30.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:53:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:53:30.020+0800');
2020-07-11 09:53:39.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:53:40.006 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:53:40.008 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:53:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:53:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:53:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:53:40.031 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:53:40.033 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:53:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:53:40.006+0800');
2020-07-11 09:53:51.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:54:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:54:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:54:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:54:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:54:00.048 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:54:00.051 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:54:00.020+0800');
2020-07-11 09:54:03.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:54:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:54:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:54:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:54:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:54:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:54:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:54:10.016+0800');
2020-07-11 09:54:15.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:54:20.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:54:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:54:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:54:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:54:20.040 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:54:20.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:54:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:54:20.017+0800');
2020-07-11 09:54:27.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:54:30.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:54:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:54:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:54:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:54:30.038 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:54:30.041 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:54:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:54:30.016+0800');
2020-07-11 09:54:39.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:54:40.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:54:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:54:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:54:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:54:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:54:40.036 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 09:54:40.038 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:54:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T09:54:40.009+0800');
2020-07-11 09:54:51.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:55:00.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:55:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:55:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:55:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:55:00.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:55:00.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:55:00.022+0800');
2020-07-11 09:55:03.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:55:10.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:55:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:55:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:55:10.040 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:55:10.043 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:55:10.017+0800');
2020-07-11 09:55:15.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:55:20.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:55:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:55:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:55:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:55:20.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:55:20.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:55:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:55:20.018+0800');
2020-07-11 09:55:27.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:55:30.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:55:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:55:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:55:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:55:30.041 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:55:30.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:55:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:55:30.018+0800');
2020-07-11 09:55:39.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:55:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:55:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:55:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:55:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:55:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:55:40.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:55:40.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:55:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:55:40.009+0800');
2020-07-11 09:55:51.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:56:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:56:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:56:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:56:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:56:00.042 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:56:00.044 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 09:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:56:00.019+0800');
2020-07-11 09:56:03.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:56:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:56:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:56:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:56:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:56:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 09:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:56:10.019+0800');
2020-07-11 09:56:15.771 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:56:20.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:56:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:56:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:56:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:56:20.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:56:20.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 09:56:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:56:20.018+0800');
2020-07-11 09:56:27.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:56:30.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:56:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:56:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:56:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:56:30.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:56:30.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 09:56:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:56:30.018+0800');
2020-07-11 09:56:39.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:56:40.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:56:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:56:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:56:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:56:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:56:40.033 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 09:56:40.035 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 09:56:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T09:56:40.008+0800');
2020-07-11 09:56:51.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:57:00.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:57:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:57:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:57:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:57:00.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:57:00.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 09:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:57:00.011+0800');
2020-07-11 09:57:03.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:57:10.063 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:57:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:57:10.153 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:57:10.284 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:57:10.288 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：225 毫秒
2020-07-11 09:57:10.297 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 09:57:10 | 耗时 6 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 225, '2020-07-11T09:57:10.063+0800');
2020-07-11 09:57:15.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:57:20.111 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:57:20.160 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:20 | 耗时 11 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:57:20.173 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:20 | 耗时 10 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:57:20.215 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:57:20.217 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：106 毫秒
2020-07-11 09:57:20.221 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 09:57:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 106, '2020-07-11T09:57:20.111+0800');
2020-07-11 09:57:27.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:57:30.152 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:57:30.160 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:57:30.167 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:30 | 耗时 5 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:57:30.346 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:30 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:57:30.352 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：200 毫秒
2020-07-11 09:57:30.387 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 09:57:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 200, '2020-07-11T09:57:30.152+0800');
2020-07-11 09:57:39.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:57:40.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:57:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:57:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:57:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:57:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:57:40.031 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 09:57:40.033 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 09:57:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T09:57:40.009+0800');
2020-07-11 09:57:51.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:58:00.042 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:58:00.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:58:00.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:00 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:58:00.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:00 | 耗时 9 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:58:00.194 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：152 毫秒
2020-07-11 09:58:00.233 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 09:58:00 | 耗时 10 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 152, '2020-07-11T09:58:00.042+0800');
2020-07-11 09:58:03.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:58:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:58:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:58:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:58:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 09:58:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 09:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T09:58:10.018+0800');
2020-07-11 09:58:15.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:58:20.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:58:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:58:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:58:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:58:20.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:58:20.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 09:58:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:58:20.017+0800');
2020-07-11 09:58:27.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:58:30.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:58:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:58:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:58:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:58:30.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 09:58:30.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 09:58:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T09:58:30.016+0800');
2020-07-11 09:58:39.776 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:58:40.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:58:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:58:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:58:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:58:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:58:40.036 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 09:58:40.038 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 09:58:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T09:58:40.008+0800');
2020-07-11 09:58:51.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:59:00.096 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:59:00.158 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:00 | 耗时 10 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:59:00.206 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:00 | 耗时 45 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:59:00.381 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:00 | 耗时 27 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:59:00.394 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：298 毫秒
2020-07-11 09:59:00.417 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 09:59:00 | 耗时 17 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 298, '2020-07-11T09:59:00.096+0800');
2020-07-11 09:59:03.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:59:10.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:59:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:59:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:59:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:59:10.034 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 09:59:10.036 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 09:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T09:59:10.010+0800');
2020-07-11 09:59:15.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:59:20.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:59:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:59:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:59:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:59:20.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:59:20.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 09:59:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:59:20.017+0800');
2020-07-11 09:59:27.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:59:30.008 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:59:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:59:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:59:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:59:30.031 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 09:59:30.033 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 09:59:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T09:59:30.008+0800');
2020-07-11 09:59:39.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 09:59:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 09:59:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 09:59:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 09:59:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 09:59:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 09:59:40.040 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 09:59:40.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 09:59:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T09:59:40.009+0800');
2020-07-11 09:59:51.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:00:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:00:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:00:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:00:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:00:00.038 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:00:00.041 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:00:00.013+0800');
2020-07-11 10:00:03.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:00:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:00:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:00:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:00:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:00:10.033 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:00:10.035 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:00:10.008+0800');
2020-07-11 10:00:15.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:00:20.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:00:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:00:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:00:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:00:20.040 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:00:20.042 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:00:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:00:20.017+0800');
2020-07-11 10:00:27.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:00:30.164 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:00:30.171 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:00:30.187 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:30 | 耗时 13 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:00:30.549 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:30 | 耗时 4 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:00:30.601 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：437 毫秒
2020-07-11 10:00:30.633 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:00:30 | 耗时 19 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 437, '2020-07-11T10:00:30.164+0800');
2020-07-11 10:00:39.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:00:40.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:00:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:00:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:00:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:00:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:00:40.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:00:40.039 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:00:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:00:40.008+0800');
2020-07-11 10:00:51.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:01:00.108 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:01:00.165 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:01:00.211 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:00 | 耗时 43 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:01:00.540 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:00 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:01:00.572 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：464 毫秒
2020-07-11 10:01:00.598 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:01:00 | 耗时 9 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 464, '2020-07-11T10:01:00.108+0800');
2020-07-11 10:01:03.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:01:10.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:01:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:01:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:01:10.047 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:01:10.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:01:10.017+0800');
2020-07-11 10:01:15.783 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:01:20.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:01:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:01:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:01:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:01:20.038 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 10:01:20.041 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:01:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T10:01:20.016+0800');
2020-07-11 10:01:27.837 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:01:30.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:01:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:01:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:01:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:01:30.049 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:01:30.052 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:01:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:01:30.021+0800');
2020-07-11 10:01:39.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:01:40.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:01:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:01:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:01:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:01:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:01:40.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:01:40.041 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:01:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:01:40.009+0800');
2020-07-11 10:01:51.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:02:00.143 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:02:00.153 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:02:00.157 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:00 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:02:00.395 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:00 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:02:00.436 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：293 毫秒
2020-07-11 10:02:00.445 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:02:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 293, '2020-07-11T10:02:00.143+0800');
2020-07-11 10:02:03.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:02:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:02:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:02:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:02:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:02:10.017+0800');
2020-07-11 10:02:15.878 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:02:20.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:02:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:02:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:02:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:02:20.039 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 10:02:20.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:02:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T10:02:20.017+0800');
2020-07-11 10:02:27.847 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:02:30.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:02:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:02:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:02:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:02:30.030 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-07-11 10:02:30.033 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:02:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 21, '2020-07-11T10:02:30.009+0800');
2020-07-11 10:02:39.848 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:02:40.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:02:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:02:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:02:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:02:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:02:40.031 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:02:40.033 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:02:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:02:40.008+0800');
2020-07-11 10:02:51.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:03:00.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:03:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:03:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:03:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:03:00.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:03:00.040 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:03:00.011+0800');
2020-07-11 10:03:03.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:03:10.041 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:03:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:03:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:03:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:03:10.066 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:03:10.068 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:03:10.041+0800');
2020-07-11 10:03:15.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:03:20.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:03:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:03:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:03:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:03:20.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:03:20.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:03:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:03:20.019+0800');
2020-07-11 10:03:27.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:03:30.006 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:03:30.008 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:03:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:03:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:03:30.028 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 10:03:30.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:03:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T10:03:30.006+0800');
2020-07-11 10:03:39.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:03:40.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:03:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:03:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:03:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:03:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:03:40.032 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:03:40.034 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:03:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:03:40.008+0800');
2020-07-11 10:03:51.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:04:00.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:04:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:04:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:04:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:04:00.038 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:04:00.040 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:04:00.010+0800');
2020-07-11 10:04:03.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:04:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:04:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:04:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:04:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-07-11 10:04:10.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 21, '2020-07-11T10:04:10.018+0800');
2020-07-11 10:04:15.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:04:20.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:04:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:04:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:04:20.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:04:20.039 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:04:20.041 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:04:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:04:20.016+0800');
2020-07-11 10:04:27.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:04:30.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:04:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:04:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:04:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:04:30.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 10:04:30.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:04:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T10:04:30.016+0800');
2020-07-11 10:04:39.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:04:40.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:04:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:04:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:04:40.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:04:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:04:40.035 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:04:40.038 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:04:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:04:40.008+0800');
2020-07-11 10:04:51.856 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:05:00.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:05:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:05:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:05:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:05:00.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:05:00.036 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:05:00.010+0800');
2020-07-11 10:05:03.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:05:10.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:05:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:05:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:05:10.040 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:05:10.043 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:05:10.017+0800');
2020-07-11 10:05:15.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:05:20.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:05:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:05:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:05:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:05:20.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:05:20.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:05:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:05:20.018+0800');
2020-07-11 10:05:27.858 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:05:30.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:05:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:05:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:05:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:05:30.033 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:05:30.036 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:05:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:05:30.008+0800');
2020-07-11 10:05:39.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:05:40.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:05:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:05:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:05:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:05:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:05:40.030 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:05:40.032 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:05:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:05:40.007+0800');
2020-07-11 10:05:51.858 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:06:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:06:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:06:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:06:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:06:00.036 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:06:00.038 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:06:00.011+0800');
2020-07-11 10:06:03.859 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:06:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:06:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:06:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:06:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:06:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:06:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:06:10.010+0800');
2020-07-11 10:06:15.858 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:06:20.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:06:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:06:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:06:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:06:20.033 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:06:20.035 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:06:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:06:20.009+0800');
2020-07-11 10:06:27.859 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:06:30.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:06:30.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:06:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:06:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:06:30.035 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:06:30.038 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:06:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:06:30.007+0800');
2020-07-11 10:06:39.862 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:06:40.007 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:06:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:06:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:06:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:06:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:06:40.034 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:06:40.037 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:06:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:06:40.007+0800');
2020-07-11 10:06:42.309 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1174E58A8FF97E209EE88B979501DFD2
2020-07-11 10:06:51.861 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594430603334_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:07:00.081 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:07:00.103 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:00 | 耗时 14 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:07:00.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:00 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:07:00.191 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:07:00.193 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：112 毫秒
2020-07-11 10:07:00.196 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 112, '2020-07-11T10:07:00.081+0800');
2020-07-11 10:07:11.142 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17792 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:07:11.145 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:07:12.673 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:07:12.675 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:07:12.746 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-07-11 10:07:13.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1758aa11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adca3940] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$91c2b06f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4678017a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@73e776b7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6b4ca42c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.520 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:07:13.888 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:07:13.904 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:07:13.913 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:07:13.913 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:07:13.922 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:07:14.035 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:07:14.035 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2815 ms
2020-07-11 10:07:14.369 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:07:14.377 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:07:14.828 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:07:14.829 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:07:14.829 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:07:14.829 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:07:15.300 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:07:17.315 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:07:17.346 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:07:17.358 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:07:17.358 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:07:17.362 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:07:17.363 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:07:17.364 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594433237347'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:07:17.364 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:07:17.365 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:07:17.366 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@290807e5
2020-07-11 10:07:17.445 febs [main] INFO  p6spy - 2020-07-11 10:07:17 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:07:18.511 febs [main] INFO  p6spy - 2020-07-11 10:07:18 | 耗时 11 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:07:19.391 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:07:19.628 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:07:19.629 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:07:19.700 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d1d85d0, org.springframework.security.web.context.SecurityContextPersistenceFilter@e3692ca, org.springframework.security.web.header.HeaderWriterFilter@66fff42f, org.springframework.security.web.authentication.logout.LogoutFilter@2914a328, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31c56721, org.springframework.security.web.session.ConcurrentSessionFilter@2555a986, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cfe28e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6afaf27, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3f71ae7f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@115a7e51, org.springframework.security.web.session.SessionManagementFilter@32cde414, org.springframework.security.web.access.ExceptionTranslationFilter@397dfbe8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3faa55]
2020-07-11 10:07:19.748 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:07:19.762 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:07:19.764 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:07:20.129 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:07:20.713 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:07:20.731 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:07:20.803 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:07:20.826 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:07:20.840 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:07:20.860 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:07:20.863 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.447 seconds (JVM running for 11.799)
2020-07-11 10:07:20.890 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:07:20.891 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:07:20.891 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:07:20.891 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:07:20.891 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:07:21.522 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:07:21.804 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:94460675-845c-423b-868a-74eab4753d5b:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:07:21.805 febs [QpidJMS Connection Executor: ID:94460675-845c-423b-868a-74eab4753d5b:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:07:21.827 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:07:21.837 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:07:21.837 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594430603334"'s failed in-progress jobs.
2020-07-11 10:07:21.844 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594433237347 started.
2020-07-11 10:07:21.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:07:22.660 febs [RMI TCP Connection(6)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:07:22.660 febs [RMI TCP Connection(6)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:07:22.679 febs [RMI TCP Connection(6)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-07-11 10:07:22.679 febs [RMI TCP Connection(5)-192.168.3.108] INFO  p6spy - 2020-07-11 10:07:22 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:07:30.026 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:07:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:07:30.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:07:30.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:07:30.091 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：65 毫秒
2020-07-11 10:07:30.103 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:07:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 65, '2020-07-11T10:07:30.026+0800');
2020-07-11 10:07:33.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:07:40.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:07:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:07:40.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:07:40.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:07:40.063 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:07:40.067 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:07:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:07:40.023+0800');
2020-07-11 10:07:44.882 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:07:44 | 耗时 3 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE e.type = 1;
2020-07-11 10:07:44.902 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:07:44 | 耗时 3 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:07:45.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:07:50.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:07:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:07:50.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:07:50.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:07:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:07:50.057 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:07:50.062 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:07:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:07:50.023+0800');
2020-07-11 10:07:57.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:08:00.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:08:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:08:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:08:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:08:00.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:08:00.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:08:00.017+0800');
2020-07-11 10:08:09.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:08:10.008 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:08:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:08:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:08:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:08:10.041 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:08:10.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:08:10.008+0800');
2020-07-11 10:08:21.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:08:30.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:08:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:08:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:08:30.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:08:30.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:08:30.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:08:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:08:30.009+0800');
2020-07-11 10:08:33.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:08:40.071 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:08:40.122 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:08:40.169 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:40 | 耗时 3 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:08:40.390 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:40 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:08:40.392 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：321 毫秒
2020-07-11 10:08:40.398 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:08:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 321, '2020-07-11T10:08:40.071+0800');
2020-07-11 10:08:45.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:08:50.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:08:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:08:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:08:50.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:08:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:08:50.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:08:50.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:08:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:08:50.017+0800');
2020-07-11 10:08:57.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:09:00.015 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:09:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:09:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:09:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:09:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:09:00.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:09:00.015+0800');
2020-07-11 10:09:09.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:09:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:09:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:09:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:09:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:09:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:09:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:09:10.008+0800');
2020-07-11 10:09:21.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:09:30.034 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:09:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:09:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:09:30.193 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:30 | 耗时 31 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:09:30.195 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：161 毫秒
2020-07-11 10:09:30.200 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:09:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 161, '2020-07-11T10:09:30.034+0800');
2020-07-11 10:09:33.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:09:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:09:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:09:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:09:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:09:40.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:09:40.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:09:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:09:40.018+0800');
2020-07-11 10:09:45.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:09:50.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:09:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:09:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:09:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:09:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:09:50.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:09:50.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:09:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:09:50.019+0800');
2020-07-11 10:09:57.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:10:00.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:10:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:10:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:10:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:10:00.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:10:00.041 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:10:00.010+0800');
2020-07-11 10:10:09.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:10:10.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:10:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:10:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:10:10.056 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-07-11 10:10:10.060 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-07-11T10:10:10.009+0800');
2020-07-11 10:10:21.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:10:30.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:10:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:10:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:10:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:10:30.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:10:30.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:10:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:10:30.009+0800');
2020-07-11 10:10:33.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:10:40.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:10:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:10:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:10:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:10:40.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:10:40.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:10:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:10:40.018+0800');
2020-07-11 10:10:45.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:10:50.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:10:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:10:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:10:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:10:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:10:50.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:10:50.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:10:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:10:50.020+0800');
2020-07-11 10:10:57.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:11:00.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:11:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:11:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:11:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:11:00.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:11:00.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:11:00.011+0800');
2020-07-11 10:11:04.492 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 10:11:04 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:11:08.551 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 10:11:08 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:11:09.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:11:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:11:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:11:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:11:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:11:10.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:11:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:11:10.009+0800');
2020-07-11 10:11:21.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:11:30.009 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:11:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:11:30.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:11:30.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:11:30.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:11:30.039 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:11:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:11:30.009+0800');
2020-07-11 10:11:33.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:11:40.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:11:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:11:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:11:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:11:40.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:11:40.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:11:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:11:40.020+0800');
2020-07-11 10:11:45.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:11:50.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:11:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:11:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:11:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:11:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:11:50.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:11:50.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:11:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:11:50.019+0800');
2020-07-11 10:11:57.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:12:00.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:12:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:12:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:12:00.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:12:00.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:12:00.054 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:12:00.012+0800');
2020-07-11 10:12:03.667 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 10:12:03 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:12:09.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:12:10.007 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:12:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:12:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:12:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:12:10.031 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:12:10.034 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:12:10.007+0800');
2020-07-11 10:12:21.858 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:12:30.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:12:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:12:30.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:12:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:12:30.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:12:30.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:12:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:12:30.009+0800');
2020-07-11 10:12:33.860 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433237347_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:12:40.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:12:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:12:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:12:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:12:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:12:40.049 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:12:40.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:12:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:12:40.019+0800');
2020-07-11 10:12:54.447 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16232 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:12:54.450 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:12:55.910 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:12:55.912 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:12:55.988 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64ms. Found 0 repository interfaces.
2020-07-11 10:12:56.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ddbc92b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.595 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$742e21e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$58269911] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cdbea1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49edcb30' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$31b08cce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:56.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:12:57.126 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:12:57.140 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:12:57.149 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:12:57.149 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:12:57.155 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:12:57.257 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:12:57.257 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2733 ms
2020-07-11 10:12:57.577 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:12:57.585 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:12:58.043 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:12:58.043 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:12:58.043 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:12:58.043 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:12:58.529 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:13:00.535 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:13:00.565 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:13:00.576 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:13:00.576 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:13:00.580 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:13:00.582 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:13:00.582 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594433580566'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:13:00.582 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:13:00.582 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:13:00.584 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1f75fd1d
2020-07-11 10:13:00.652 febs [main] INFO  p6spy - 2020-07-11 10:13:00 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:13:01.717 febs [main] INFO  p6spy - 2020-07-11 10:13:01 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:13:02.560 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:13:02.798 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:13:02.799 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:13:02.799 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:13:02.866 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71eaef6a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f22fd5d, org.springframework.security.web.header.HeaderWriterFilter@1a947424, org.springframework.security.web.authentication.logout.LogoutFilter@3f33bb6f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2555a986, org.springframework.security.web.session.ConcurrentSessionFilter@3e0704e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e7f29d5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44587c44, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5af4328e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e3692ca, org.springframework.security.web.session.SessionManagementFilter@103e9972, org.springframework.security.web.access.ExceptionTranslationFilter@1d40f597, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e4bb10b]
2020-07-11 10:13:02.914 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:13:02.928 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:13:02.930 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:13:03.293 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:13:03.837 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:13:03.851 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:13:03.908 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:13:03.928 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:13:03.941 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:13:03.960 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:13:03.963 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.246 seconds (JVM running for 11.634)
2020-07-11 10:13:03.985 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:13:03.985 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:13:03.985 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:13:03.985 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:13:03.985 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:13:04.608 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:13:04.883 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:2afd4868-bcb1-4fc5-9240-8faf65a19114:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:13:04.885 febs [QpidJMS Connection Executor: ID:2afd4868-bcb1-4fc5-9240-8faf65a19114:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:13:04.929 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:13:04.942 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:13:04.942 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594433237347"'s failed in-progress jobs.
2020-07-11 10:13:04.956 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594433580566 started.
2020-07-11 10:13:04.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:13:05.351 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:13:05.351 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:13:05.366 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 10:13:05 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:13:05.367 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 10:13:10.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:13:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:13:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:13:10.099 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-07-11 10:13:10.111 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 63, '2020-07-11T10:13:10.036+0800');
2020-07-11 10:13:16.437 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 10:13:16 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:13:16.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:13:20.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:13:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:13:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:13:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:13:20.053 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:13:20.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:13:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:13:20.016+0800');
2020-07-11 10:13:20.592 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 10:13:20 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:13:28.962 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:13:30.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:13:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:13:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:13:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:13:30.048 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:13:30.053 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:13:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:13:30.011+0800');
2020-07-11 10:13:40.961 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:13:50.013 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:13:50.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:13:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:13:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:13:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:13:50.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:13:50.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:13:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:13:50.013+0800');
2020-07-11 10:13:52.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:14:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:14:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:14:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:14:00.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:14:00.059 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:14:00.063 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:14:00.027+0800');
2020-07-11 10:14:04.987 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:14:10.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:14:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:14:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:14:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:14:10.065 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:14:10.070 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:14:10.025+0800');
2020-07-11 10:14:16.998 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433580566_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:14:20.054 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:14:20.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:14:20.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:14:20.091 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:14:20.093 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:14:20.096 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:14:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:14:20.054+0800');
2020-07-11 10:14:33.800 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17568 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:14:33.803 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:14:35.282 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:14:35.284 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:14:35.356 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 10:14:35.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:35.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$681051db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:35.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:35.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:35.974 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe81e10a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e27a5839] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$972fa944] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@41f3aaf1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bc044bf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:14:36.484 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:14:36.498 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:14:36.507 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:14:36.507 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:14:36.514 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:14:36.615 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:14:36.615 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2740 ms
2020-07-11 10:14:36.937 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:14:36.944 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:14:37.395 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:14:37.395 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:14:37.395 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:14:37.396 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:14:37.880 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:14:39.861 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:14:39.894 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:14:39.908 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:14:39.908 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:14:39.911 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:14:39.913 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:14:39.914 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594433679895'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:14:39.914 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:14:39.914 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:14:39.915 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@62794582
2020-07-11 10:14:39.984 febs [main] INFO  p6spy - 2020-07-11 10:14:39 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:14:41.035 febs [main] INFO  p6spy - 2020-07-11 10:14:41 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:14:41.895 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:14:42.130 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:14:42.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:14:42.199 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67823972, org.springframework.security.web.context.SecurityContextPersistenceFilter@4eb73cc8, org.springframework.security.web.header.HeaderWriterFilter@767b9d66, org.springframework.security.web.authentication.logout.LogoutFilter@62d6ac, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@59aa2fba, org.springframework.security.web.session.ConcurrentSessionFilter@6d5de79a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47e725af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b58d678, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2fb70301, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f1574c, org.springframework.security.web.session.SessionManagementFilter@266a47fd, org.springframework.security.web.access.ExceptionTranslationFilter@1eddca25, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@576b385d]
2020-07-11 10:14:42.250 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:14:42.264 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:14:42.265 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:14:42.633 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:14:43.180 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:14:43.195 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:14:43.256 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:14:43.277 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:14:43.291 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:14:43.310 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:14:43.313 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.265 seconds (JVM running for 11.615)
2020-07-11 10:14:43.335 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:14:43.336 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:14:43.336 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:14:43.336 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:14:43.336 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:14:43.938 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:14:44.206 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:a290a697-70a3-4567-bae8-173fb9d21133:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:14:44.207 febs [QpidJMS Connection Executor: ID:a290a697-70a3-4567-bae8-173fb9d21133:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:14:44.279 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:14:44.293 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:14:44.293 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594433580566"'s failed in-progress jobs.
2020-07-11 10:14:44.310 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594433679895 started.
2020-07-11 10:14:44.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433679895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:14:44.687 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:14:44.687 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:14:44.700 febs [RMI TCP Connection(2)-192.168.3.108] INFO  p6spy - 2020-07-11 10:14:44 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:14:44.702 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 10:14:50.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:14:50.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:14:50.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:14:50.102 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:14:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:14:50.104 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-07-11 10:14:50.117 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:14:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-07-11T10:14:50.040+0800');
2020-07-11 10:14:56.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433679895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:15:00.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:15:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:15:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:15:00.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:15:00.057 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:15:00.061 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:15:00.019+0800');
2020-07-11 10:15:08.314 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433679895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:15:10.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:15:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:15:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:15:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:15:10.056 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:15:10.061 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:15:10.020+0800');
2020-07-11 10:15:20.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433679895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:15:34.418 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8820 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:15:34.422 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:15:36.283 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:15:36.285 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:15:36.347 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-07-11 10:15:36.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.003 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f73c5d27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.028 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dadec56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$71a66385] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$265bb490] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@647b9364' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4b305742] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:15:37.550 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:15:37.564 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:15:37.572 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:15:37.572 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:15:37.578 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:15:37.683 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:15:37.684 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3162 ms
2020-07-11 10:15:38.014 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:15:38.022 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:15:38.480 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:15:38.480 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:15:38.481 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:15:38.481 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:15:39.035 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:15:41.097 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:15:41.128 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:15:41.139 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:15:41.140 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:15:41.143 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:15:41.145 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:15:41.145 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594433741129'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:15:41.145 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:15:41.146 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:15:41.147 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@131d977f
2020-07-11 10:15:41.229 febs [main] INFO  p6spy - 2020-07-11 10:15:41 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:15:42.652 febs [main] INFO  p6spy - 2020-07-11 10:15:42 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:15:43.949 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:15:44.402 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:15:44.402 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:15:44.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:15:44.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:15:44.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:15:44.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:15:44.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:15:44.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:15:44.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:15:44.405 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:15:44.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:15:44.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:15:44.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:15:44.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:15:44.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:15:44.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:15:44.529 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76c587ce, org.springframework.security.web.context.SecurityContextPersistenceFilter@64af5454, org.springframework.security.web.header.HeaderWriterFilter@535a6697, org.springframework.security.web.authentication.logout.LogoutFilter@48751d8a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@308be1a3, org.springframework.security.web.session.ConcurrentSessionFilter@62d6ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f6cde7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c4d0224, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@78e50fca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ae7c1d, org.springframework.security.web.session.SessionManagementFilter@1d40f597, org.springframework.security.web.access.ExceptionTranslationFilter@602aeb87, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@783f5f71]
2020-07-11 10:15:44.609 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:15:44.638 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:15:44.641 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:15:45.189 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:15:46.227 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:15:46.253 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:15:46.464 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:15:46.572 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:15:46.600 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:15:46.692 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:15:46.753 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.563 seconds (JVM running for 16.082)
2020-07-11 10:15:46.829 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:15:46.829 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:15:46.829 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:15:46.829 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:15:46.829 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:15:47.574 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:15:47.634 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:15:47.635 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594433679895"'s failed in-progress jobs.
2020-07-11 10:15:47.691 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 10:15:47.935 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594433741129 started.
2020-07-11 10:15:47.944 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:15:48.429 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:15:48.690 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:e1338d0c-782b-4f79-982c-747c740adcfa:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:15:48.691 febs [QpidJMS Connection Executor: ID:e1338d0c-782b-4f79-982c-747c740adcfa:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:15:49.021 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:15:49.021 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:15:49.042 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-07-11 10:15:49.541 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 10:15:49 | 耗时 1 ms | SQL 语句：
select 1;
2020-07-11 10:15:50.034 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:15:50.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:15:50.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:15:50.116 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:15:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:15:50.118 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：84 毫秒
2020-07-11 10:15:50.135 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:15:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 84, '2020-07-11T10:15:50.034+0800');
2020-07-11 10:15:59.942 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:16:00.013 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:16:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:16:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:16:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:16:00.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:16:00.056 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:16:00.013+0800');
2020-07-11 10:16:11.942 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:16:20.288 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:16:20.355 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:20 | 耗时 4 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:16:20.364 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:20 | 耗时 3 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:16:20.418 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:20 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:16:20.421 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：133 毫秒
2020-07-11 10:16:20.426 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:16:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 133, '2020-07-11T10:16:20.288+0800');
2020-07-11 10:16:23.941 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:16:30.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:16:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:16:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:16:30.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:16:30.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:16:30.067 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:16:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:16:30.022+0800');
2020-07-11 10:16:35.943 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:16:40.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:16:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:16:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:16:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:16:40.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:16:40.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:16:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:16:40.017+0800');
2020-07-11 10:16:47.943 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:16:50.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:16:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:16:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:16:50.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:16:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:16:50.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:16:50.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:16:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:16:50.018+0800');
2020-07-11 10:16:59.944 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:17:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:17:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:17:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:17:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:17:00.040 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:17:00.044 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:17:00.010+0800');
2020-07-11 10:17:11.946 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:17:20.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:17:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:17:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:17:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:17:20.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:17:20.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:17:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:17:20.009+0800');
2020-07-11 10:17:23.945 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:17:30.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:17:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:17:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:17:30.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:17:30.056 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:17:30.060 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:17:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:17:30.020+0800');
2020-07-11 10:17:35.944 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:17:40.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:17:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:17:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:17:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:17:40.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:17:40.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:17:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:17:40.019+0800');
2020-07-11 10:17:47.946 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:17:50.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:17:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:17:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:17:50.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:17:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:17:50.048 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:17:50.052 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:17:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:17:50.018+0800');
2020-07-11 10:17:59.946 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:18:00.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:18:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:18:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:18:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:18:00.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:18:00.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:18:00.010+0800');
2020-07-11 10:18:11.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:18:20.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:18:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:18:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:18:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:18:20.050 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:18:20.053 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:18:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:18:20.019+0800');
2020-07-11 10:18:23.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:18:24.810 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae LIMIT 0, 8;
2020-07-11 10:18:24.829 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 10:18:24.836 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 10:18:24.842 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 10:18:24.847 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 10:18:24.852 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 10:18:28.694 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - IdleTimeoutCheck closed the transport due to the peer exceeding our requested idle-timeout.
2020-07-11 10:18:28.711 febs [QpidJMS Connection Executor: ID:e1338d0c-782b-4f79-982c-747c740adcfa:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:18:29.046 febs [AmqpProvider :(2):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:18:29.448 febs [QpidJMS Connection Executor: ID:e1338d0c-782b-4f79-982c-747c740adcfa:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionRestored, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:18:30.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:18:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:18:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:18:30.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:18:30.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:18:30.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:18:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:18:30.010+0800');
2020-07-11 10:18:35.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:18:40.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:18:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:18:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:18:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:18:40.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:18:40.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:18:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:18:40.016+0800');
2020-07-11 10:18:47.961 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:18:50.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:18:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:18:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:18:50.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:18:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:18:50.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:18:50.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:18:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:18:50.018+0800');
2020-07-11 10:18:59.959 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:19:00.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:19:00.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:19:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:19:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:19:00.036 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:19:00.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:19:00.008+0800');
2020-07-11 10:19:11.962 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:19:20.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:19:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:19:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:19:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:19:20.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:19:20.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:19:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:19:20.019+0800');
2020-07-11 10:19:23.961 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:19:30.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:19:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:19:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:19:30.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:30 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:19:30.076 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：65 毫秒
2020-07-11 10:19:30.082 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:19:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 65, '2020-07-11T10:19:30.011+0800');
2020-07-11 10:19:35.962 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:19:40.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:19:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:19:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:19:40.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:19:40.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:19:40.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:19:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:19:40.035+0800');
2020-07-11 10:19:47.962 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:19:50.031 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:19:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:19:50.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:19:50.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:19:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:19:50.063 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:19:50.066 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:19:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:19:50.031+0800');
2020-07-11 10:19:59.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:20:00.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:20:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:20:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:20:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:20:00.037 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:20:00.040 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:20:00.009+0800');
2020-07-11 10:20:11.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:20:20.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:20:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:20:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:20:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:20:20.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:20:20.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:20:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:20:20.019+0800');
2020-07-11 10:20:23.964 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:20:30.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:20:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:20:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:20:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:20:30.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:20:30.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:20:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:20:30.019+0800');
2020-07-11 10:20:35.964 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:20:40.035 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:20:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:20:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:20:40.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:20:40.079 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-07-11 10:20:40.083 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:20:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-07-11T10:20:40.035+0800');
2020-07-11 10:20:47.965 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:20:50.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:20:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:20:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:20:50.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:20:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:20:50.062 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:20:50.066 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:20:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:20:50.025+0800');
2020-07-11 10:20:54.021 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:20:54 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE e.type = 1;
2020-07-11 10:20:54.028 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:20:54 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:20:55.986 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 10:20:55 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE e.type = 1;
2020-07-11 10:20:55.992 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 10:20:55 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:20:59.967 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:21:00.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:21:00.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:21:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:21:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:21:00.034 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:21:00.037 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:21:00.008+0800');
2020-07-11 10:21:11.119 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 10:21:11 | 耗时 0 ms | SQL 语句：
SELECT a.* FROM a_account a WHERE a.kh_account = 'fxp' AND a.kh_pwd = '123456';
2020-07-11 10:21:11.124 febs [http-nio-8099-exec-4] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9EE2E3FDBFE6AAC81B9B560E8D3F96B3
2020-07-11 10:21:11.212 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 10:21:11 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 10:21:11.216 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 10:21:11 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:21:11.967 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:21:12.496 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:21:12 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 10:21:12.501 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:21:12 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:21:20.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:21:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:21:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:21:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:21:20.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:21:20.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:21:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:21:20.017+0800');
2020-07-11 10:21:23.967 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:21:30.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:21:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:21:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:21:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:21:30.038 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:21:30.041 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:21:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:21:30.011+0800');
2020-07-11 10:21:32.679 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775602868927488, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"3","productKey":"a1umzzYpOjO","gmtCreate":1594434092613,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434092620}}}
2020-07-11 10:21:35.968 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:21:38.255 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:21:38.260 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 10:21:38.402 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 10:21:38.407 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:21:38.415 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 10:21:38.434 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 10:21:38.439 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 10:21:38.447 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 10:21:38.452 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 10:21:38.456 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 10:21:38.462 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 10:21:38.468 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 10:21:38.472 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 10:21:38.478 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 10:21:38.484 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 10:21:38.487 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 10:21:38.492 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 10:21:39.133 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775630048078337, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594434099093,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434099099}}}
2020-07-11 10:21:40.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:21:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:21:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:21:40.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:21:40.058 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:21:40.062 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:21:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:21:40.020+0800');
2020-07-11 10:21:47.968 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:21:50.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:21:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:21:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:21:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:21:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:21:50.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:21:50.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:21:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:21:50.017+0800');
2020-07-11 10:21:58.150 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775709857293824, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"13","productKey":"a1umzzYpOjO","gmtCreate":1594434118121,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434118128}}}
2020-07-11 10:21:59.969 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:22:00.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:22:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:22:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:22:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:22:00.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:22:00.041 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:22:00.010+0800');
2020-07-11 10:22:08.201 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775752018442240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"19","productKey":"a1umzzYpOjO","gmtCreate":1594434128170,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434128179}}}
2020-07-11 10:22:11.969 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:22:20.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:22:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:22:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:22:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:22:20.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:22:20.047 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:22:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:22:20.019+0800');
2020-07-11 10:22:23.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:22:28.163 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775835745156096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"25","productKey":"a1umzzYpOjO","gmtCreate":1594434148134,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434148141}}}
2020-07-11 10:22:30.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:22:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:22:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:22:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:22:30.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:22:30.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:22:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:22:30.018+0800');
2020-07-11 10:22:35.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:22:40.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:22:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:22:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:22:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:22:40.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:22:40.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:22:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:22:40.017+0800');
2020-07-11 10:22:47.971 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:22:48.289 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775920168089600, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"35","productKey":"a1umzzYpOjO","gmtCreate":1594434168262,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434168269}}}
2020-07-11 10:22:49.931 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775710251577856, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"15","productKey":"a1umzzYpOjO","gmtCreate":1594434118215,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434118221}}}
2020-07-11 10:22:50.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:22:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:22:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:22:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:22:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:22:50.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:22:50.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:22:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:22:50.019+0800');
2020-07-11 10:22:58.129 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775961435801601, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"37","productKey":"a1umzzYpOjO","gmtCreate":1594434178106,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434178108}}}
2020-07-11 10:22:59.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:23:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:23:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:23:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:23:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:23:00.042 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:23:00.046 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:23:00.012+0800');
2020-07-11 10:23:02.218 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281775877910487555, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"30","productKey":"a1umzzYpOjO","gmtCreate":1594434158187,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434158194}}}
2020-07-11 10:23:11.971 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:23:18.200 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776045527358976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"46","productKey":"a1umzzYpOjO","gmtCreate":1594434198155,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434198157}}}
2020-07-11 10:23:18.202 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776045565203969, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"47","productKey":"a1umzzYpOjO","gmtCreate":1594434198159,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434198166}}}
2020-07-11 10:23:20.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:23:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:23:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:23:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:23:20.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:23:20.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:23:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:23:20.016+0800');
2020-07-11 10:23:23.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:23:28.137 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776087285895169, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"49","productKey":"a1umzzYpOjO","gmtCreate":1594434208107,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434208114}}}
2020-07-11 10:23:28.279 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776087772435968, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"51","productKey":"a1umzzYpOjO","gmtCreate":1594434208222,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434208229}}}
2020-07-11 10:23:30.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:23:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:23:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:23:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:23:30.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:23:30.048 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:23:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:23:30.018+0800');
2020-07-11 10:23:35.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:23:38.114 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776129119843840, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"53","productKey":"a1umzzYpOjO","gmtCreate":1594434218080,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434218087}}}
2020-07-11 10:23:40.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:23:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:23:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:23:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:23:40.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:23:40.050 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:23:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:23:40.019+0800');
2020-07-11 10:23:47.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:23:48.250 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776171641691648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"59","productKey":"a1umzzYpOjO","gmtCreate":1594434228222,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434228224}}}
2020-07-11 10:23:48.252 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776171645889024, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"58","productKey":"a1umzzYpOjO","gmtCreate":1594434228220,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434228226}}}
2020-07-11 10:23:50.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:23:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:23:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:23:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:23:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:23:50.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:23:50.045 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:23:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:23:50.018+0800');
2020-07-11 10:23:58.222 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776213488361985, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"63","productKey":"a1umzzYpOjO","gmtCreate":1594434238200,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434238202}}}
2020-07-11 10:23:59.973 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:24:00.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:24:00.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:24:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:24:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:24:00.034 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:24:00.037 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:24:00.008+0800');
2020-07-11 10:24:11.973 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:24:20.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:24:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:24:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:24:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:24:20.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:24:20.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:24:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:24:20.018+0800');
2020-07-11 10:24:23.973 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:24:30.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:24:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:24:30.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:24:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:24:30.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:24:30.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:24:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:24:30.021+0800');
2020-07-11 10:24:35.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:24:38.342 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776381465943552, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"79","productKey":"a1umzzYpOjO","gmtCreate":1594434278244,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434278251}}}
2020-07-11 10:24:38.429 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776381470230528, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"78","productKey":"a1umzzYpOjO","gmtCreate":1594434278247,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434278253}}}
2020-07-11 10:24:40.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:24:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:24:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:24:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:24:40.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:24:40.047 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:24:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:24:40.018+0800');
2020-07-11 10:24:46.688 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776255443932160, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"67","productKey":"a1umzzYpOjO","gmtCreate":1594434248199,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434248205}}}
2020-07-11 10:24:47.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:24:50.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:24:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:24:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:24:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:24:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:24:50.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:24:50.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:24:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:24:50.018+0800');
2020-07-11 10:24:58.334 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776465368847872, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"86","productKey":"a1umzzYpOjO","gmtCreate":1594434298249,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434298255}}}
2020-07-11 10:24:59.975 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:25:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:25:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:25:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:25:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:25:00.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 10:25:00.038 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T10:25:00.010+0800');
2020-07-11 10:25:05.221 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776423140633088, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"83","productKey":"a1umzzYpOjO","gmtCreate":1594434288182,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434288187}}}
2020-07-11 10:25:11.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:25:14.092 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776465356323840, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"87","productKey":"a1umzzYpOjO","gmtCreate":1594434298251,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434298253}}}
2020-07-11 10:25:16.550 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776297114297856, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"69","productKey":"a1umzzYpOjO","gmtCreate":1594434258134,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434258140}}}
2020-07-11 10:25:18.279 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776548978103808, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"94","productKey":"a1umzzYpOjO","gmtCreate":1594434318188,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434318190}}}
2020-07-11 10:25:20.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:25:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:25:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:25:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:25:20.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:25:20.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:25:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:25:20.020+0800');
2020-07-11 10:25:23.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:25:30.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:25:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:25:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:25:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:25:30.048 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:25:30.051 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:25:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:25:30.019+0800');
2020-07-11 10:25:35.975 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:25:40.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:25:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:25:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:25:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:25:40.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:25:40.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:25:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:25:40.019+0800');
2020-07-11 10:25:40.631 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776632826389504, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"102","productKey":"a1umzzYpOjO","gmtCreate":1594434338174,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434338180}}}
2020-07-11 10:25:47.976 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:25:50.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:25:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:25:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:25:50.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:25:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:25:50.067 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 10:25:50.069 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:25:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T10:25:50.019+0800');
2020-07-11 10:25:59.976 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:26:00.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:26:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:26:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:26:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:26:00.034 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:26:00.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:26:00.010+0800');
2020-07-11 10:26:07.744 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776591118325760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"99","productKey":"a1umzzYpOjO","gmtCreate":1594434328229,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434328236}}}
2020-07-11 10:26:11.977 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:26:17.084 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281776791056571904, content = {"lastTime":"2020-07-11 10:25:38.158","utcLastTime":"2020-07-11T02:25:38.158Z","clientIp":"122.97.175.124","utcTime":"2020-07-11T02:26:15.906Z","time":"2020-07-11 10:26:15.906","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 10:26:17.120 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 10:26:17 | 耗时 24 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 10:25:38.158', modifier = NULL, mod_date = '2020-07-11T10:26:17.093' WHERE (code = '1001');
2020-07-11 10:26:17.160 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776791836728832, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"3","productKey":"a1umzzYpOjO","gmtCreate":1594434376087,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434376090}}}
2020-07-11 10:26:20.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:26:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:26:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:26:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:26:20.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 10:26:20.046 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:26:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T10:26:20.019+0800');
2020-07-11 10:26:23.489 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776822002165250, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594434383277,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434383283}}}
2020-07-11 10:26:23.976 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:26:30.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:26:30.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:26:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:26:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:26:30.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:26:30.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:26:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:26:30.007+0800');
2020-07-11 10:26:33.176 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776863253144064, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"9","productKey":"a1umzzYpOjO","gmtCreate":1594434393112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434393118}}}
2020-07-11 10:26:33.260 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776863605385729, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594434393201,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434393202}}}
2020-07-11 10:26:33.278 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776863643227648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"10","productKey":"a1umzzYpOjO","gmtCreate":1594434393203,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434393210}}}
2020-07-11 10:26:35.977 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:26:40.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:26:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:26:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:26:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:26:40.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:26:40.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:26:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:26:40.019+0800');
2020-07-11 10:26:43.342 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281776905842028032, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"14","productKey":"a1umzzYpOjO","gmtCreate":1594434403270,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434403272}}}
2020-07-11 10:26:47.978 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:26:50.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:26:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:26:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:26:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:26:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:26:50.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:26:50.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:26:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:26:50.020+0800');
2020-07-11 10:26:59.978 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:27:00.010 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:27:00.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:27:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:27:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:27:00.035 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:27:00.037 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:27:00.010+0800');
2020-07-11 10:27:11.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:27:13.336 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777031851604480, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"27","productKey":"a1umzzYpOjO","gmtCreate":1594434433307,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434433315}}}
2020-07-11 10:27:20.576 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:27:20.592 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:27:20.602 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:20 | 耗时 7 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:27:21.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:21 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:27:21.093 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：517 毫秒
2020-07-11 10:27:21.097 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:27:21 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 517, '2020-07-11T10:27:20.576+0800');
2020-07-11 10:27:23.978 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:27:30.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:27:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:27:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:27:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:27:30.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:27:30.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:27:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:27:30.017+0800');
2020-07-11 10:27:35.978 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:27:40.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:27:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:27:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:27:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:27:40.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:27:40.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:27:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:27:40.010+0800');
2020-07-11 10:27:47.977 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594433741129_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:27:50.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:27:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:27:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:27:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:27:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:27:50.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 10:27:50.045 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:27:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T10:27:50.020+0800');
2020-07-11 10:27:53.412 febs [JmsSession [ID:e1338d0c-782b-4f79-982c-747c740adcfa:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777199405643264, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"43","productKey":"a1umzzYpOjO","gmtCreate":1594434473262,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434473263}}}
2020-07-11 10:28:05.028 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13836 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:28:05.031 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:28:06.529 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:28:06.531 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:28:06.609 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-07-11 10:28:07.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7da38705] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.217 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14151634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$f80d8d63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$acc2de6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e002356' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d1978120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:28:07.739 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:28:07.753 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:28:07.762 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:28:07.762 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:28:07.768 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:28:07.868 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:28:07.868 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2776 ms
2020-07-11 10:28:08.196 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:28:08.207 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:28:08.645 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:28:08.645 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:28:08.645 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:28:08.645 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:28:09.125 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:28:11.109 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:28:11.138 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:28:11.149 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:28:11.149 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:28:11.152 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:28:11.154 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:28:11.155 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594434491139'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:28:11.155 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:28:11.155 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:28:11.156 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@72e75786
2020-07-11 10:28:11.224 febs [main] INFO  p6spy - 2020-07-11 10:28:11 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:28:12.260 febs [main] INFO  p6spy - 2020-07-11 10:28:12 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:28:13.121 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:28:13.374 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:28:13.374 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:28:13.375 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:28:13.376 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:28:13.376 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:28:13.376 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:28:13.511 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6074d638, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e73f5e7, org.springframework.security.web.header.HeaderWriterFilter@481bae3f, org.springframework.security.web.authentication.logout.LogoutFilter@2fb70301, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@78bce1c4, org.springframework.security.web.session.ConcurrentSessionFilter@36349e29, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51da7b08, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@576b385d, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7fc56d61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@402feb85, org.springframework.security.web.session.SessionManagementFilter@4c114687, org.springframework.security.web.access.ExceptionTranslationFilter@446cc036, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44948ac6]
2020-07-11 10:28:13.579 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:28:13.603 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:28:13.605 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:28:14.427 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:28:15.727 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:28:15.758 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:28:15.945 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:28:16.053 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:28:16.084 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:28:16.127 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:28:16.133 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.825 seconds (JVM running for 13.125)
2020-07-11 10:28:16.191 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:28:16.191 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:28:16.191 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:28:16.191 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:28:16.191 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:28:16.892 febs [http-nio-8099-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:28:16.892 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:28:16.916 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-07-11 10:28:17.070 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:28:17.086 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:28:17.086 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594433741129"'s failed in-progress jobs.
2020-07-11 10:28:17.105 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594434491139 started.
2020-07-11 10:28:17.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:28:17.515 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:28:17.672 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 10:28:17 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 123456;
2020-07-11 10:28:17.982 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:28:17.983 febs [QpidJMS Connection Executor: ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:28:19.908 febs [RMI TCP Connection(7)-192.168.3.108] INFO  p6spy - 2020-07-11 10:28:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:28:20.026 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:28:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:28:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:28:20.088 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:28:20.090 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-07-11 10:28:20.102 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:28:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-07-11T10:28:20.026+0800');
2020-07-11 10:28:29.110 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:28:30.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:28:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:28:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:28:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:28:30.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:28:30.053 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:28:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:28:30.011+0800');
2020-07-11 10:28:33.219 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777366594707968, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"57","productKey":"a1umzzYpOjO","gmtCreate":1594434513122,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434513124}}}
2020-07-11 10:28:35.531 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777241105409536, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"47","productKey":"a1umzzYpOjO","gmtCreate":1594434483204,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434483206}}}
2020-07-11 10:28:41.112 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:28:44.637 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777408764334592, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"61","productKey":"a1umzzYpOjO","gmtCreate":1594434523177,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434523178}}}
2020-07-11 10:28:50.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:28:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:28:50.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:28:50.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:28:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:28:50.063 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 10:28:50.067 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:28:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T10:28:50.021+0800');
2020-07-11 10:28:53.111 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:29:00.026 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:29:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:29:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:29:00.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:29:00.060 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:29:00.063 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:29:00.026+0800');
2020-07-11 10:29:03.186 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777492545565696, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"69","productKey":"a1umzzYpOjO","gmtCreate":1594434543152,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434543154}}}
2020-07-11 10:29:05.111 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:29:10.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:29:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:29:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:29:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:29:10.078 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:29:10.082 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:29:10.045+0800');
2020-07-11 10:29:13.248 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777534715093505, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"74","productKey":"a1umzzYpOjO","gmtCreate":1594434553206,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434553208}}}
2020-07-11 10:29:17.110 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:29:20.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:29:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:29:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:29:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:29:20.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:29:20.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:29:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:29:20.020+0800');
2020-07-11 10:29:29.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:29:30.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:29:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:29:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:29:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:29:30.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:29:30.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:29:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:29:30.022+0800');
2020-07-11 10:29:34.636 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777618961889793, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"83","productKey":"a1umzzYpOjO","gmtCreate":1594434573292,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434573293}}}
2020-07-11 10:29:41.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:29:43.304 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777660686808577, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"86","productKey":"a1umzzYpOjO","gmtCreate":1594434583240,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434583242}}}
2020-07-11 10:29:50.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:29:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:29:50.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:29:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:29:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:29:50.059 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:29:50.063 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:29:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:29:50.019+0800');
2020-07-11 10:29:53.114 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:30:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:30:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:30:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:30:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:30:00.051 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:30:00.055 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:30:00.021+0800');
2020-07-11 10:30:03.282 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777744044321792, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"93","productKey":"a1umzzYpOjO","gmtCreate":1594434603115,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434603116}}}
2020-07-11 10:30:05.114 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:30:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:30:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:30:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:30:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:30:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:30:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:30:10.011+0800');
2020-07-11 10:30:13.364 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777786645968384, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"99","productKey":"a1umzzYpOjO","gmtCreate":1594434613271,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434613272}}}
2020-07-11 10:30:13.945 febs [JmsSession [ID:f12fbaef-0efd-4eb7-9822-f4e09d079c2b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777661026555394, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"87","productKey":"a1umzzYpOjO","gmtCreate":1594434583246,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434583323}}}
2020-07-11 10:30:17.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434491139_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:30:27.601 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6800 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:30:27.604 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:30:29.104 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:30:29.107 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:30:29.174 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-07-11 10:30:29.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.773 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1758aa11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.782 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adca3940] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$91c2b06f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.867 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4678017a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@73e776b7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6b4ca42c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:29.886 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:30:30.373 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:30:30.388 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:30:30.397 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:30:30.397 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:30:30.404 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:30:30.508 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:30:30.508 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2839 ms
2020-07-11 10:30:30.937 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:30:30.946 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:30:31.671 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:30:31.671 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:30:31.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:30:31.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:30:32.562 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:30:37.562 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:30:37.593 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:30:37.604 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:30:37.604 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:30:37.607 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:30:37.609 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:30:37.610 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594434637594'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:30:37.610 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:30:37.610 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:30:37.611 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2b9ecd05
2020-07-11 10:30:37.680 febs [main] INFO  p6spy - 2020-07-11 10:30:37 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:30:38.912 febs [main] INFO  p6spy - 2020-07-11 10:30:38 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:30:40.401 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:30:40.774 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:30:40.775 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:30:40.776 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:30:40.776 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:30:40.776 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:30:40.776 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:30:40.885 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31c56721, org.springframework.security.web.context.SecurityContextPersistenceFilter@76c587ce, org.springframework.security.web.header.HeaderWriterFilter@59831016, org.springframework.security.web.authentication.logout.LogoutFilter@31a024ea, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@38d4488c, org.springframework.security.web.session.ConcurrentSessionFilter@66fff42f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5265a8dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5868ea91, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1ab502f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cd51e4e, org.springframework.security.web.session.SessionManagementFilter@63b0b3dd, org.springframework.security.web.access.ExceptionTranslationFilter@6c46dc02, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e343265]
2020-07-11 10:30:40.954 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:30:40.986 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:30:40.990 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:30:41.569 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:30:42.322 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:30:42.336 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:30:42.393 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:30:42.412 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:30:42.431 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:30:42.448 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:30:42.451 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.601 seconds (JVM running for 16.995)
2020-07-11 10:30:42.476 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:30:42.476 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:30:42.476 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:30:42.476 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:30:42.476 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:30:43.413 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:30:43.424 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:30:43.424 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594434491139"'s failed in-progress jobs.
2020-07-11 10:30:43.429 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 10:30:43.441 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594434637594 started.
2020-07-11 10:30:43.446 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434637594_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:30:44.318 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:30:44.884 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:30:44.885 febs [QpidJMS Connection Executor: ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:30:46.534 febs [RMI TCP Connection(8)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:30:46.534 febs [RMI TCP Connection(8)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:30:46.551 febs [RMI TCP Connection(7)-192.168.3.108] INFO  p6spy - 2020-07-11 10:30:46 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:30:46.555 febs [RMI TCP Connection(8)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-07-11 10:30:48.109 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:30:48 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 123456;
2020-07-11 10:30:50.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:30:50.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:30:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:30:50.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:30:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:30:50.100 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-07-11 10:30:50.111 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:30:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-07-11T10:30:50.036+0800');
2020-07-11 10:30:53.214 febs [JmsSession [ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777953893733888, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"113","productKey":"a1umzzYpOjO","gmtCreate":1594434653145,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434653147}}}
2020-07-11 10:30:53.295 febs [JmsSession [ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777954376173568, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"114","productKey":"a1umzzYpOjO","gmtCreate":1594434653254,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434653262}}}
2020-07-11 10:30:55.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434637594_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:31:00.028 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:31:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:31:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:31:00.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:31:00.065 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:31:00.069 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:31:00.028+0800');
2020-07-11 10:31:01.754 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:31:01 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 123456;
2020-07-11 10:31:02.150 febs [JmsSession [ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777534689927681, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"75","productKey":"a1umzzYpOjO","gmtCreate":1594434553200,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434553202}}}
2020-07-11 10:31:03.321 febs [JmsSession [ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281777996495367171, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"118","productKey":"a1umzzYpOjO","gmtCreate":1594434663302,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434663304}}}
2020-07-11 10:31:07.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434637594_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:31:10.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:31:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:31:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:31:10.057 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:31:10.062 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:31:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:31:10.019+0800');
2020-07-11 10:31:13.268 febs [JmsSession [ID:aa354afa-8a1b-4688-ab9e-807836f0e53c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778037696017920, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"121","productKey":"a1umzzYpOjO","gmtCreate":1594434673121,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434673128}}}
2020-07-11 10:31:25.274 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7320 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:31:25.278 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:31:27.714 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:31:27.718 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:31:27.918 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147ms. Found 0 repository interfaces.
2020-07-11 10:31:28.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:28.863 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6c0432d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:28.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:28.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:28.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$275c202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:28.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e66e3931] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9b238a3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@236ae13d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bff82cee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:31:29.600 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:31:29.616 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:31:29.625 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:31:29.625 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:31:29.634 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:31:29.739 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:31:29.739 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4377 ms
2020-07-11 10:31:30.066 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:31:30.073 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:31:30.515 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:31:30.515 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:31:30.515 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:31:30.515 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:31:31.035 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:31:33.032 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:31:33.061 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:31:33.074 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:31:33.075 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:31:33.078 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:31:33.080 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:31:33.081 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594434693062'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:31:33.081 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:31:33.081 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:31:33.082 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@131d977f
2020-07-11 10:31:33.157 febs [main] INFO  p6spy - 2020-07-11 10:31:33 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:31:34.200 febs [main] INFO  p6spy - 2020-07-11 10:31:34 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:31:35.091 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:31:35.335 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:31:35.411 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@757c685d, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f27730b, org.springframework.security.web.header.HeaderWriterFilter@14d298d6, org.springframework.security.web.authentication.logout.LogoutFilter@2a60981c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@e3692ca, org.springframework.security.web.session.ConcurrentSessionFilter@4f22fd5d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14eb96e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f33bb6f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@40d370fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476a970c, org.springframework.security.web.session.SessionManagementFilter@94aeba1, org.springframework.security.web.access.ExceptionTranslationFilter@4c579b5b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5af4328e]
2020-07-11 10:31:35.463 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:31:35.478 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:31:35.479 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:31:35.846 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:31:36.561 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:31:36.580 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:31:36.650 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:31:36.672 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:31:36.687 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:31:36.710 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:31:36.713 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.279 seconds (JVM running for 15.097)
2020-07-11 10:31:36.741 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:31:36.741 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:31:36.741 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:31:36.741 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:31:36.741 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:31:37.675 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:31:37.689 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:31:37.689 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594434637594"'s failed in-progress jobs.
2020-07-11 10:31:37.701 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594434693062 started.
2020-07-11 10:31:37.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:31:37.814 febs [http-nio-8099-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:31:37.814 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:31:37.835 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-07-11 10:31:37.947 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:31:38.440 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:adf9b323-4115-494b-8334-e5088692f81b:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:31:38.441 febs [QpidJMS Connection Executor: ID:adf9b323-4115-494b-8334-e5088692f81b:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:31:39.252 febs [RMI TCP Connection(6)-192.168.3.108] INFO  p6spy - 2020-07-11 10:31:39 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:31:40.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:31:40.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:31:40.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:31:40.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:31:40.119 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：76 毫秒
2020-07-11 10:31:40.137 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:31:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 76, '2020-07-11T10:31:40.043+0800');
2020-07-11 10:31:43.335 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778164120736258, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"135","productKey":"a1umzzYpOjO","gmtCreate":1594434703264,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434703270}}}
2020-07-11 10:31:49.708 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:31:50.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:31:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:31:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:31:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:31:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:31:50.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:31:50.063 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:31:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:31:50.018+0800');
2020-07-11 10:31:53.231 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778205828846080, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"137","productKey":"a1umzzYpOjO","gmtCreate":1594434713207,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434713213}}}
2020-07-11 10:32:01.706 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:32:03.186 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778247566325248, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"141","productKey":"a1umzzYpOjO","gmtCreate":1594434723162,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434723164}}}
2020-07-11 10:32:10.015 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:32:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:32:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:32:10.051 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:32:10.055 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:32:10.015+0800');
2020-07-11 10:32:13.508 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778290016870913, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"147","productKey":"a1umzzYpOjO","gmtCreate":1594434733284,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434733286}}}
2020-07-11 10:32:13.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:32:20.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:32:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:32:20.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:32:20.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:32:20.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:32:20.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:32:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:32:20.021+0800');
2020-07-11 10:32:25.771 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:32:30.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:32:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:32:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:32:30.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:32:30.057 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:32:30.062 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:32:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:32:30.021+0800');
2020-07-11 10:32:33.191 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778373408068097, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"153","productKey":"a1umzzYpOjO","gmtCreate":1594434753166,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434753168}}}
2020-07-11 10:32:37.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:32:40.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:32:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:32:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:32:40.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:32:40.063 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:32:40.069 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:32:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:32:40.022+0800');
2020-07-11 10:32:49.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:32:50.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:32:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:32:50.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:50 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:32:50.094 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:32:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:32:50.097 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：79 毫秒
2020-07-11 10:32:50.103 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:32:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 79, '2020-07-11T10:32:50.018+0800');
2020-07-11 10:32:53.263 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778457621255680, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"162","productKey":"a1umzzYpOjO","gmtCreate":1594434773243,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434773245}}}
2020-07-11 10:33:01.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:33:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:33:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:33:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:33:10.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:33:10.058 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:33:10.020+0800');
2020-07-11 10:33:13.320 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778541725420544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"171","productKey":"a1umzzYpOjO","gmtCreate":1594434793295,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434793297}}}
2020-07-11 10:33:13.339 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778541729638912, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"170","productKey":"a1umzzYpOjO","gmtCreate":1594434793297,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434793299}}}
2020-07-11 10:33:13.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434693062_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:33:20.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:33:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:33:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:33:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:33:20.042 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:33:20.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:33:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:33:20.009+0800');
2020-07-11 10:33:23.174 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778583077086720, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"173","productKey":"a1umzzYpOjO","gmtCreate":1594434803156,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434803157}}}
2020-07-11 10:33:23.340 febs [JmsSession [ID:adf9b323-4115-494b-8334-e5088692f81b:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778583765056000, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"175","productKey":"a1umzzYpOjO","gmtCreate":1594434803312,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434803320}}}
2020-07-11 10:33:33.626 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7380 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:33:33.630 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:33:35.126 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:33:35.129 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:33:35.199 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-07-11 10:33:35.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$37129969] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.846 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd842898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b17c9fc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6631f0d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:35.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:36.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32256e68' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:36.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8b069384] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:36.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:33:36.371 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:33:36.385 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:33:36.394 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:33:36.394 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:33:36.400 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:33:36.502 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:33:36.502 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2799 ms
2020-07-11 10:33:36.831 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:33:36.838 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:33:37.276 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:33:37.277 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:33:37.277 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:33:37.277 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:33:37.759 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:33:39.784 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:33:39.814 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:33:39.826 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:33:39.826 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:33:39.829 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:33:39.831 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:33:39.831 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594434819815'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:33:39.831 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:33:39.831 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:33:39.833 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@19d3f6ad
2020-07-11 10:33:39.902 febs [main] INFO  p6spy - 2020-07-11 10:33:39 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:33:40.940 febs [main] INFO  p6spy - 2020-07-11 10:33:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:33:41.795 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:33:42.026 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:33:42.026 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:33:42.026 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:33:42.026 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:33:42.027 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:33:42.096 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@402feb85, org.springframework.security.web.context.SecurityContextPersistenceFilter@495bc9e7, org.springframework.security.web.header.HeaderWriterFilter@6a54aa7a, org.springframework.security.web.authentication.logout.LogoutFilter@126f2eb8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@189e96af, org.springframework.security.web.session.ConcurrentSessionFilter@183a508b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@580154b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2560a7be, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1382a7d8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14d53884, org.springframework.security.web.session.SessionManagementFilter@2a60981c, org.springframework.security.web.access.ExceptionTranslationFilter@33b2ba25, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fc256ec]
2020-07-11 10:33:42.144 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:33:42.158 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:33:42.159 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:33:42.540 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:33:43.118 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:33:43.131 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:33:43.185 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:33:43.204 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:33:43.217 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:33:43.237 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:33:43.240 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.392 seconds (JVM running for 11.665)
2020-07-11 10:33:43.262 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:33:43.262 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:33:43.262 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:33:43.262 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:33:43.262 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:33:44.011 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:33:44.205 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:33:44.228 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594434819815 started.
2020-07-11 10:33:44.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:33:44.332 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:4f07d4cd-cf71-4ebf-a8b4-fbaf82f0d642:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:33:44.334 febs [QpidJMS Connection Executor: ID:4f07d4cd-cf71-4ebf-a8b4-fbaf82f0d642:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:33:44.740 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:33:44.740 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:33:44.754 febs [RMI TCP Connection(1)-192.168.3.108] INFO  p6spy - 2020-07-11 10:33:44 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:33:44.755 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 10:33:50.052 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:33:50.099 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:33:50.119 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:33:50.184 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:33:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:33:50.208 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：156 毫秒
2020-07-11 10:33:50.226 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:33:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 156, '2020-07-11T10:33:50.052+0800');
2020-07-11 10:33:56.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:33:59.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:33:59.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594434693062"'s failed in-progress jobs.
2020-07-11 10:34:00.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:34:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:34:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:34:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:34:00.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:34:00.056 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:34:00.015+0800');
2020-07-11 10:34:08.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:34:10.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:34:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:34:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:34:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:34:10.058 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:34:10.061 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:34:10.023+0800');
2020-07-11 10:34:13.226 febs [JmsSession [ID:4f07d4cd-cf71-4ebf-a8b4-fbaf82f0d642:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778792804955648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"193","productKey":"a1umzzYpOjO","gmtCreate":1594434853157,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434853158}}}
2020-07-11 10:34:20.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434819815_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:34:37.655 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7532 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:34:37.659 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:34:39.151 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:34:39.153 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:34:39.229 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64ms. Found 0 repository interfaces.
2020-07-11 10:34:39.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$71c50a0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.824 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.832 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$836993e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$ec2f106d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a0e46178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b251fb9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:39.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c5b9042a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:40.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:34:40.357 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:34:40.371 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:34:40.379 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:34:40.380 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:34:40.386 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:34:40.488 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:34:40.489 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2758 ms
2020-07-11 10:34:40.812 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:34:40.819 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:34:41.263 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:34:41.263 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:34:41.264 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:34:41.264 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:34:41.743 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:34:43.753 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:34:43.785 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:34:43.797 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:34:43.797 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:34:43.800 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:34:43.802 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:34:43.803 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594434883786'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:34:43.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:34:43.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:34:43.804 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5a2035e1
2020-07-11 10:34:43.877 febs [main] INFO  p6spy - 2020-07-11 10:34:43 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:34:44.896 febs [main] INFO  p6spy - 2020-07-11 10:34:44 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:34:45.780 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:34:46.013 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:34:46.014 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:34:46.082 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@402feb85, org.springframework.security.web.context.SecurityContextPersistenceFilter@495bc9e7, org.springframework.security.web.header.HeaderWriterFilter@6a54aa7a, org.springframework.security.web.authentication.logout.LogoutFilter@126f2eb8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@189e96af, org.springframework.security.web.session.ConcurrentSessionFilter@183a508b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@580154b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2560a7be, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1382a7d8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14d53884, org.springframework.security.web.session.SessionManagementFilter@2a60981c, org.springframework.security.web.access.ExceptionTranslationFilter@33b2ba25, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fc256ec]
2020-07-11 10:34:46.132 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:34:46.148 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:34:46.149 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:34:46.537 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:34:47.112 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:34:47.128 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:34:47.208 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:34:47.227 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:34:47.243 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:34:47.260 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:34:47.263 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.353 seconds (JVM running for 11.584)
2020-07-11 10:34:47.285 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:34:47.285 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:34:47.285 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:34:47.285 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:34:47.285 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:34:47.969 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:34:48.228 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:34:48.240 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:34:48.240 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594434819815"'s failed in-progress jobs.
2020-07-11 10:34:48.246 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 10:34:48.249 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594434883786 started.
2020-07-11 10:34:48.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:34:48.305 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:3485e38d-d16c-4826-b196-af5c3b789186:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:34:48.306 febs [QpidJMS Connection Executor: ID:3485e38d-d16c-4826-b196-af5c3b789186:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:34:48.894 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:34:48.895 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:34:48.908 febs [RMI TCP Connection(2)-192.168.3.108] INFO  p6spy - 2020-07-11 10:34:48 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:34:48.911 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-07-11 10:34:50.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:34:50.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:34:50.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:34:50.102 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:34:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:34:50.104 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-07-11 10:34:50.116 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:34:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 60, '2020-07-11T10:34:50.044+0800');
2020-07-11 10:34:53.343 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281778960832883200, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"210","productKey":"a1umzzYpOjO","gmtCreate":1594434893218,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434893220}}}
2020-07-11 10:34:54.144 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:34:54 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:35:00.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:35:03.574 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779002050305536, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"213","productKey":"a1umzzYpOjO","gmtCreate":1594434903045,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434903047}}}
2020-07-11 10:35:03.576 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779002528491008, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"215","productKey":"a1umzzYpOjO","gmtCreate":1594434903159,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434903161}}}
2020-07-11 10:35:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:35:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:35:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:35:10.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:35:10.056 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:35:10.012+0800');
2020-07-11 10:35:12.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:35:20.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:35:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:35:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:35:20.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:35:20.057 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:35:20.061 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:35:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:35:20.021+0800');
2020-07-11 10:35:23.193 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779086339121664, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"223","productKey":"a1umzzYpOjO","gmtCreate":1594434923141,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434923143}}}
2020-07-11 10:35:23.195 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779086351627264, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"222","productKey":"a1umzzYpOjO","gmtCreate":1594434923139,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434923146}}}
2020-07-11 10:35:24.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:35:30.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:35:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:35:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:35:30.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:35:30.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:35:30.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:35:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:35:30.022+0800');
2020-07-11 10:35:33.304 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779128466592768, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"226","productKey":"a1umzzYpOjO","gmtCreate":1594434933185,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434933187}}}
2020-07-11 10:35:36.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:35:40.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:35:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:35:40.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:35:40.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:35:40.073 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 10:35:40.079 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:35:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T10:35:40.025+0800');
2020-07-11 10:35:48.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:35:50.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:35:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:35:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:35:50.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:35:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:35:50.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:35:50.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:35:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:35:50.019+0800');
2020-07-11 10:35:53.083 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779211845301760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"233","productKey":"a1umzzYpOjO","gmtCreate":1594434953060,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434953067}}}
2020-07-11 10:35:53.224 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779212323433473, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"235","productKey":"a1umzzYpOjO","gmtCreate":1594434953178,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434953180}}}
2020-07-11 10:36:00.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:36:03.261 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779254417388544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"239","productKey":"a1umzzYpOjO","gmtCreate":1594434963215,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434963217}}}
2020-07-11 10:36:10.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:36:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:36:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:36:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:36:10.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:36:10.046 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:36:10.010+0800');
2020-07-11 10:36:12.326 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:36:13.351 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779296259783681, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"242","productKey":"a1umzzYpOjO","gmtCreate":1594434973191,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434973193}}}
2020-07-11 10:36:13.369 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779296263955457, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"243","productKey":"a1umzzYpOjO","gmtCreate":1594434973192,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434973194}}}
2020-07-11 10:36:20.446 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:36:20.456 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:36:20.461 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:36:20.490 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:36:20.492 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-07-11 10:36:20.497 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:36:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-07-11T10:36:20.446+0800');
2020-07-11 10:36:23.353 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779338324435456, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"247","productKey":"a1umzzYpOjO","gmtCreate":1594434983220,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434983221}}}
2020-07-11 10:36:24.322 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:36:30.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:36:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:36:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:36:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:36:30.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:36:30.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:36:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:36:30.011+0800');
2020-07-11 10:36:33.057 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779379491632640, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"249","productKey":"a1umzzYpOjO","gmtCreate":1594434993035,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594434993036}}}
2020-07-11 10:36:33.192 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779380087165440, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"251","productKey":"a1umzzYpOjO","gmtCreate":1594434993171,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594434993179}}}
2020-07-11 10:36:36.324 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:36:40.023 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:36:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:36:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:36:40.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:36:40.068 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-07-11 10:36:40.074 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:36:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-07-11T10:36:40.023+0800');
2020-07-11 10:36:43.213 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779422118243328, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"255","productKey":"a1umzzYpOjO","gmtCreate":1594435003195,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435003199}}}
2020-07-11 10:36:48.319 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 10:36:48 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:36:48.326 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594434883786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:36:50.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:36:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:36:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:36:50.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:36:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:36:50.056 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:36:50.060 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:36:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:36:50.020+0800');
2020-07-11 10:36:53.155 febs [JmsSession [ID:3485e38d-d16c-4826-b196-af5c3b789186:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779463822250496, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"257","productKey":"a1umzzYpOjO","gmtCreate":1594435013141,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435013143}}}
2020-07-11 10:36:57.713 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15468 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:36:57.717 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:36:59.212 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:36:59.214 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:36:59.275 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-07-11 10:36:59.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:36:59.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b7520950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:36:59.906 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:36:59.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:36:59.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4dc3987f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:36:59.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$31bc0fae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e67160b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3e1f1046' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b46036b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:37:00.454 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:37:00.468 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:37:00.476 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:37:00.476 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:37:00.482 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:37:00.587 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:37:00.587 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2806 ms
2020-07-11 10:37:00.918 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:37:00.926 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:37:01.374 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:37:01.374 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:37:01.374 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:37:01.374 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:37:01.878 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:37:03.866 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:37:03.896 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:37:03.908 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:37:03.908 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:37:03.911 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:37:03.913 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:37:03.913 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435023897'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:37:03.913 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:37:03.913 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:37:03.915 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2cc61b3b
2020-07-11 10:37:03.984 febs [main] INFO  p6spy - 2020-07-11 10:37:03 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:37:05.004 febs [main] INFO  p6spy - 2020-07-11 10:37:05 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:37:05.842 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:37:06.071 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:37:06.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:37:06.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:37:06.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:37:06.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:37:06.139 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78bce1c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@183a508b, org.springframework.security.web.header.HeaderWriterFilter@4cb773c5, org.springframework.security.web.authentication.logout.LogoutFilter@2560a7be, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b540131, org.springframework.security.web.session.ConcurrentSessionFilter@481bae3f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14293540, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e7fa4b0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4fc256ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@189e96af, org.springframework.security.web.session.SessionManagementFilter@3f33bb6f, org.springframework.security.web.access.ExceptionTranslationFilter@48751d8a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d34866a]
2020-07-11 10:37:06.186 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:37:06.200 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:37:06.202 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:37:06.568 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:37:07.143 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:37:07.158 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:37:07.215 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:37:07.234 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:37:07.247 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:37:07.265 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:37:07.269 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.307 seconds (JVM running for 13.2)
2020-07-11 10:37:07.295 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:37:07.296 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:37:07.296 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:37:07.296 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:37:07.296 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:37:08.039 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:37:08.235 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:37:08.257 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435023897 started.
2020-07-11 10:37:08.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:37:08.444 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:a4f15003-6b43-427e-8587-d03326c0d692:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:37:08.445 febs [QpidJMS Connection Executor: ID:a4f15003-6b43-427e-8587-d03326c0d692:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:37:09.317 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:37:09.317 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:37:09.330 febs [RMI TCP Connection(2)-192.168.3.108] INFO  p6spy - 2020-07-11 10:37:09 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:37:09.331 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-07-11 10:37:10.034 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:37:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:37:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:37:10.105 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:37:10.107 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：73 毫秒
2020-07-11 10:37:10.121 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 73, '2020-07-11T10:37:10.034+0800');
2020-07-11 10:37:13.227 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779547695735810, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"265","productKey":"a1umzzYpOjO","gmtCreate":1594435033138,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435033140}}}
2020-07-11 10:37:13.363 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779548152973312, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"267","productKey":"a1umzzYpOjO","gmtCreate":1594435033239,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435033248}}}
2020-07-11 10:37:15.074 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:37:15 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:37:20.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:37:23.252 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:37:23.252 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594434883786"'s failed in-progress jobs.
2020-07-11 10:37:30.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:37:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:37:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:37:30.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:37:30.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:37:30.063 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:37:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:37:30.023+0800');
2020-07-11 10:37:32.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:37:33.138 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779631451863040, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"273","productKey":"a1umzzYpOjO","gmtCreate":1594435053107,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435053108}}}
2020-07-11 10:37:33.247 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779631879624192, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"275","productKey":"a1umzzYpOjO","gmtCreate":1594435053209,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435053211}}}
2020-07-11 10:37:40.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:37:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:37:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:37:40.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:37:40.062 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 10:37:40.066 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:37:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T10:37:40.019+0800');
2020-07-11 10:37:44.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:37:50.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:37:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:37:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:37:50.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:37:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:37:50.073 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-07-11 10:37:50.090 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:37:50 | 耗时 11 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 50, '2020-07-11T10:37:50.023+0800');
2020-07-11 10:37:56.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:38:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:38:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:38:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:38:00.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:38:00.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:38:00.057 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:38:00.024+0800');
2020-07-11 10:38:03.269 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779757016638976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"285","productKey":"a1umzzYpOjO","gmtCreate":1594435083044,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435083045}}}
2020-07-11 10:38:03.270 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779757448648192, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"287","productKey":"a1umzzYpOjO","gmtCreate":1594435083144,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435083148}}}
2020-07-11 10:38:08.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:38:10.248 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:38:10.282 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:38:10.289 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:38:10.514 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:38:10.516 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：268 毫秒
2020-07-11 10:38:10.522 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 268, '2020-07-11T10:38:10.248+0800');
2020-07-11 10:38:13.126 febs [JmsSession [ID:a4f15003-6b43-427e-8587-d03326c0d692:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779799152720896, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"289","productKey":"a1umzzYpOjO","gmtCreate":1594435093090,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435093092}}}
2020-07-11 10:38:20.294 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435023897_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:38:35.597 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17760 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:38:35.601 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:38:37.143 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:38:37.146 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:38:37.218 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 10:38:37.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:37.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c6ab90b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:37.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:37.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:37.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d1d1fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:37.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4115970e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.050 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5cae819] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7af0affa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.063 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1a9f8acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:38:38.423 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:38:38.438 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:38:38.449 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:38:38.449 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:38:38.456 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:38:38.561 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:38:38.561 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2886 ms
2020-07-11 10:38:38.886 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:38:38.894 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:38:39.358 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:38:39.358 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:38:39.359 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:38:39.359 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:38:39.840 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:38:41.863 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:38:41.894 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:38:41.905 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:38:41.905 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:38:41.908 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:38:41.910 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:38:41.911 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435121895'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:38:41.911 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:38:41.911 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:38:41.913 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@42d0e41
2020-07-11 10:38:41.987 febs [main] INFO  p6spy - 2020-07-11 10:38:41 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:38:43.083 febs [main] INFO  p6spy - 2020-07-11 10:38:43 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:38:43.981 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:38:44.238 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:38:44.239 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:38:44.311 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1382a7d8, org.springframework.security.web.context.SecurityContextPersistenceFilter@63ad5fe7, org.springframework.security.web.header.HeaderWriterFilter@6ad198c9, org.springframework.security.web.authentication.logout.LogoutFilter@27682fa9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3bc3d70e, org.springframework.security.web.session.ConcurrentSessionFilter@7057dbda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495bc9e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26be0d23, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@60e80279, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6074d638, org.springframework.security.web.session.SessionManagementFilter@6a54aa7a, org.springframework.security.web.access.ExceptionTranslationFilter@3f33bb6f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c91f5bf]
2020-07-11 10:38:44.361 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:38:44.376 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:38:44.377 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:38:44.749 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:38:45.319 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:38:45.359 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:38:45.429 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:38:45.452 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:38:45.467 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:38:45.488 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:38:45.491 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.663 seconds (JVM running for 11.665)
2020-07-11 10:38:45.514 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:38:45.514 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:38:45.514 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:38:45.514 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:38:45.514 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:38:46.168 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:38:46.454 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:38:46.464 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:38:46.464 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435023897"'s failed in-progress jobs.
2020-07-11 10:38:46.470 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 10:38:46.483 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435121895 started.
2020-07-11 10:38:46.488 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:38:46.497 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:38:46.498 febs [QpidJMS Connection Executor: ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:38:47.300 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:38:47.300 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:38:47.314 febs [RMI TCP Connection(4)-192.168.3.108] INFO  p6spy - 2020-07-11 10:38:47 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:38:47.316 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-07-11 10:38:50.027 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:38:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:38:50.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:38:50.088 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:38:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:38:50.091 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-07-11 10:38:50.109 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:38:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-07-11T10:38:50.027+0800');
2020-07-11 10:38:53.867 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281779967151372801, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"306","productKey":"a1umzzYpOjO","gmtCreate":1594435133144,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435133145}}}
2020-07-11 10:38:58.488 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:39:00.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:39:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:39:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:39:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:39:00.055 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:39:00.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:39:00.016+0800');
2020-07-11 10:39:10.051 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 10:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:39:10.489 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:39:13.053 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780050588559360, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"313","productKey":"a1umzzYpOjO","gmtCreate":1594435153036,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435153038}}}
2020-07-11 10:39:20.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:39:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:39:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:39:20.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:39:20.052 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:39:20.057 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:39:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:39:20.011+0800');
2020-07-11 10:39:22.489 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:39:30.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:39:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:39:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:39:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:39:30.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:39:30.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:39:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:39:30.012+0800');
2020-07-11 10:39:33.129 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780134785110016, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"321","productKey":"a1umzzYpOjO","gmtCreate":1594435173111,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435173112}}}
2020-07-11 10:39:33.231 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780135221327873, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"323","productKey":"a1umzzYpOjO","gmtCreate":1594435173215,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435173217}}}
2020-07-11 10:39:34.489 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:39:39.698 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:39:39 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:39:40.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:39:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:39:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:39:40.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:39:40.062 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 10:39:40.067 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:39:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T10:39:40.014+0800');
2020-07-11 10:39:42.191 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:39:42 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:39:46.488 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:39:50.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:39:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:39:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:39:50.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:39:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:39:50.061 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-07-11 10:39:50.066 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:39:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-07-11T10:39:50.016+0800');
2020-07-11 10:39:53.243 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780219170218496, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"331","productKey":"a1umzzYpOjO","gmtCreate":1594435193230,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435193232}}}
2020-07-11 10:39:58.489 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:40:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:40:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:40:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:40:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:40:00.053 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:40:00.057 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:40:00.020+0800');
2020-07-11 10:40:03.666 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780260458951680, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"333","productKey":"a1umzzYpOjO","gmtCreate":1594435203069,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435203075}}}
2020-07-11 10:40:10.490 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:40:13.140 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780302624378880, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"339","productKey":"a1umzzYpOjO","gmtCreate":1594435213126,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435213128}}}
2020-07-11 10:40:20.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:40:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:40:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:40:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:40:20.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:40:20.058 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:40:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:40:20.022+0800');
2020-07-11 10:40:22.490 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:40:30.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:40:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:40:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:40:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:40:30.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:40:30.050 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:40:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:40:30.018+0800');
2020-07-11 10:40:33.205 febs [JmsSession [ID:c7049918-cc96-4a8d-8c52-0d2c3eb07b18:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780386787280386, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"346","productKey":"a1umzzYpOjO","gmtCreate":1594435233192,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435233195}}}
2020-07-11 10:40:34.556 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435121895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:40:40.086 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:40:40.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:40 | 耗时 6 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:40:40.109 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:40:40.277 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:40:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:40:40.278 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：192 毫秒
2020-07-11 10:40:40.282 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:40:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 192, '2020-07-11T10:40:40.086+0800');
2020-07-11 10:40:50.928 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15984 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:40:50.932 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:40:52.453 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:40:52.455 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:40:52.527 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-07-11 10:40:53.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9a76be50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30e84d7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$14e0c4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c99615b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@498a612d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ee6ab86b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:40:53.677 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:40:53.692 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:40:53.701 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:40:53.702 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:40:53.708 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:40:53.811 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:40:53.811 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2806 ms
2020-07-11 10:40:54.147 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:40:54.154 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:40:54.590 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:40:54.591 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:40:54.591 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:40:54.591 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:40:55.059 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:40:57.051 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:40:57.083 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:40:57.094 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:40:57.095 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:40:57.098 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:40:57.100 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:40:57.101 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435257084'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:40:57.101 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:40:57.101 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:40:57.102 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3ff26c9
2020-07-11 10:40:57.193 febs [main] INFO  p6spy - 2020-07-11 10:40:57 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:40:58.202 febs [main] INFO  p6spy - 2020-07-11 10:40:58 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:40:59.049 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:40:59.276 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:40:59.277 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:40:59.277 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:40:59.277 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:40:59.277 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:40:59.277 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:40:59.342 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b5390, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b58d678, org.springframework.security.web.header.HeaderWriterFilter@2651e783, org.springframework.security.web.authentication.logout.LogoutFilter@116b0b32, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@c79780, org.springframework.security.web.session.ConcurrentSessionFilter@535be281, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@641bc9a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a96f3cb, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6c46dc02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59831016, org.springframework.security.web.session.SessionManagementFilter@4eb73cc8, org.springframework.security.web.access.ExceptionTranslationFilter@16f8df70, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16c9e378]
2020-07-11 10:40:59.390 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:40:59.404 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:40:59.406 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:40:59.774 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:41:00.360 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:41:00.373 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:41:00.428 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:41:00.448 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:41:00.461 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:41:00.479 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:41:00.482 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.301 seconds (JVM running for 11.566)
2020-07-11 10:41:00.504 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:41:00.504 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:41:00.504 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:41:00.504 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:41:00.504 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:41:01.134 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:41:01.407 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:a0007510-5705-409c-8ca0-5d68cf198357:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:41:01.409 febs [QpidJMS Connection Executor: ID:a0007510-5705-409c-8ca0-5d68cf198357:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:41:01.449 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:41:01.461 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:41:01.461 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435121895"'s failed in-progress jobs.
2020-07-11 10:41:01.476 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435257084 started.
2020-07-11 10:41:01.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:41:02.299 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:41:02.299 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:41:02.313 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 10:41:02 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:41:02.313 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-07-11 10:41:03.140 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780512196882433, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"358","productKey":"a1umzzYpOjO","gmtCreate":1594435263093,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435263095}}}
2020-07-11 10:41:10.059 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:41:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:41:10.091 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:41:10.133 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:41:10.135 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：76 毫秒
2020-07-11 10:41:10.150 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 76, '2020-07-11T10:41:10.059+0800');
2020-07-11 10:41:13.061 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780553942786048, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"361","productKey":"a1umzzYpOjO","gmtCreate":1594435273045,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435273047}}}
2020-07-11 10:41:13.484 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:41:20.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:41:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:41:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:41:20.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:41:20.068 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 10:41:20.073 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:41:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T10:41:20.026+0800');
2020-07-11 10:41:23.279 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780596124947968, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"365","productKey":"a1umzzYpOjO","gmtCreate":1594435283096,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435283103}}}
2020-07-11 10:41:23.287 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780596552766976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"367","productKey":"a1umzzYpOjO","gmtCreate":1594435283204,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435283206}}}
2020-07-11 10:41:25.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:41:30.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:41:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:41:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:41:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:41:30.054 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:41:30.058 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:41:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:41:30.022+0800');
2020-07-11 10:41:33.139 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780638168638464, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"371","productKey":"a1umzzYpOjO","gmtCreate":1594435293127,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435293128}}}
2020-07-11 10:41:37.484 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:41:40.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:41:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:41:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:41:40.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:41:40.062 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:41:40.067 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:41:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:41:40.021+0800');
2020-07-11 10:41:43.656 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:41:43 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE e.type = 1;
2020-07-11 10:41:43.668 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:41:43 | 耗时 3 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:41:49.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:41:50.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:41:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:41:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:41:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:41:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:41:50.050 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:41:50.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:41:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:41:50.018+0800');
2020-07-11 10:41:53.110 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780721933083648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"379","productKey":"a1umzzYpOjO","gmtCreate":1594435313096,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435313099}}}
2020-07-11 10:41:53.175 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 10:41:53 | 耗时 0 ms | SQL 语句：
SELECT a.* FROM a_account a WHERE a.kh_account = 'fxp' AND a.kh_pwd = '123456';
2020-07-11 10:41:53.179 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:21128D16BDC0CDDF5FCCCEB0D031BE1F
2020-07-11 10:41:53.292 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 10:41:53 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 10:41:53.299 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 10:41:53 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 10:41:56.107 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 10:41:56 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:42:01.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:42:03.064 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780763674806272, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"381","productKey":"a1umzzYpOjO","gmtCreate":1594435323050,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435323052}}}
2020-07-11 10:42:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:42:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:42:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:42:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:42:10.073 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:42:10.078 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:42:10.041+0800');
2020-07-11 10:42:13.481 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:42:20.140 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:42:20.150 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:42:20.156 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:42:20.182 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:42:20.184 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-07-11 10:42:20.188 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:42:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-07-11T10:42:20.140+0800');
2020-07-11 10:42:23.043 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780847489543681, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"389","productKey":"a1umzzYpOjO","gmtCreate":1594435343033,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435343035}}}
2020-07-11 10:42:25.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:42:30.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:42:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:42:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:42:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:42:30.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:42:30.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:42:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:42:30.020+0800');
2020-07-11 10:42:33.199 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780890045043201, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"395","productKey":"a1umzzYpOjO","gmtCreate":1594435353178,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435353180}}}
2020-07-11 10:42:37.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:42:40.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:42:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:42:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:42:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:42:40.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:42:40.053 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:42:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:42:40.018+0800');
2020-07-11 10:42:49.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:42:50.015 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:42:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:42:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:42:50.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:42:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:42:50.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:42:50.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:42:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:42:50.015+0800');
2020-07-11 10:42:53.234 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281780973918444032, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"403","productKey":"a1umzzYpOjO","gmtCreate":1594435373177,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435373178}}}
2020-07-11 10:43:01.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:43:03.029 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781015194624000, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"405","productKey":"a1umzzYpOjO","gmtCreate":1594435383018,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435383020}}}
2020-07-11 10:43:03.131 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781015622410240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"406","productKey":"a1umzzYpOjO","gmtCreate":1594435383119,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435383121}}}
2020-07-11 10:43:10.137 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:43:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:43:10.204 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:43:10.313 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:43:10.315 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：178 毫秒
2020-07-11 10:43:10.319 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 178, '2020-07-11T10:43:10.137+0800');
2020-07-11 10:43:13.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:43:20.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:43:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:43:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:43:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:43:20.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:43:20.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:43:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:43:20.019+0800');
2020-07-11 10:43:25.484 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:43:27.340 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:43:27 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:43:30.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:43:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:43:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:43:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:43:30.047 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:43:30.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:43:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:43:30.018+0800');
2020-07-11 10:43:33.133 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781141476790272, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"419","productKey":"a1umzzYpOjO","gmtCreate":1594435413125,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435413127}}}
2020-07-11 10:43:37.484 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:43:40.158 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:43:40.164 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:43:40.170 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:43:40.623 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:43:40.625 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：467 毫秒
2020-07-11 10:43:40.629 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:43:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 467, '2020-07-11T10:43:40.158+0800');
2020-07-11 10:43:43.091 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781183222582272, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"421","productKey":"a1umzzYpOjO","gmtCreate":1594435423077,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435423079}}}
2020-07-11 10:43:43.209 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781183642130432, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"422","productKey":"a1umzzYpOjO","gmtCreate":1594435423178,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435423180}}}
2020-07-11 10:43:44.875 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 10:43:44 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:43:49.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:43:50.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:43:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:43:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:43:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:43:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:43:50.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:43:50.053 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:43:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:43:50.018+0800');
2020-07-11 10:43:53.282 febs [JmsSession [ID:a0007510-5705-409c-8ca0-5d68cf198357:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781225362810368, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"427","productKey":"a1umzzYpOjO","gmtCreate":1594435433124,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435433126}}}
2020-07-11 10:44:01.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:44:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:44:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:44:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:44:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:44:10.077 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:44:10.081 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:44:10.044+0800');
2020-07-11 10:44:13.486 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:44:20.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:44:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:44:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:44:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:44:20.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:44:20.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:44:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:44:20.019+0800');
2020-07-11 10:44:25.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435257084_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:44:30.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:44:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:44:30.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:44:30.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:44:30.071 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:44:30.074 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:44:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:44:30.043+0800');
2020-07-11 10:44:38.321 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8624 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:44:38.324 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:44:39.820 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:44:39.822 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:44:39.896 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-07-11 10:44:40.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2c8b8bf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2fd1b25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a6f59254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5baae35f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.663 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49edcb30' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.664 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$807f8611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:40.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:44:41.028 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:44:41.041 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:44:41.049 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:44:41.050 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:44:41.056 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:44:41.156 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:44:41.156 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2775 ms
2020-07-11 10:44:41.476 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:44:41.483 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:44:41.931 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:44:41.932 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:44:41.932 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:44:41.932 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:44:42.406 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:44:44.376 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:44:44.405 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:44:44.416 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:44:44.416 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:44:44.420 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:44:44.421 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:44:44.422 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435484406'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:44:44.422 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:44:44.422 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:44:44.423 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2c0fefac
2020-07-11 10:44:44.492 febs [main] INFO  p6spy - 2020-07-11 10:44:44 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:44:45.552 febs [main] INFO  p6spy - 2020-07-11 10:44:45 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:44:46.460 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:44:46.714 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:44:46.715 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:44:46.715 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:44:46.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27d5eb00, org.springframework.security.web.context.SecurityContextPersistenceFilter@481bae3f, org.springframework.security.web.header.HeaderWriterFilter@14eb96e9, org.springframework.security.web.authentication.logout.LogoutFilter@6e7fa4b0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1983a4e4, org.springframework.security.web.session.ConcurrentSessionFilter@40277077, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c114687, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c8a9266, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2d34866a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b540131, org.springframework.security.web.session.SessionManagementFilter@44587c44, org.springframework.security.web.access.ExceptionTranslationFilter@6c4d0224, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31a024ea]
2020-07-11 10:44:46.839 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:44:46.855 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:44:46.856 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:44:47.269 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:44:48.038 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:44:48.068 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:44:48.218 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:44:48.257 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:44:48.276 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:44:48.304 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:44:48.308 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.687 seconds (JVM running for 12.0)
2020-07-11 10:44:48.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:44:48.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:44:48.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:44:48.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:44:48.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:44:49.266 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:44:49.281 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:44:49.282 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435257084"'s failed in-progress jobs.
2020-07-11 10:44:49.313 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435484406 started.
2020-07-11 10:44:49.329 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:44:49.421 febs [http-nio-8099-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:44:49.421 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:44:49.443 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-07-11 10:44:50.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:44:50.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:44:50.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:44:50.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:44:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:44:50.165 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：122 毫秒
2020-07-11 10:44:50.185 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:44:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 122, '2020-07-11T10:44:50.043+0800');
2020-07-11 10:44:50.466 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 10:44:50 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:44:52.256 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:44:52.556 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:44:52.557 febs [QpidJMS Connection Executor: ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:44:53.052 febs [RMI TCP Connection(4)-192.168.3.108] INFO  p6spy - 2020-07-11 10:44:53 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:44:53.171 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781477004344320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"450","productKey":"a1umzzYpOjO","gmtCreate":1594435493121,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435493122}}}
2020-07-11 10:45:01.325 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:45:03.176 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781519081584641, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"455","productKey":"a1umzzYpOjO","gmtCreate":1594435503152,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435503154}}}
2020-07-11 10:45:10.025 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:45:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:45:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:45:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:45:10.071 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-07-11 10:45:10.077 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-07-11T10:45:10.025+0800');
2020-07-11 10:45:13.327 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:45:20.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:45:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:45:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:45:20.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:45:20.057 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:45:20.061 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:45:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:45:20.022+0800');
2020-07-11 10:45:25.327 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:45:30.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:45:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:45:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:45:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:45:30.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 10:45:30.057 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:45:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T10:45:30.018+0800');
2020-07-11 10:45:37.326 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:45:40.034 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:45:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:45:40.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:45:40.111 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:45:40.113 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：79 毫秒
2020-07-11 10:45:40.118 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:45:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 79, '2020-07-11T10:45:40.034+0800');
2020-07-11 10:45:43.158 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781686807622144, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"471","productKey":"a1umzzYpOjO","gmtCreate":1594435543141,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435543143}}}
2020-07-11 10:45:49.327 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:45:49.952 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:45:49 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:45:50.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:45:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:45:50.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:45:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:45:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:45:50.060 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:45:50.065 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:45:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:45:50.023+0800');
2020-07-11 10:46:01.328 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:46:03.160 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781770697892352, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"478","productKey":"a1umzzYpOjO","gmtCreate":1594435563137,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435563144}}}
2020-07-11 10:46:10.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:46:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:46:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:46:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:46:10.040 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:46:10.043 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:46:10.010+0800');
2020-07-11 10:46:13.214 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781812854845952, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"483","productKey":"a1umzzYpOjO","gmtCreate":1594435573187,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435573194}}}
2020-07-11 10:46:13.328 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:46:20.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:46:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:46:20.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:46:20.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:46:20.055 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:46:20.059 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:46:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:46:20.021+0800');
2020-07-11 10:46:25.328 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:46:30.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:46:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:46:30.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:46:30.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:46:30.072 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:46:30.076 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:46:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:46:30.043+0800');
2020-07-11 10:46:33.086 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781896212420096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"489","productKey":"a1umzzYpOjO","gmtCreate":1594435593068,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435593070}}}
2020-07-11 10:46:37.328 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:46:40.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:46:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:46:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:46:40.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:46:40.059 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-07-11 10:46:40.063 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:46:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-07-11T10:46:40.017+0800');
2020-07-11 10:46:49.327 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:46:50.048 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:46:50.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:46:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:46:50.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:46:50 | 耗时 4 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:46:50.099 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-07-11 10:46:50.104 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:46:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 51, '2020-07-11T10:46:50.048+0800');
2020-07-11 10:46:53.074 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 10:46:53 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:46:53.150 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281781980379524096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"498","productKey":"a1umzzYpOjO","gmtCreate":1594435613135,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435613136}}}
2020-07-11 10:47:01.330 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:47:03.219 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782022607773184, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"503","productKey":"a1umzzYpOjO","gmtCreate":1594435623198,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435623204}}}
2020-07-11 10:47:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:47:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:47:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:47:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:47:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:47:10.011+0800');
2020-07-11 10:47:13.047 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782063816823297, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"505","productKey":"a1umzzYpOjO","gmtCreate":1594435633028,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435633029}}}
2020-07-11 10:47:13.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:47:20.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:47:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:47:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:47:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:47:20.052 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:47:20.056 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:47:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:47:20.019+0800');
2020-07-11 10:47:23.088 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782105931699200, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"509","productKey":"a1umzzYpOjO","gmtCreate":1594435643068,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435643070}}}
2020-07-11 10:47:25.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:47:30.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:47:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:47:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:47:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:47:30.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:47:30.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:47:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:47:30.017+0800');
2020-07-11 10:47:33.031 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782147652481024, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"513","productKey":"a1umzzYpOjO","gmtCreate":1594435653015,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435653017}}}
2020-07-11 10:47:33.136 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782148092981760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"514","productKey":"a1umzzYpOjO","gmtCreate":1594435653116,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435653122}}}
2020-07-11 10:47:37.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:47:40.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:47:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:47:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:47:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:47:40.052 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:47:40.055 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:47:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:47:40.018+0800');
2020-07-11 10:47:49.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:47:50.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:47:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:47:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:47:50.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:47:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:47:50.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:47:50.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:47:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:47:50.017+0800');
2020-07-11 10:47:53.233 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782232381617152, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"522","productKey":"a1umzzYpOjO","gmtCreate":1594435673217,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435673219}}}
2020-07-11 10:48:01.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:48:03.249 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782274219877888, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"526","productKey":"a1umzzYpOjO","gmtCreate":1594435683192,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435683194}}}
2020-07-11 10:48:10.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:48:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:48:10.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:48:10.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 10:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:48:10.019+0800');
2020-07-11 10:48:13.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:48:20.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:48:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:48:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:48:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:48:20.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 10:48:20.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 10:48:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T10:48:20.018+0800');
2020-07-11 10:48:25.333 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:48:30.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:48:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:48:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:48:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:48:30.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 10:48:30.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 10:48:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T10:48:30.017+0800');
2020-07-11 10:48:33.108 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782399646341632, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"537","productKey":"a1umzzYpOjO","gmtCreate":1594435713095,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435713098}}}
2020-07-11 10:48:37.333 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:48:40.013 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:48:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:48:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:48:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:48:40.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:48:40.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 10:48:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:48:40.013+0800');
2020-07-11 10:48:43.164 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782441778023424, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"542","productKey":"a1umzzYpOjO","gmtCreate":1594435723141,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435723143}}}
2020-07-11 10:48:49.342 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:48:50.213 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:48:50.243 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:50 | 耗时 10 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:48:50.257 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:50 | 耗时 10 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:48:50.739 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:48:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:48:50.745 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：532 毫秒
2020-07-11 10:48:50.751 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:48:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 532, '2020-07-11T10:48:50.213+0800');
2020-07-11 10:48:53.176 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782483809170432, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"546","productKey":"a1umzzYpOjO","gmtCreate":1594435733161,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435733163}}}
2020-07-11 10:49:01.341 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435484406_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:49:03.141 febs [JmsSession [ID:ac0fa987-6ade-402f-8d26-7f5208bbf523:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782525584539136, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"550","productKey":"a1umzzYpOjO","gmtCreate":1594435743122,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435743124}}}
2020-07-11 10:49:10.095 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:49:10.133 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:10 | 耗时 33 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:49:10.152 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:10 | 耗时 15 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:49:10.802 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:10 | 耗时 69 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:49:10.817 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：722 毫秒
2020-07-11 10:49:10.835 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:49:10 | 耗时 4 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 722, '2020-07-11T10:49:10.095+0800');
2020-07-11 10:49:20.511 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13992 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:49:20.515 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:49:22.084 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:49:22.087 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:49:22.158 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 10:49:22.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$37129969] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd842898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b17c9fc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6631f0d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32256e68' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8b069384] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:22.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:49:23.333 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:49:23.348 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:49:23.356 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:49:23.357 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:49:23.363 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:49:23.466 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:49:23.466 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2886 ms
2020-07-11 10:49:23.798 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:49:23.806 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:49:24.254 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:49:24.255 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:49:24.255 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:49:24.255 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:49:24.750 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:49:26.812 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:49:26.842 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:49:26.852 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:49:26.853 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:49:26.856 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:49:26.858 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:49:26.859 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435766843'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:49:26.859 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:49:26.859 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:49:26.860 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@61836cd9
2020-07-11 10:49:26.941 febs [main] INFO  p6spy - 2020-07-11 10:49:26 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:49:28.224 febs [main] INFO  p6spy - 2020-07-11 10:49:28 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:49:30.558 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:49:31.316 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:49:31.316 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:49:31.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:49:31.318 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:49:31.472 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@538a90a5, org.springframework.security.web.context.SecurityContextPersistenceFilter@26be0d23, org.springframework.security.web.header.HeaderWriterFilter@6fe243a, org.springframework.security.web.authentication.logout.LogoutFilter@50013a15, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@546c30c2, org.springframework.security.web.session.ConcurrentSessionFilter@580154b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2560a7be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f1574c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@e5c52fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74d53d63, org.springframework.security.web.session.SessionManagementFilter@63ad5fe7, org.springframework.security.web.access.ExceptionTranslationFilter@183a508b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@402feb85]
2020-07-11 10:49:31.571 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:49:31.605 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:49:31.610 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:49:32.408 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:49:33.085 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:49:33.102 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:49:33.168 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:49:33.188 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:49:33.206 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:49:33.227 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:49:33.231 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.489 seconds (JVM running for 14.858)
2020-07-11 10:49:33.256 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:49:33.256 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:49:33.256 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:49:33.256 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:49:33.256 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:49:33.897 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:49:34.190 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:49:34.199 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:49:34.200 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435484406"'s failed in-progress jobs.
2020-07-11 10:49:34.212 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:49:34.213 febs [QpidJMS Connection Executor: ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:49:34.215 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435766843 started.
2020-07-11 10:49:34.222 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:49:34.966 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:49:34.966 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:49:34.980 febs [RMI TCP Connection(6)-192.168.3.108] INFO  p6spy - 2020-07-11 10:49:34 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:49:34.983 febs [RMI TCP Connection(5)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-07-11 10:49:38.132 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:49:38 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:49:40.027 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:49:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:49:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:49:40.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:49:40.093 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：65 毫秒
2020-07-11 10:49:40.104 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:49:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 65, '2020-07-11T10:49:40.027+0800');
2020-07-11 10:49:43.130 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782693193119744, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"565","productKey":"a1umzzYpOjO","gmtCreate":1594435783082,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435783084}}}
2020-07-11 10:49:46.219 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:49:50.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:49:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:49:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:49:50.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:49:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:49:50.064 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:49:50.068 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:49:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:49:50.024+0800');
2020-07-11 10:49:53.169 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782735383613953, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"570","productKey":"a1umzzYpOjO","gmtCreate":1594435793142,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435793143}}}
2020-07-11 10:49:58.289 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:50:00.296 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:50:00.338 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:00 | 耗时 3 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:50:00.354 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:00 | 耗时 4 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:50:00.391 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:50:00.394 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：98 毫秒
2020-07-11 10:50:00.399 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 98, '2020-07-11T10:50:00.296+0800');
2020-07-11 10:50:10.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:50:13.034 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782818665623552, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"577","productKey":"a1umzzYpOjO","gmtCreate":1594435812997,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435813000}}}
2020-07-11 10:50:13.144 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782819135485952, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"578","productKey":"a1umzzYpOjO","gmtCreate":1594435813108,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435813109}}}
2020-07-11 10:50:20.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:50:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:50:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:50:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:50:20.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:50:20.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:50:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:50:20.017+0800');
2020-07-11 10:50:22.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:50:23.069 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782860826859521, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"581","productKey":"a1umzzYpOjO","gmtCreate":1594435823049,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435823051}}}
2020-07-11 10:50:23.172 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782861254587392, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"583","productKey":"a1umzzYpOjO","gmtCreate":1594435823153,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435823154}}}
2020-07-11 10:50:30.094 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:50:30.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:50:30.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:50:30.134 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:50:30.135 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:50:30.139 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:50:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:50:30.094+0800');
2020-07-11 10:50:33.247 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782903390562304, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"586","productKey":"a1umzzYpOjO","gmtCreate":1594435833196,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435833199}}}
2020-07-11 10:50:33.274 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782903407339008, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"587","productKey":"a1umzzYpOjO","gmtCreate":1594435833201,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435833204}}}
2020-07-11 10:50:34.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:50:40.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:50:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:50:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:50:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:50:40.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:50:40.054 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:50:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:50:40.018+0800');
2020-07-11 10:50:43.041 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782944620663296, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"589","productKey":"a1umzzYpOjO","gmtCreate":1594435843027,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435843029}}}
2020-07-11 10:50:43.164 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782945115542138, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"590","productKey":"a1umzzYpOjO","gmtCreate":1594435843146,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435843147}}}
2020-07-11 10:50:46.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:50:50.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:50:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:50:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:50:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:50:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:50:50.059 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 10:50:50.063 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:50:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T10:50:50.019+0800');
2020-07-11 10:50:53.690 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281782987218008065, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"594","productKey":"a1umzzYpOjO","gmtCreate":1594435853184,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435853185}}}
2020-07-11 10:50:58.375 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:51:00.012 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:51:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:51:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:00 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:51:00.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:51:00.060 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 10:51:00.064 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T10:51:00.012+0800');
2020-07-11 10:51:03.669 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783028502534656, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"597","productKey":"a1umzzYpOjO","gmtCreate":1594435863021,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435863028}}}
2020-07-11 10:51:10.373 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:51:20.060 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:51:20.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:51:20.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:51:20.094 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:51:20.096 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:51:20.100 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:51:20.060+0800');
2020-07-11 10:51:22.375 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:51:23.217 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783113126764544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"606","productKey":"a1umzzYpOjO","gmtCreate":1594435883202,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594435883205}}}
2020-07-11 10:51:30.138 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:51:30.143 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:51:30.147 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:51:30.170 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:51:30.171 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 10:51:30.175 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:51:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T10:51:30.138+0800');
2020-07-11 10:51:33.085 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783154440624642, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"609","productKey":"a1umzzYpOjO","gmtCreate":1594435893052,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594435893054}}}
2020-07-11 10:51:33.254 febs [JmsSession [ID:46b0bbef-3673-4356-aea1-479e3ff015a6:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783155225064960, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"611","productKey":"a1umzzYpOjO","gmtCreate":1594435893239,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594435893241}}}
2020-07-11 10:51:34.375 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435766843_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:51:40.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:51:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:51:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:51:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:51:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:51:40.046 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:51:40.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:51:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:51:40.017+0800');
2020-07-11 10:51:54.757 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11556 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:51:54.759 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:51:56.204 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:51:56.206 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:51:56.281 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-07-11 10:51:56.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:56.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$dc8036c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:56.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:56.883 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:56.892 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72f1c5f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:56.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$56ea3d27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b9f8e32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13d019a4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.061 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$307430e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:51:57.453 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:51:57.466 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:51:57.474 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:51:57.475 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:51:57.481 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:51:57.583 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:51:57.583 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2761 ms
2020-07-11 10:51:57.926 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:51:57.933 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:51:58.375 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:51:58.376 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:51:58.376 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:51:58.376 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:51:58.857 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:52:00.890 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:52:00.922 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:52:00.934 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:52:00.934 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:52:00.937 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:52:00.939 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:52:00.940 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435920923'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:52:00.940 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:52:00.940 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:52:00.941 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@46591e98
2020-07-11 10:52:01.021 febs [main] INFO  p6spy - 2020-07-11 10:52:01 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:52:02.181 febs [main] INFO  p6spy - 2020-07-11 10:52:02 | 耗时 2 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:52:03.779 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:52:04.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:52:04.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:52:04.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:52:04.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:52:04.043 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:52:04.114 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fabfc79, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d5de79a, org.springframework.security.web.header.HeaderWriterFilter@169d4aba, org.springframework.security.web.authentication.logout.LogoutFilter@7b58d678, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3e89f5bc, org.springframework.security.web.session.ConcurrentSessionFilter@581e8969, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16f8df70, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@535be281, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@576b385d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59aa2fba, org.springframework.security.web.session.SessionManagementFilter@6ba226cd, org.springframework.security.web.access.ExceptionTranslationFilter@5a35ae82, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79fc4e99]
2020-07-11 10:52:04.174 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:52:04.190 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:52:04.192 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:52:04.582 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:52:05.182 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:52:05.198 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:52:05.259 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:52:05.281 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:52:05.296 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:52:05.316 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:52:05.319 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.269 seconds (JVM running for 12.562)
2020-07-11 10:52:05.342 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:52:05.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:52:05.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:52:05.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:52:05.343 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:52:06.048 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:52:06.283 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:52:06.296 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:52:06.296 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435766843"'s failed in-progress jobs.
2020-07-11 10:52:06.312 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435920923 started.
2020-07-11 10:52:06.317 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435920923_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:52:06.325 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:e92b78d7-d6cd-46b6-b2c0-6a3bd41b62d9:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:52:06.326 febs [QpidJMS Connection Executor: ID:e92b78d7-d6cd-46b6-b2c0-6a3bd41b62d9:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:52:06.876 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:52:06.877 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:52:06.893 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-07-11 10:52:06.896 febs [RMI TCP Connection(5)-192.168.3.108] INFO  p6spy - 2020-07-11 10:52:06 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:52:10.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:52:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:52:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:52:10.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:52:10.106 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：66 毫秒
2020-07-11 10:52:10.119 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 66, '2020-07-11T10:52:10.040+0800');
2020-07-11 10:52:18.317 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435920923_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:52:18.533 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:52:18 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:52:20.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:52:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:52:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:52:20.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:52:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:52:20.065 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 10:52:20.069 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:52:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T10:52:20.024+0800');
2020-07-11 10:52:30.316 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435920923_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:52:53.102 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8944 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:52:53.105 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:52:54.589 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:52:54.591 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:52:54.665 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-07-11 10:52:55.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3190fb17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8028a46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$abfb0175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$60b05280] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@798deee8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8584f532] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:52:55.838 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:52:55.851 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:52:55.859 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:52:55.859 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:52:55.867 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:52:55.974 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:52:55.974 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2800 ms
2020-07-11 10:52:56.303 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:52:56.311 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:52:56.758 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:52:56.759 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:52:56.759 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:52:56.759 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:52:57.229 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:52:59.228 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:52:59.258 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:52:59.269 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:52:59.269 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:52:59.272 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:52:59.274 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:52:59.275 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594435979259'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:52:59.275 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:52:59.275 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:52:59.276 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@24de63b
2020-07-11 10:52:59.346 febs [main] INFO  p6spy - 2020-07-11 10:52:59 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:53:00.411 febs [main] INFO  p6spy - 2020-07-11 10:53:00 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:53:01.269 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:53:01.496 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:53:01.497 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:53:01.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78aa1753, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d3815f7, org.springframework.security.web.header.HeaderWriterFilter@26be0d23, org.springframework.security.web.authentication.logout.LogoutFilter@e4bb10b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7526bb18, org.springframework.security.web.session.ConcurrentSessionFilter@77f04d1a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c79780, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63b0b3dd, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@507f7cd1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67292fc7, org.springframework.security.web.session.SessionManagementFilter@2560a7be, org.springframework.security.web.access.ExceptionTranslationFilter@3e89f5bc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@654c2f81]
2020-07-11 10:53:01.614 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:53:01.628 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:53:01.630 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:53:01.991 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:53:02.546 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:53:02.560 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:53:02.622 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:53:02.642 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:53:02.656 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:53:02.674 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:53:02.677 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.323 seconds (JVM running for 11.62)
2020-07-11 10:53:02.700 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:53:02.700 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:53:02.700 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:53:02.701 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:53:02.701 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:53:03.337 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:53:03.643 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:53:03.652 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:53:03.653 febs [QpidJMS Connection Executor: ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:53:03.656 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:53:03.656 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435920923"'s failed in-progress jobs.
2020-07-11 10:53:03.663 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 10:53:03.668 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594435979259 started.
2020-07-11 10:53:03.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:53:04.817 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:53:04.817 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:53:04.836 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 10:53:04 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:53:04.839 febs [RMI TCP Connection(4)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-07-11 10:53:06.190 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 10:53:06 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:53:10.034 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:53:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:53:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:53:10.095 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:53:10.097 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-07-11 10:53:10.107 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 63, '2020-07-11T10:53:10.034+0800');
2020-07-11 10:53:15.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:53:20.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:53:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:53:20.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:53:20.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:53:20.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:53:20.064 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:53:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:53:20.023+0800');
2020-07-11 10:53:26.565 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281783630280269824, content = {"lastTime":"2020-07-11 10:51:43.239","utcLastTime":"2020-07-11T02:51:43.239Z","clientIp":"122.97.175.213","utcTime":"2020-07-11T02:53:26.504Z","time":"2020-07-11 10:53:26.504","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 10:53:26.659 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 10:53:26 | 耗时 14 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 10:51:43.239', modifier = NULL, mod_date = '2020-07-11T10:53:26.642' WHERE (code = '1001');
2020-07-11 10:53:27.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:53:30.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:53:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:53:30.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:53:30.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:53:30.059 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 10:53:30.065 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:53:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T10:53:30.020+0800');
2020-07-11 10:53:33.856 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 10:53:33 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 10:53:37.188 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783675025161730, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594436017170,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436017172}}}
2020-07-11 10:53:39.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:53:40.135 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:53:40.142 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:53:40.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:40 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:53:40.184 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:53:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:53:40.186 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-07-11 10:53:40.194 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:53:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 51, '2020-07-11T10:53:40.135+0800');
2020-07-11 10:53:51.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:53:57.246 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783759183857664, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"14","productKey":"a1umzzYpOjO","gmtCreate":1594436037235,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436037237}}}
2020-07-11 10:54:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:54:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:54:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:54:00.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:54:00.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:54:00.058 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:54:00.020+0800');
2020-07-11 10:54:03.677 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:54:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:54:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:54:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:54:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 10:54:10.055 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T10:54:10.021+0800');
2020-07-11 10:54:15.676 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:54:17.411 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783843405494273, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"23","productKey":"a1umzzYpOjO","gmtCreate":1594436057314,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594436057317}}}
2020-07-11 10:54:20.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:54:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:54:20.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:54:20.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:54:20.067 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-07-11 10:54:20.073 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:54:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-07-11T10:54:20.023+0800');
2020-07-11 10:54:27.328 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783885038074880, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"26","productKey":"a1umzzYpOjO","gmtCreate":1594436067241,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436067243}}}
2020-07-11 10:54:27.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:54:30.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:54:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:54:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:54:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:54:30.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 10:54:30.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:54:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T10:54:30.007+0800');
2020-07-11 10:54:39.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:54:40.016 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:54:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:54:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:54:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:54:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:54:40.045 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:54:40.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:54:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:54:40.016+0800');
2020-07-11 10:54:47.253 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281783968919960576, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"34","productKey":"a1umzzYpOjO","gmtCreate":1594436087241,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436087242}}}
2020-07-11 10:54:51.676 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:55:00.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:55:00.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:55:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:55:00.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:55:00.073 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:55:00.076 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:55:00.045+0800');
2020-07-11 10:55:03.677 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:55:10.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:55:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:55:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:55:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:55:10.075 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:55:10.079 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:55:10.044+0800');
2020-07-11 10:55:15.676 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:55:17.141 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784094266710528, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"45","productKey":"a1umzzYpOjO","gmtCreate":1594436117124,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436117126}}}
2020-07-11 10:55:20.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:55:20.193 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:20 | 耗时 14 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:55:20.203 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:55:21.007 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:21 | 耗时 29 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:55:21.080 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：1036 毫秒
2020-07-11 10:55:21.085 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:55:21 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 1036, '2020-07-11T10:55:20.044+0800');
2020-07-11 10:55:27.677 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:55:30.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:55:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:55:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:55:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:55:30.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:55:30.045 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:55:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:55:30.012+0800');
2020-07-11 10:55:37.262 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784178677080064, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"54","productKey":"a1umzzYpOjO","gmtCreate":1594436137250,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436137251}}}
2020-07-11 10:55:39.679 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:55:40.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:55:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:55:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:55:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:55:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:55:40.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:55:40.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:55:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:55:40.017+0800');
2020-07-11 10:55:47.410 febs [JmsSession [ID:f52e3bcb-42ce-4904-bf02-97b285c84340:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784221228339712, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"58","productKey":"a1umzzYpOjO","gmtCreate":1594436147395,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436147397}}}
2020-07-11 10:55:51.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:56:00.262 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:56:00.435 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:56:00.440 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:56:00.484 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:56:00.486 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：224 毫秒
2020-07-11 10:56:00.489 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 224, '2020-07-11T10:56:00.262+0800');
2020-07-11 10:56:03.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594435979259_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:56:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:56:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:56:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:56:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:56:10.038 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:56:10.041 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:56:10.009+0800');
2020-07-11 10:56:23.991 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14492 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 10:56:23.995 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 10:56:25.496 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 10:56:25.498 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 10:56:25.568 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-07-11 10:56:26.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$71c50a0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$836993e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$ec2f106d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a0e46178] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1d7eb170' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c5b9042a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 10:56:26.685 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 10:56:26.698 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 10:56:26.707 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 10:56:26.707 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 10:56:26.714 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 10:56:26.816 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 10:56:26.816 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2738 ms
2020-07-11 10:56:27.136 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 10:56:27.144 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 10:56:27.572 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 10:56:27.572 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 10:56:27.572 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 10:56:27.572 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 10:56:28.045 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 10:56:30.045 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 10:56:30.075 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 10:56:30.086 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 10:56:30.086 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 10:56:30.089 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 10:56:30.091 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 10:56:30.092 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594436190076'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 10:56:30.092 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 10:56:30.092 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 10:56:30.093 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5a2035e1
2020-07-11 10:56:30.163 febs [main] INFO  p6spy - 2020-07-11 10:56:30 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 10:56:31.205 febs [main] INFO  p6spy - 2020-07-11 10:56:31 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 10:56:32.043 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 10:56:32.283 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 10:56:32.283 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 10:56:32.284 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 10:56:32.353 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d34866a, org.springframework.security.web.context.SecurityContextPersistenceFilter@33b2ba25, org.springframework.security.web.header.HeaderWriterFilter@6f27730b, org.springframework.security.web.authentication.logout.LogoutFilter@580154b3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@362c48c, org.springframework.security.web.session.ConcurrentSessionFilter@48751d8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@481bae3f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14293540, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3ce7a354, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26291192, org.springframework.security.web.session.SessionManagementFilter@14eb96e9, org.springframework.security.web.access.ExceptionTranslationFilter@7f94541b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15ee8861]
2020-07-11 10:56:32.401 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 10:56:32.416 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 10:56:32.417 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 10:56:32.801 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 10:56:33.403 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 10:56:33.415 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 10:56:33.470 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 10:56:33.489 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 10:56:33.502 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 10:56:33.520 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 10:56:33.523 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.318 seconds (JVM running for 11.669)
2020-07-11 10:56:33.545 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 10:56:33.545 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 10:56:33.545 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 10:56:33.545 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 10:56:33.545 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 10:56:34.146 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 10:56:34.442 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 10:56:34.443 febs [QpidJMS Connection Executor: ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 10:56:34.489 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 10:56:34.500 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 10:56:34.500 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594435979259"'s failed in-progress jobs.
2020-07-11 10:56:34.516 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594436190076 started.
2020-07-11 10:56:34.522 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:56:35.325 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 10:56:35.325 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 10:56:35.336 febs [RMI TCP Connection(2)-192.168.3.108] INFO  p6spy - 2020-07-11 10:56:35 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 10:56:35.338 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-07-11 10:56:37.209 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784429932664320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"77","productKey":"a1umzzYpOjO","gmtCreate":1594436197154,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436197155}}}
2020-07-11 10:56:37.339 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784430528281601, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"78","productKey":"a1umzzYpOjO","gmtCreate":1594436197295,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436197297}}}
2020-07-11 10:56:40.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:56:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:56:40.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:56:40.103 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:56:40.105 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：67 毫秒
2020-07-11 10:56:40.117 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 10:56:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 67, '2020-07-11T10:56:40.038+0800');
2020-07-11 10:56:43.587 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 10:56:43 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:56:46.523 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:56:50.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:56:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:56:50.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:56:50.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:56:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:56:50.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:56:50.063 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 10:56:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:56:50.021+0800');
2020-07-11 10:56:58.523 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:57:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:57:00.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:57:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:57:00.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:57:00.060 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 10:57:00.064 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 10:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T10:57:00.024+0800');
2020-07-11 10:57:10.523 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:57:17.136 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784597524475904, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"93","productKey":"a1umzzYpOjO","gmtCreate":1594436237111,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436237113}}}
2020-07-11 10:57:20.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:57:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:57:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:57:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:57:20.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 10:57:20.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 10:57:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T10:57:20.011+0800');
2020-07-11 10:57:22.523 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:57:27.314 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784640264429568, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"98","productKey":"a1umzzYpOjO","gmtCreate":1594436247300,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436247302}}}
2020-07-11 10:57:30.066 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:57:30.110 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:57:30.116 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:57:30.168 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:57:30.171 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：105 毫秒
2020-07-11 10:57:30.177 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 10:57:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 105, '2020-07-11T10:57:30.066+0800');
2020-07-11 10:57:34.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:57:37.211 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784681725123072, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"103","productKey":"a1umzzYpOjO","gmtCreate":1594436257186,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594436257188}}}
2020-07-11 10:57:37.214 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784681758682112, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"102","productKey":"a1umzzYpOjO","gmtCreate":1594436257192,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436257195}}}
2020-07-11 10:57:40.445 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:57:40.498 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:57:40.505 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:57:40.570 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:57:40.572 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：127 毫秒
2020-07-11 10:57:40.592 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 10:57:40 | 耗时 14 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 127, '2020-07-11T10:57:40.445+0800');
2020-07-11 10:57:46.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:57:47.147 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784723412408320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"105","productKey":"a1umzzYpOjO","gmtCreate":1594436267124,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436267126}}}
2020-07-11 10:57:50.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:57:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:57:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:57:50.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:57:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:57:50.070 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-07-11 10:57:50.074 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 10:57:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-07-11T10:57:50.014+0800');
2020-07-11 10:57:58.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:58:00.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:58:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:58:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:58:00.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:58:00.064 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-07-11 10:58:00.069 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 10:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-07-11T10:58:00.019+0800');
2020-07-11 10:58:00.566 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 10:58:00 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 10:58:07.133 febs [JmsSession [ID:6a2bf7eb-f4a9-47fe-9cf6-f9c6ca737b78:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281784807243866624, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"113","productKey":"a1umzzYpOjO","gmtCreate":1594436287112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436287114}}}
2020-07-11 10:58:10.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:58:20.008 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:58:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:58:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:58:20.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:58:20.036 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:58:20.040 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 10:58:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:58:20.008+0800');
2020-07-11 10:58:22.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:58:30.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:58:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:58:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:58:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:58:30.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:58:30.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 10:58:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:58:30.019+0800');
2020-07-11 10:58:34.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:58:40.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:58:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:58:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:58:40.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:58:40.059 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 10:58:40.063 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 10:58:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T10:58:40.022+0800');
2020-07-11 10:58:46.526 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:58:50.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:58:50.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:58:50.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:58:50.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:58:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:58:50.037 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 10:58:50.040 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 10:58:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T10:58:50.009+0800');
2020-07-11 10:58:58.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:59:00.024 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:59:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:59:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:59:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:59:00.053 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 10:59:00.056 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 10:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T10:59:00.024+0800');
2020-07-11 10:59:10.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:59:20.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:59:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:59:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:59:20.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:59:20.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 10:59:20.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 10:59:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T10:59:20.007+0800');
2020-07-11 10:59:22.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:59:30.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:59:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:59:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:59:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:59:30.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 10:59:30.053 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 10:59:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T10:59:30.019+0800');
2020-07-11 10:59:34.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 10:59:40.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 10:59:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 10:59:40.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 10:59:40.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 10:59:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 10:59:40.066 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 10:59:40.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 10:59:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T10:59:40.023+0800');
2020-07-11 10:59:46.650 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436190076_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:00:00.279 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18156 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:00:00.282 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:00:01.819 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:00:01.821 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:00:01.895 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-07-11 11:00:02.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$37869916] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cdf82845] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b1f09f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.706 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$66a5f07f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b325930' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8b7a9331] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:02.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:00:03.101 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:00:03.116 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:00:03.126 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:00:03.126 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:00:03.134 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:00:03.243 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:00:03.243 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2887 ms
2020-07-11 11:00:03.581 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:00:03.590 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:00:04.091 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:00:04.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:00:04.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:00:04.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:00:04.632 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:00:06.755 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:00:06.785 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:00:06.797 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:00:06.797 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:00:06.800 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:00:06.802 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:00:06.803 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594436406786'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:00:06.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:00:06.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:00:06.804 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@19e801b5
2020-07-11 11:00:06.876 febs [main] INFO  p6spy - 2020-07-11 11:00:06 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:00:07.989 febs [main] INFO  p6spy - 2020-07-11 11:00:07 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:00:08.941 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:00:09.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:00:09.194 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:00:09.194 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:00:09.265 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a1d926b, org.springframework.security.web.context.SecurityContextPersistenceFilter@59831016, org.springframework.security.web.header.HeaderWriterFilter@126f2eb8, org.springframework.security.web.authentication.logout.LogoutFilter@71eaef6a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@34cfdd84, org.springframework.security.web.session.ConcurrentSessionFilter@c79780, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63b0b3dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78e50fca, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6e1ad658, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36b761e3, org.springframework.security.web.session.SessionManagementFilter@1f1574c, org.springframework.security.web.access.ExceptionTranslationFilter@77f04d1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78aa1753]
2020-07-11 11:00:09.319 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:00:09.334 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:00:09.335 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:00:09.701 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:00:10.251 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:00:10.265 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:00:10.331 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:00:10.373 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:00:10.393 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:00:10.419 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:00:10.424 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.989 seconds (JVM running for 12.413)
2020-07-11 11:00:10.466 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:00:10.467 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:00:10.467 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:00:10.467 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:00:10.467 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:00:11.155 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:00:11.375 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:00:11.388 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:00:11.389 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594436190076"'s failed in-progress jobs.
2020-07-11 11:00:11.396 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 11:00:11.401 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594436406786 started.
2020-07-11 11:00:11.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:00:11.432 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:49f68334-63f8-4d65-a756-552ac26e0ad1:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:00:11.433 febs [QpidJMS Connection Executor: ID:49f68334-63f8-4d65-a756-552ac26e0ad1:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:00:12.127 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:00:12.127 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:00:12.142 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 11:00:12 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:00:12.143 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 11:00:19.291 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:00:19 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:00:20.050 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:00:20.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:00:20.091 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:00:20.141 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:00:20.144 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：94 毫秒
2020-07-11 11:00:20.166 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:00:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 94, '2020-07-11T11:00:20.050+0800');
2020-07-11 11:00:23.406 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:00:30.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:00:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:00:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:00:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:00:30.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:00:30.056 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:00:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:00:30.016+0800');
2020-07-11 11:00:35.407 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:00:40.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:00:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:00:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:00:40.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:00:40.059 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 11:00:40.064 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:00:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T11:00:40.020+0800');
2020-07-11 11:00:47.406 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:00:50.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:00:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:00:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:00:50.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:00:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:00:50.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:00:50.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:00:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:00:50.023+0800');
2020-07-11 11:00:59.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:01:00.046 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:01:00.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:01:00.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:01:00.105 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:01:00.107 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-07-11 11:01:00.112 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 61, '2020-07-11T11:01:00.046+0800');
2020-07-11 11:01:11.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:01:20.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:01:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:01:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:01:20.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:01:20.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:01:20.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:01:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:01:20.020+0800');
2020-07-11 11:01:23.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:01:30.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:01:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:30 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:01:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:01:30.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:01:30.057 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-07-11 11:01:30.062 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:01:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-07-11T11:01:30.012+0800');
2020-07-11 11:01:35.424 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:01:40.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:01:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:01:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:01:40.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:01:40.057 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 11:01:40.062 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:01:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T11:01:40.017+0800');
2020-07-11 11:01:47.415 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:01:50.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:01:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:01:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:01:50.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:01:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:01:50.066 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 11:01:50.069 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:01:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T11:01:50.024+0800');
2020-07-11 11:01:59.416 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:02:00.013 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:02:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:02:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:02:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:02:00.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:02:00.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:02:00.013+0800');
2020-07-11 11:02:06.283 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:02:06 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:02:11.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:02:20.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:02:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:02:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:02:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:02:20.050 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:02:20.053 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:02:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:02:20.021+0800');
2020-07-11 11:02:23.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:02:30.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:02:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:02:30.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:02:30.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:02:30.037 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:02:30.040 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:02:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:02:30.007+0800');
2020-07-11 11:02:35.416 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:02:40.017 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:02:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:02:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:02:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:02:40.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:02:40.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:02:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:02:40.017+0800');
2020-07-11 11:02:47.418 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:02:50.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:02:50.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:02:50.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:02:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:02:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:02:50.036 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:02:50.040 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:02:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:02:50.009+0800');
2020-07-11 11:02:59.419 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:03:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:03:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:03:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:03:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:03:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:03:00.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:03:00.012+0800');
2020-07-11 11:03:11.419 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:03:20.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:03:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:03:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:03:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:03:20.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:03:20.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:03:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:03:20.011+0800');
2020-07-11 11:03:23.421 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:03:30.010 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:03:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:03:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:03:30.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:03:30.036 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:03:30.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:03:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:03:30.010+0800');
2020-07-11 11:03:35.421 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:03:40.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:03:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:03:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:03:40.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:03:40.069 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:03:40.072 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:03:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:03:40.042+0800');
2020-07-11 11:03:47.420 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:03:50.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:03:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:03:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:03:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:03:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:03:50.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:03:50.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:03:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:03:50.022+0800');
2020-07-11 11:03:59.422 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:04:00.014 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:04:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:04:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:04:00.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:04:00.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:04:00.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:04:00.014+0800');
2020-07-11 11:04:11.421 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:04:20.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:04:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:04:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:04:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:04:20.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:04:20.053 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:04:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:04:20.018+0800');
2020-07-11 11:04:23.429 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:04:30.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:04:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:04:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:04:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:04:30.051 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:04:30.055 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:04:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:04:30.019+0800');
2020-07-11 11:04:35.427 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:04:40.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:04:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:04:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:04:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:04:40.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:04:40.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:04:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:04:40.020+0800');
2020-07-11 11:04:47.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:04:50.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:04:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:04:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:04:50.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:04:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:04:50.079 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-07-11 11:04:50.083 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:04:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-07-11T11:04:50.022+0800');
2020-07-11 11:04:59.443 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:05:00.144 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:05:00.385 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:00 | 耗时 14 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:05:00.415 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:00 | 耗时 26 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:05:01.156 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:01 | 耗时 20 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:05:01.172 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：1028 毫秒
2020-07-11 11:05:01.192 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:05:01 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 1028, '2020-07-11T11:05:00.144+0800');
2020-07-11 11:05:11.443 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:05:20.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:05:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:05:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:05:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:05:20.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:05:20.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:05:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:05:20.020+0800');
2020-07-11 11:05:23.444 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:05:30.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:05:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:05:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:05:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:05:30.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:05:30.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:05:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:05:30.019+0800');
2020-07-11 11:05:35.444 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:05:40.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:05:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:05:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:05:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:05:40.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:05:40.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:05:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:05:40.018+0800');
2020-07-11 11:05:47.445 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:05:50.118 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:05:50.122 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:05:50.125 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:05:50.145 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:05:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:05:50.146 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:05:50.150 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:05:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:05:50.118+0800');
2020-07-11 11:05:59.445 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:06:00.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:06:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:06:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:06:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:06:00.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:06:00.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:06:00.019+0800');
2020-07-11 11:06:11.445 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:06:20.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:06:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:06:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:06:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:06:20.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:06:20.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:06:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:06:20.018+0800');
2020-07-11 11:06:23.446 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436406786_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:06:38.176 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18292 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:06:38.179 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:06:39.812 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:06:39.814 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:06:39.890 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-07-11 11:06:40.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e7cd6d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4ee6608] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$88e6dd37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3d9c2e42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7fb8bad0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.742 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6270d0f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:40.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:06:41.131 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:06:41.145 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:06:41.154 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:06:41.154 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:06:41.161 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:06:41.269 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:06:41.269 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3019 ms
2020-07-11 11:06:41.621 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:06:41.629 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:06:42.111 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:06:42.111 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:06:42.111 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:06:42.111 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:06:42.659 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:06:44.784 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:06:44.815 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:06:44.826 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:06:44.826 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:06:44.830 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:06:44.831 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:06:44.832 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594436804817'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:06:44.832 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:06:44.832 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:06:44.833 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c47e077
2020-07-11 11:06:44.916 febs [main] INFO  p6spy - 2020-07-11 11:06:44 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:06:46.005 febs [main] INFO  p6spy - 2020-07-11 11:06:46 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:06:46.880 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:06:47.117 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:06:47.118 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:06:47.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@546c30c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@79fc4e99, org.springframework.security.web.header.HeaderWriterFilter@3f1fb139, org.springframework.security.web.authentication.logout.LogoutFilter@16c9e378, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7fc56d61, org.springframework.security.web.session.ConcurrentSessionFilter@6fe243a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c7f804c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@578d5d02, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@14d53884, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ba08a09, org.springframework.security.web.session.SessionManagementFilter@36349e29, org.springframework.security.web.access.ExceptionTranslationFilter@6a54aa7a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@189e96af]
2020-07-11 11:06:47.239 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:06:47.254 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:06:47.255 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:06:47.641 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:06:48.243 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:06:48.265 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:06:48.329 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:06:48.348 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:06:48.362 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:06:48.381 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:06:48.383 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.019 seconds (JVM running for 12.445)
2020-07-11 11:06:48.406 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:06:48.406 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:06:48.406 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:06:48.406 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:06:48.406 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:06:49.021 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:06:49.278 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:06:49.279 febs [QpidJMS Connection Executor: ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:06:49.349 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:06:49.361 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:06:49.362 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594436406786"'s failed in-progress jobs.
2020-07-11 11:06:49.368 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 11:06:49.376 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594436804817 started.
2020-07-11 11:06:49.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:06:49.766 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:06:49.767 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:06:49.781 febs [RMI TCP Connection(1)-192.168.3.108] INFO  p6spy - 2020-07-11 11:06:49 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:06:49.786 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-07-11 11:06:50.032 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:06:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:50 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:06:50.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:50 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:06:50.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:06:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:06:50.124 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：92 毫秒
2020-07-11 11:06:50.143 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:06:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 92, '2020-07-11T11:06:50.032+0800');
2020-07-11 11:07:00.802 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:00 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:00.809 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:00 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:01.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:07:05.031 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:05 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:05.038 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:05 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:05.094 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:05 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:05.101 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:05 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:07.639 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:07 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:07.646 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:07 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:07.705 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:07 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:07.711 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:07 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:08.742 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:08 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:08.746 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:08 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:09.403 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:09 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:09.409 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:09 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:09.470 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:09 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:09.474 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:09 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:07:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:07:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:07:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:07:10.058 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 11:07:10.062 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T11:07:10.021+0800');
2020-07-11 11:07:10.419 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:10.424 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:10.485 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:10.489 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:10.603 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:10.608 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:10.735 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:10.740 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:10.885 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:10.889 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.014 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.019 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.139 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.143 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.274 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.278 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.414 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.418 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.547 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.551 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.638 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.642 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.767 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.771 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:11.935 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:11.939 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.079 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.082 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.228 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.231 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.378 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.381 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.531 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.535 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.679 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.682 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:12.840 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:12.843 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.006 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.009 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.168 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.172 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.339 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.342 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.381 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:07:13.509 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.512 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.698 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.702 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:13.875 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:13.879 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:14.060 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:14.064 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:14.236 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:14.239 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:14.438 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:14.441 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:14.623 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:14.627 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:14.818 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:14.821 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:07:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:15.005 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:15.010 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:15.240 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:15.244 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:15.450 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:15.454 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:15.664 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:15.667 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:15.877 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:15.880 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:07:15 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:16.079 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:16.083 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:16.296 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:16.299 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:16.512 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:16.515 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:16.740 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:07:16.744 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:07:16 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:07:20.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:07:20.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:07:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:07:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:07:20.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:07:20.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:07:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:07:20.013+0800');
2020-07-11 11:07:25.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:07:30.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:07:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:07:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:07:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:07:30.038 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:07:30.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:07:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:07:30.008+0800');
2020-07-11 11:07:37.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:07:40.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:07:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:07:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:07:40.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:07:40.056 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:07:40.060 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:07:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:07:40.020+0800');
2020-07-11 11:07:49.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:07:50.012 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:07:50.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:07:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:07:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:07:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:07:50.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:07:50.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:07:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:07:50.012+0800');
2020-07-11 11:08:01.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:08:10.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:08:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:08:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:08:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:08:10.071 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:08:10.074 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:08:10.045+0800');
2020-07-11 11:08:13.384 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:08:20.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:08:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:08:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:08:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:08:20.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:08:20.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:08:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:08:20.016+0800');
2020-07-11 11:08:25.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:08:30.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:08:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:08:30.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:08:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:08:30.048 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:08:30.051 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:08:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:08:30.022+0800');
2020-07-11 11:08:37.384 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:08:40.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:08:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:08:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:08:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:08:40.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:08:40.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:08:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:08:40.020+0800');
2020-07-11 11:08:49.386 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:08:50.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:08:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:08:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:08:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:08:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:08:50.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:08:50.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:08:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:08:50.017+0800');
2020-07-11 11:08:57.879 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:08:57.898 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:08:57.904 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:08:57.910 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:08:57.918 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:08:57.923 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:08:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:08:59.819 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:08:59 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 11:09:01.387 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:09:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:09:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:09:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:09:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:09:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:09:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:09:10.018+0800');
2020-07-11 11:09:13.388 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:09:20.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:09:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:09:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:09:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:09:20.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:09:20.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:09:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:09:20.020+0800');
2020-07-11 11:09:22.679 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787640575909376, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"2","productKey":"a1umzzYpOjO","gmtCreate":1594436962632,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436962633}}}
2020-07-11 11:09:22.739 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787640575990272, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"3","productKey":"a1umzzYpOjO","gmtCreate":1594436962631,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594436962633}}}
2020-07-11 11:09:22.742 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787640575942656, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"1","productKey":"a1umzzYpOjO","gmtCreate":1594436962632,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594436962633}}}
2020-07-11 11:09:25.432 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:09:30.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:09:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:09:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:09:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:09:30.053 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:09:30.057 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:09:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:09:30.018+0800');
2020-07-11 11:09:33.075 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787684188284416, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"5","productKey":"a1umzzYpOjO","gmtCreate":1594436973028,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594436973030}}}
2020-07-11 11:09:33.195 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787684792344064, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594436973173,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436973174}}}
2020-07-11 11:09:37.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:09:40.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:09:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:09:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:09:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:09:40.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:09:40.053 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:09:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:09:40.019+0800');
2020-07-11 11:09:43.261 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787727033098752, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594436983244,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594436983245}}}
2020-07-11 11:09:49.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:09:49.480 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:09:49.485 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:09:49.489 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:09:49.494 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:09:49.498 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:09:49.503 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:09:49 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:09:50.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:09:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:09:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:09:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:09:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:09:50.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:09:50.054 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:09:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:09:50.018+0800');
2020-07-11 11:09:53.192 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787768686765056, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"14","productKey":"a1umzzYpOjO","gmtCreate":1594436993176,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594436993177}}}
2020-07-11 11:09:53.198 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787768711902722, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"15","productKey":"a1umzzYpOjO","gmtCreate":1594436993179,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594436993182}}}
2020-07-11 11:10:01.416 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:10:10.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:10:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:10:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:10:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:10:10.038 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:10:10.041 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:10:10.008+0800');
2020-07-11 11:10:13.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:10:13.884 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787855496322560, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"21","productKey":"a1umzzYpOjO","gmtCreate":1594437013871,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594437013874}}}
2020-07-11 11:10:13.920 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787855638953472, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"22","productKey":"a1umzzYpOjO","gmtCreate":1594437013906,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437013908}}}
2020-07-11 11:10:20.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:10:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:10:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:10:20.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:10:20.037 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:10:20.040 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:10:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:10:20.009+0800');
2020-07-11 11:10:23.265 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787894822119936, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"26","productKey":"a1umzzYpOjO","gmtCreate":1594437023248,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437023250}}}
2020-07-11 11:10:25.417 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:10:30.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:10:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:10:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:10:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:10:30.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:10:30.054 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:10:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:10:30.022+0800');
2020-07-11 11:10:33.285 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787936869933568, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"30","productKey":"a1umzzYpOjO","gmtCreate":1594437033272,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437033274}}}
2020-07-11 11:10:37.418 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:10:40.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:10:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:10:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:10:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:10:40.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:10:40.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:10:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:10:40.018+0800');
2020-07-11 11:10:43.080 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281787977936468993, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"33","productKey":"a1umzzYpOjO","gmtCreate":1594437043064,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594437043066}}}
2020-07-11 11:10:49.418 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:10:50.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:10:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:10:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:10:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:10:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:10:50.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:10:50.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:10:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:10:50.018+0800');
2020-07-11 11:10:53.319 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788020621877760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"39","productKey":"a1umzzYpOjO","gmtCreate":1594437053240,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437053242}}}
2020-07-11 11:11:01.419 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:11:03.081 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788061830911488, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"41","productKey":"a1umzzYpOjO","gmtCreate":1594437063065,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594437063067}}}
2020-07-11 11:11:03.204 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788062355166720, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"42","productKey":"a1umzzYpOjO","gmtCreate":1594437063190,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437063192}}}
2020-07-11 11:11:03.205 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788062359311872, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"43","productKey":"a1umzzYpOjO","gmtCreate":1594437063193,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437063194}}}
2020-07-11 11:11:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:11:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:11:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:11:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:11:10.020+0800');
2020-07-11 11:11:13.128 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788103979497472, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"45","productKey":"a1umzzYpOjO","gmtCreate":1594437073114,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594437073116}}}
2020-07-11 11:11:13.250 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788104457590274, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"47","productKey":"a1umzzYpOjO","gmtCreate":1594437073228,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437073231}}}
2020-07-11 11:11:13.420 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:11:20.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:11:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:11:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:11:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:11:20.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:11:20.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:11:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:11:20.018+0800');
2020-07-11 11:11:23.163 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788146052499456, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"49","productKey":"a1umzzYpOjO","gmtCreate":1594437083145,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594437083147}}}
2020-07-11 11:11:23.303 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788146606199296, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"50","productKey":"a1umzzYpOjO","gmtCreate":1594437083278,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437083280}}}
2020-07-11 11:11:25.420 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:11:30.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:11:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:11:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:11:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:11:30.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:11:30.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:11:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:11:30.019+0800');
2020-07-11 11:11:33.250 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788188377283072, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"54","productKey":"a1umzzYpOjO","gmtCreate":1594437093237,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437093239}}}
2020-07-11 11:11:37.421 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:11:40.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:11:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:40 | 耗时 6 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:11:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:11:40.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:11:40.059 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 11:11:40.063 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:11:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T11:11:40.016+0800');
2020-07-11 11:11:43.147 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788229884094976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"57","productKey":"a1umzzYpOjO","gmtCreate":1594437103133,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437103134}}}
2020-07-11 11:11:49.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:11:50.124 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:11:50.288 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:50 | 耗时 24 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:11:50.306 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:50 | 耗时 14 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:11:50.714 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:11:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:11:50.716 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：592 毫秒
2020-07-11 11:11:50.721 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:11:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 592, '2020-07-11T11:11:50.124+0800');
2020-07-11 11:11:53.312 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788272523350528, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"63","productKey":"a1umzzYpOjO","gmtCreate":1594437113299,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437113301}}}
2020-07-11 11:12:01.481 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:12:03.121 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788313669511680, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"65","productKey":"a1umzzYpOjO","gmtCreate":1594437123108,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437123110}}}
2020-07-11 11:12:03.272 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788314319648768, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"66","productKey":"a1umzzYpOjO","gmtCreate":1594437123263,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437123265}}}
2020-07-11 11:12:10.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:12:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:12:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:12:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:12:10.083 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-07-11 11:12:10.086 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-07-11T11:12:10.019+0800');
2020-07-11 11:12:10.668 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:12:10.670 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:12:13.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:12:20.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:12:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:12:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:12:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:12:20.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:12:20.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:12:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:12:20.018+0800');
2020-07-11 11:12:21.979 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:12:21 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:12:21.981 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:12:21 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:12:22.039 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:12:22.042 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:12:23.332 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788398276960256, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"75","productKey":"a1umzzYpOjO","gmtCreate":1594437143282,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437143283}}}
2020-07-11 11:12:25.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:12:30.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:12:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:12:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:12:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:12:30.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:12:30.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:12:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:12:30.020+0800');
2020-07-11 11:12:37.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:12:40.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:12:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:12:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:12:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:12:40.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:12:40.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:12:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:12:40.018+0800');
2020-07-11 11:12:43.275 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788482079122944, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"83","productKey":"a1umzzYpOjO","gmtCreate":1594437163259,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437163262}}}
2020-07-11 11:12:49.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:12:50.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:12:50.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:12:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:12:50.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:12:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:12:50.060 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:12:50.064 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:12:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:12:50.024+0800');
2020-07-11 11:12:53.165 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788523565086208, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"85","productKey":"a1umzzYpOjO","gmtCreate":1594437173152,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437173154}}}
2020-07-11 11:12:53.321 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788524198365185, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"87","productKey":"a1umzzYpOjO","gmtCreate":1594437173304,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437173305}}}
2020-07-11 11:12:53.323 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788524202612736, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"86","productKey":"a1umzzYpOjO","gmtCreate":1594437173303,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437173305}}}
2020-07-11 11:13:01.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:13:03.111 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788565285827585, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"89","productKey":"a1umzzYpOjO","gmtCreate":1594437183098,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437183100}}}
2020-07-11 11:13:03.240 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788565814251520, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"90","productKey":"a1umzzYpOjO","gmtCreate":1594437183225,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437183227}}}
2020-07-11 11:13:03.242 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788565839376384, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"91","productKey":"a1umzzYpOjO","gmtCreate":1594437183230,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437183232}}}
2020-07-11 11:13:10.283 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:13:10.319 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:13:10.326 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:10 | 耗时 3 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:13:10.367 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:13:10.368 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：85 毫秒
2020-07-11 11:13:10.373 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:13:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 85, '2020-07-11T11:13:10.283+0800');
2020-07-11 11:13:13.164 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788607442779649, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"93","productKey":"a1umzzYpOjO","gmtCreate":1594437193149,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437193152}}}
2020-07-11 11:13:13.592 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:13:20.009 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:13:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:13:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:13:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:13:20.035 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:13:20.038 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:13:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:13:20.009+0800');
2020-07-11 11:13:25.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:13:30.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:13:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:13:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:13:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:13:30.055 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:13:30.058 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:13:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:13:30.019+0800');
2020-07-11 11:13:33.151 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788691278506496, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"101","productKey":"a1umzzYpOjO","gmtCreate":1594437213137,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437213139}}}
2020-07-11 11:13:37.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:13:40.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:13:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:13:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:13:40.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:13:40.056 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:13:40.059 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:13:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:13:40.022+0800');
2020-07-11 11:13:49.594 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:13:50.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:13:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:13:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:13:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:13:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:13:50.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:13:50.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:13:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:13:50.015+0800');
2020-07-11 11:13:53.237 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788775533704704, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"110","productKey":"a1umzzYpOjO","gmtCreate":1594437233225,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437233227}}}
2020-07-11 11:14:01.595 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:14:10.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:14:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:14:10.045 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:14:10.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:14:10.021+0800');
2020-07-11 11:14:13.130 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788858941621760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"117","productKey":"a1umzzYpOjO","gmtCreate":1594437253112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437253113}}}
2020-07-11 11:14:13.244 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788859444940801, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"119","productKey":"a1umzzYpOjO","gmtCreate":1594437253231,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437253232}}}
2020-07-11 11:14:13.596 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:14:20.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:14:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:14:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:14:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:14:20.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:14:20.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:14:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:14:20.020+0800');
2020-07-11 11:14:25.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:14:30.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:14:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:14:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:14:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:14:30.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:14:30.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:14:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:14:30.017+0800');
2020-07-11 11:14:33.213 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788943179935744, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"126","productKey":"a1umzzYpOjO","gmtCreate":1594437273197,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437273198}}}
2020-07-11 11:14:33.272 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788943196732416, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"127","productKey":"a1umzzYpOjO","gmtCreate":1594437273199,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437273201}}}
2020-07-11 11:14:37.599 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:14:40.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:14:40.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:14:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:14:40.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:14:40.068 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:14:40.071 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:14:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:14:40.043+0800');
2020-07-11 11:14:43.248 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788985282319360, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"131","productKey":"a1umzzYpOjO","gmtCreate":1594437283235,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437283236}}}
2020-07-11 11:14:43.250 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281788985286654976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"130","productKey":"a1umzzYpOjO","gmtCreate":1594437283235,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437283237}}}
2020-07-11 11:14:49.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:14:50.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:14:50.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:14:50.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:14:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:14:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:14:50.035 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:14:50.038 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:14:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:14:50.010+0800');
2020-07-11 11:14:53.215 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789027078573056, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"134","productKey":"a1umzzYpOjO","gmtCreate":1594437293198,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437293200}}}
2020-07-11 11:15:01.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:15:03.138 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789068698753536, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"137","productKey":"a1umzzYpOjO","gmtCreate":1594437303121,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437303123}}}
2020-07-11 11:15:03.280 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789069193680385, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"139","productKey":"a1umzzYpOjO","gmtCreate":1594437303240,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437303241}}}
2020-07-11 11:15:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:15:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:15:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:15:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:15:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:15:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:15:10.018+0800');
2020-07-11 11:15:13.178 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789110813725696, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"141","productKey":"a1umzzYpOjO","gmtCreate":1594437313164,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437313165}}}
2020-07-11 11:15:13.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:15:20.136 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:15:20.140 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:15:20.145 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:15:20.168 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:15:20.170 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:15:20.173 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:15:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:15:20.136+0800');
2020-07-11 11:15:25.599 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:15:30.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:15:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:15:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:15:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:15:30.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:15:30.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:15:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:15:30.018+0800');
2020-07-11 11:15:33.182 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789194720836096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"149","productKey":"a1umzzYpOjO","gmtCreate":1594437333168,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437333170}}}
2020-07-11 11:15:33.320 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789195303784448, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"150","productKey":"a1umzzYpOjO","gmtCreate":1594437333307,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437333309}}}
2020-07-11 11:15:37.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:15:40.008 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:15:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:15:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:15:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:15:40.034 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:15:40.036 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:15:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:15:40.008+0800');
2020-07-11 11:15:43.124 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789236428935168, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"153","productKey":"a1umzzYpOjO","gmtCreate":1594437343112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437343114}}}
2020-07-11 11:15:49.603 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:15:50.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:15:50.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:15:50.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:15:50.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:15:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:15:50.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:15:50.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:15:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:15:50.010+0800');
2020-07-11 11:16:01.601 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:16:03.196 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789320478553600, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"161","productKey":"a1umzzYpOjO","gmtCreate":1594437363151,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":20.399999618530273,"out_power":0,"run_state":0},"time":1594437363153}}}
2020-07-11 11:16:03.304 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789321007076352, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"163","productKey":"a1umzzYpOjO","gmtCreate":1594437363276,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437363278}}}
2020-07-11 11:16:10.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:16:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:16:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:16:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:16:10.053 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:16:10.057 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:16:10.020+0800');
2020-07-11 11:16:13.286 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789362929203713, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"166","productKey":"a1umzzYpOjO","gmtCreate":1594437373272,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437373274}}}
2020-07-11 11:16:13.604 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:16:20.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:16:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:16:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:16:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:16:20.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:16:20.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:16:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:16:20.010+0800');
2020-07-11 11:16:23.307 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789404977075712, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"170","productKey":"a1umzzYpOjO","gmtCreate":1594437383296,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437383298}}}
2020-07-11 11:16:25.603 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:16:30.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:16:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:16:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:16:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:16:30.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:16:30.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:16:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:16:30.017+0800');
2020-07-11 11:16:37.604 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:16:40.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:16:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:16:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:16:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:16:40.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:16:40.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:16:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:16:40.018+0800');
2020-07-11 11:16:49.602 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:16:50.016 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:16:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:16:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:16:50.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:16:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:16:50.041 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:16:50.044 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:16:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:16:50.016+0800');
2020-07-11 11:16:53.271 febs [JmsSession [ID:64495e57-ef1e-448d-9d75-57ccc43ddcb7:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789530646836224, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"183","productKey":"a1umzzYpOjO","gmtCreate":1594437413258,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437413260}}}
2020-07-11 11:17:01.604 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594436804817_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:17:12.188 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 12380 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:17:12.191 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:17:13.623 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:17:13.626 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:17:13.698 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 11:17:14.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$86ebc235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1d5d5164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$155c893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b60b199e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@45a1d057' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dadfbc50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:17:14.805 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:17:14.818 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:17:14.828 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:17:14.828 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:17:14.834 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:17:14.934 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:17:14.934 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2681 ms
2020-07-11 11:17:15.266 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:17:15.273 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:17:15.719 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:17:15.719 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:17:15.719 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:17:15.719 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:17:16.208 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:17:18.227 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:17:18.256 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:17:18.268 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:17:18.268 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:17:18.271 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:17:18.273 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:17:18.274 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594437438257'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:17:18.274 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:17:18.274 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:17:18.275 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@15a484a9
2020-07-11 11:17:18.344 febs [main] INFO  p6spy - 2020-07-11 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:17:19.404 febs [main] INFO  p6spy - 2020-07-11 11:17:19 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:17:20.278 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:17:20.509 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:17:20.509 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:17:20.509 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:17:20.509 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:17:20.510 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:17:20.577 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5265a8dd, org.springframework.security.web.context.SecurityContextPersistenceFilter@f6cde7e, org.springframework.security.web.header.HeaderWriterFilter@1d40f597, org.springframework.security.web.authentication.logout.LogoutFilter@40277077, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@e4bb10b, org.springframework.security.web.session.ConcurrentSessionFilter@75dbe490, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@116b0b32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@32cec678, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@76c587ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5af4328e, org.springframework.security.web.session.SessionManagementFilter@2078bf0a, org.springframework.security.web.access.ExceptionTranslationFilter@7b58d678, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@66fff42f]
2020-07-11 11:17:20.625 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:17:20.639 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:17:20.641 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:17:21.008 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:17:21.555 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:17:21.570 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:17:21.630 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:17:21.650 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:17:21.663 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:17:21.682 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:17:21.685 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.226 seconds (JVM running for 11.506)
2020-07-11 11:17:21.708 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:17:21.708 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:17:21.708 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:17:21.708 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:17:21.708 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:17:22.324 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:17:22.624 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:b6086d63-6251-4374-8384-09d628a0e15d:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:17:22.625 febs [QpidJMS Connection Executor: ID:b6086d63-6251-4374-8384-09d628a0e15d:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:17:22.651 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:17:22.661 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:17:22.661 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594436804817"'s failed in-progress jobs.
2020-07-11 11:17:22.666 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 11:17:22.676 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594437438257 started.
2020-07-11 11:17:22.681 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:17:23.410 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:17:23.411 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:17:23.423 febs [RMI TCP Connection(1)-192.168.3.108] INFO  p6spy - 2020-07-11 11:17:23 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:17:23.426 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 11:17:30.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:17:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:17:30.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:17:30.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:17:30.098 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-07-11 11:17:30.111 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:17:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 62, '2020-07-11T11:17:30.036+0800');
2020-07-11 11:17:34.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:17:37.202 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:17:37 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:17:37.244 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:17:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1);
2020-07-11 11:17:37.268 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:17:37 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1) ORDER BY id ASC LIMIT 0,4;
2020-07-11 11:17:37.282 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:17:37 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:17:40.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:17:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:17:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:17:40.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:17:40.058 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:17:40.062 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:17:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:17:40.022+0800');
2020-07-11 11:17:42.670 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:17:42.677 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1);
2020-07-11 11:17:42.680 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1) ORDER BY id ASC LIMIT 0,4;
2020-07-11 11:17:42.686 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:17:42.730 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:17:42.736 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1);
2020-07-11 11:17:42.739 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1) ORDER BY id ASC LIMIT 0,4;
2020-07-11 11:17:42.743 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:17:42 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:17:43.308 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789740395533825, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"202","productKey":"a1umzzYpOjO","gmtCreate":1594437463266,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437463268}}}
2020-07-11 11:17:43.358 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789740714348545, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"203","productKey":"a1umzzYpOjO","gmtCreate":1594437463343,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437463345}}}
2020-07-11 11:17:46.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:17:48.506 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:17:48 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:17:48.512 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:17:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1);
2020-07-11 11:17:48.514 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:17:48 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE (kh_name LIKE '%付先生%' AND kh_degree = 3 AND kh_status = 1) ORDER BY id ASC LIMIT 0,4;
2020-07-11 11:17:48.519 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:17:48 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account;
2020-07-11 11:17:50.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:17:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:17:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:17:50.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:17:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:17:50.053 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 11:17:50.056 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:17:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T11:17:50.017+0800');
2020-07-11 11:17:53.332 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789782535692289, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"206","productKey":"a1umzzYpOjO","gmtCreate":1594437473314,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437473316}}}
2020-07-11 11:17:58.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:18:00.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:18:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:18:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:18:00.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:18:00.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:18:00.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:18:00.021+0800');
2020-07-11 11:18:03.265 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789824210310144, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"211","productKey":"a1umzzYpOjO","gmtCreate":1594437483249,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437483251}}}
2020-07-11 11:18:10.680 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:18:13.175 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789865771716610, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"213","productKey":"a1umzzYpOjO","gmtCreate":1594437493160,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437493161}}}
2020-07-11 11:18:13.346 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789866509866496, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"214","productKey":"a1umzzYpOjO","gmtCreate":1594437493334,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437493336}}}
2020-07-11 11:18:20.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:18:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:18:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:18:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:18:20.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:18:20.058 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:18:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:18:20.022+0800');
2020-07-11 11:18:22.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:18:23.364 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789908520074752, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"219","productKey":"a1umzzYpOjO","gmtCreate":1594437503351,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437503353}}}
2020-07-11 11:18:30.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:18:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:18:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:18:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:18:30.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:18:30.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:18:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:18:30.021+0800');
2020-07-11 11:18:33.163 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789949624152064, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"221","productKey":"a1umzzYpOjO","gmtCreate":1594437513151,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437513152}}}
2020-07-11 11:18:33.337 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789950354039296, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"223","productKey":"a1umzzYpOjO","gmtCreate":1594437513322,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437513326}}}
2020-07-11 11:18:34.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:18:40.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:18:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:18:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:18:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:18:40.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:18:40.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:18:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:18:40.019+0800');
2020-07-11 11:18:43.111 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789991273591809, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"225","productKey":"a1umzzYpOjO","gmtCreate":1594437523082,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437523083}}}
2020-07-11 11:18:43.251 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281789991932179968, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"226","productKey":"a1umzzYpOjO","gmtCreate":1594437523237,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437523239}}}
2020-07-11 11:18:46.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:18:50.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:18:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:18:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:18:50.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:18:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:18:50.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:18:50.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:18:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:18:50.020+0800');
2020-07-11 11:18:53.140 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790033405466624, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"229","productKey":"a1umzzYpOjO","gmtCreate":1594437533125,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437533126}}}
2020-07-11 11:18:58.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:19:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:19:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:19:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:19:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:19:00.054 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:19:00.057 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:19:00.024+0800');
2020-07-11 11:19:03.098 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790075176488960, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"233","productKey":"a1umzzYpOjO","gmtCreate":1594437543085,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437543087}}}
2020-07-11 11:19:10.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:19:20.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:19:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:19:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:19:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:19:20.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:19:20.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:19:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:19:20.019+0800');
2020-07-11 11:19:22.685 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:19:23.177 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790159385485824, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"241","productKey":"a1umzzYpOjO","gmtCreate":1594437563161,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437563163}}}
2020-07-11 11:19:30.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:19:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:19:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:19:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:19:30.054 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:19:30.057 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:19:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:19:30.021+0800');
2020-07-11 11:19:34.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:19:40.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:19:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:19:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:19:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:19:40.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:19:40.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:19:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:19:40.017+0800');
2020-07-11 11:19:43.308 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790243812609024, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"251","productKey":"a1umzzYpOjO","gmtCreate":1594437583291,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437583293}}}
2020-07-11 11:19:46.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:19:50.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:19:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:19:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:19:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:19:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:19:50.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:19:50.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:19:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:19:50.019+0800');
2020-07-11 11:19:53.148 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790285084664321, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"253","productKey":"a1umzzYpOjO","gmtCreate":1594437593131,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437593133}}}
2020-07-11 11:19:53.331 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790285860526598, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"254","productKey":"a1umzzYpOjO","gmtCreate":1594437593309,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437593311}}}
2020-07-11 11:19:58.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:20:00.031 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:20:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:20:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:20:00.122 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:20:00.124 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：93 毫秒
2020-07-11 11:20:00.130 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 93, '2020-07-11T11:20:00.031+0800');
2020-07-11 11:20:03.172 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790327103120896, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"257","productKey":"a1umzzYpOjO","gmtCreate":1594437603149,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437603151}}}
2020-07-11 11:20:10.688 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:20:13.209 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790369230711810, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"262","productKey":"a1umzzYpOjO","gmtCreate":1594437613193,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437613194}}}
2020-07-11 11:20:20.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:20:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:20:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:20:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:20:20.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:20:20.052 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:20:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:20:20.021+0800');
2020-07-11 11:20:22.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:20:23.346 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790411756757505, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"266","productKey":"a1umzzYpOjO","gmtCreate":1594437623331,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437623333}}}
2020-07-11 11:20:30.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:20:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:20:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:20:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:20:30.049 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:20:30.052 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:20:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:20:30.019+0800');
2020-07-11 11:20:33.102 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790452684820992, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"269","productKey":"a1umzzYpOjO","gmtCreate":1594437633090,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437633092}}}
2020-07-11 11:20:33.255 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790453322388992, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"271","productKey":"a1umzzYpOjO","gmtCreate":1594437633241,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437633243}}}
2020-07-11 11:20:34.688 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:20:40.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:20:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:20:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:20:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:20:40.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:20:40.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:20:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:20:40.020+0800');
2020-07-11 11:20:43.278 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790495357623809, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"275","productKey":"a1umzzYpOjO","gmtCreate":1594437643264,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437643266}}}
2020-07-11 11:20:46.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:20:50.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:20:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:20:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:20:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:20:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:20:50.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:20:50.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:20:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:20:50.018+0800');
2020-07-11 11:20:53.377 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790537724292096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"279","productKey":"a1umzzYpOjO","gmtCreate":1594437653364,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437653366}}}
2020-07-11 11:20:58.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:21:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:21:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:21:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:21:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:21:00.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:21:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:21:00.024+0800');
2020-07-11 11:21:03.540 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790580283870208, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"283","productKey":"a1umzzYpOjO","gmtCreate":1594437663511,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437663513}}}
2020-07-11 11:21:10.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:21:13.421 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790621782415873, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"287","productKey":"a1umzzYpOjO","gmtCreate":1594437673406,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437673407}}}
2020-07-11 11:21:13.423 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790621786576384, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"286","productKey":"a1umzzYpOjO","gmtCreate":1594437673406,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437673408}}}
2020-07-11 11:21:20.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:21:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:21:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:21:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:21:20.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:21:20.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:21:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:21:20.016+0800');
2020-07-11 11:21:22.690 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:21:23.224 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790662899076097, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"291","productKey":"a1umzzYpOjO","gmtCreate":1594437683210,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437683211}}}
2020-07-11 11:21:30.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:21:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:21:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:21:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:21:30.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:21:30.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:21:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:21:30.019+0800');
2020-07-11 11:21:33.442 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790705764885504, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"295","productKey":"a1umzzYpOjO","gmtCreate":1594437693428,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437693430}}}
2020-07-11 11:21:34.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:21:40.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:21:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:21:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:21:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:21:40.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:21:40.045 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:21:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:21:40.017+0800');
2020-07-11 11:21:43.334 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790747187863552, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"298","productKey":"a1umzzYpOjO","gmtCreate":1594437703303,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437703306}}}
2020-07-11 11:21:46.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:21:50.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:21:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:21:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:21:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:21:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:21:50.041 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:21:50.045 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:21:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:21:50.016+0800');
2020-07-11 11:21:53.447 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790789676209664, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"302","productKey":"a1umzzYpOjO","gmtCreate":1594437713434,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437713436}}}
2020-07-11 11:21:58.692 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:22:00.014 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:22:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:22:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:22:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:22:00.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 11:22:00.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T11:22:00.014+0800');
2020-07-11 11:22:10.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:22:20.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:22:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:22:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:22:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:22:20.043 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:22:20.046 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:22:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:22:20.017+0800');
2020-07-11 11:22:22.695 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:22:23.167 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790914322458112, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"313","productKey":"a1umzzYpOjO","gmtCreate":1594437743154,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437743155}}}
2020-07-11 11:22:23.351 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790915098506240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"315","productKey":"a1umzzYpOjO","gmtCreate":1594437743337,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437743339}}}
2020-07-11 11:22:30.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:22:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:22:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:22:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:22:30.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:22:30.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:22:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:22:30.019+0800');
2020-07-11 11:22:33.116 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790956055873536, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"317","productKey":"a1umzzYpOjO","gmtCreate":1594437753102,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437753103}}}
2020-07-11 11:22:34.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:22:40.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:22:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:22:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:22:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:22:40.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:22:40.045 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:22:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:22:40.018+0800');
2020-07-11 11:22:43.166 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281790998208639488, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"321","productKey":"a1umzzYpOjO","gmtCreate":1594437763152,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437763154}}}
2020-07-11 11:22:46.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:22:50.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:22:50.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:22:50.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:22:50.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:22:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:22:50.037 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:22:50.041 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:22:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:22:50.009+0800');
2020-07-11 11:22:53.215 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791040373875201, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"327","productKey":"a1umzzYpOjO","gmtCreate":1594437773205,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437773207}}}
2020-07-11 11:22:53.232 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791040394930688, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"326","productKey":"a1umzzYpOjO","gmtCreate":1594437773211,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437773213}}}
2020-07-11 11:22:58.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:23:00.025 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:23:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:23:00.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:23:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:23:00.050 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:23:00.052 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:23:00.025+0800');
2020-07-11 11:23:03.357 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791082899921408, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"330","productKey":"a1umzzYpOjO","gmtCreate":1594437783345,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437783347}}}
2020-07-11 11:23:10.698 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:23:13.093 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791123727283200, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"333","productKey":"a1umzzYpOjO","gmtCreate":1594437793079,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437793081}}}
2020-07-11 11:23:20.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:23:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:23:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:23:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:23:20.036 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:23:20.039 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:23:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:23:20.008+0800');
2020-07-11 11:23:22.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:23:23.285 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791166479864322, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"339","productKey":"a1umzzYpOjO","gmtCreate":1594437803272,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437803274}}}
2020-07-11 11:23:30.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:23:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:23:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:23:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:23:30.047 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:23:30.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:23:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:23:30.018+0800');
2020-07-11 11:23:34.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:23:40.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:23:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:23:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:23:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:23:40.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:23:40.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:23:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:23:40.017+0800');
2020-07-11 11:23:43.120 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791249686524929, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"345","productKey":"a1umzzYpOjO","gmtCreate":1594437823110,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437823112}}}
2020-07-11 11:23:43.265 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791250282058240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"347","productKey":"a1umzzYpOjO","gmtCreate":1594437823251,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437823253}}}
2020-07-11 11:23:46.700 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:23:50.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:23:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:23:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:23:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:23:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:23:50.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:23:50.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:23:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:23:50.018+0800');
2020-07-11 11:23:53.253 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791292166330880, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"351","productKey":"a1umzzYpOjO","gmtCreate":1594437833239,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437833240}}}
2020-07-11 11:23:58.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:24:00.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:24:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:24:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:24:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:24:00.053 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:24:00.056 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:24:00.023+0800');
2020-07-11 11:24:10.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:24:20.039 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:24:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:24:20.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:24:20.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:24:20.078 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-07-11 11:24:20.081 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:24:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-07-11T11:24:20.039+0800');
2020-07-11 11:24:22.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:24:23.221 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791417869729280, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"363","productKey":"a1umzzYpOjO","gmtCreate":1594437863208,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437863210}}}
2020-07-11 11:24:30.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:24:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:24:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:24:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:24:30.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:24:30.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:24:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:24:30.021+0800');
2020-07-11 11:24:33.303 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791460148252672, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"366","productKey":"a1umzzYpOjO","gmtCreate":1594437873288,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437873290}}}
2020-07-11 11:24:34.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:24:40.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:24:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:24:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:24:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:24:40.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:24:40.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:24:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:24:40.019+0800');
2020-07-11 11:24:43.203 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791501684484608, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"370","productKey":"a1umzzYpOjO","gmtCreate":1594437883191,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437883193}}}
2020-07-11 11:24:46.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:24:50.118 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:24:50.127 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:24:50.131 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:24:50.179 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:24:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:24:50.181 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-07-11 11:24:50.187 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:24:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 63, '2020-07-11T11:24:50.118+0800');
2020-07-11 11:24:53.331 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791544160163328, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"375","productKey":"a1umzzYpOjO","gmtCreate":1594437893317,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437893319}}}
2020-07-11 11:24:58.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:25:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:25:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:25:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:25:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:25:00.040 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:25:00.042 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:25:00.012+0800');
2020-07-11 11:25:03.377 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791586300286465, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"379","productKey":"a1umzzYpOjO","gmtCreate":1594437903365,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437903366}}}
2020-07-11 11:25:03.437 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791586530999296, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"378","productKey":"a1umzzYpOjO","gmtCreate":1594437903420,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437903422}}}
2020-07-11 11:25:10.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:25:13.121 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791627157038080, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"381","productKey":"a1umzzYpOjO","gmtCreate":1594437913104,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437913107}}}
2020-07-11 11:25:13.262 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791627765176832, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"382","productKey":"a1umzzYpOjO","gmtCreate":1594437913251,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437913253}}}
2020-07-11 11:25:20.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:25:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:25:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:25:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:25:20.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:25:20.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:25:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:25:20.018+0800');
2020-07-11 11:25:22.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:25:23.302 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791669867601921, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"387","productKey":"a1umzzYpOjO","gmtCreate":1594437923288,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594437923290}}}
2020-07-11 11:25:30.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:25:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:25:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:25:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:25:30.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:25:30.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:25:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:25:30.011+0800');
2020-07-11 11:25:34.706 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:25:40.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:25:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:25:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:25:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:25:40.051 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:25:40.055 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:25:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:25:40.018+0800');
2020-07-11 11:25:43.173 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791753204233729, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"393","productKey":"a1umzzYpOjO","gmtCreate":1594437943157,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.799999237060547,"out_power":0,"run_state":0},"time":1594437943159}}}
2020-07-11 11:25:43.348 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791753946654208, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"394","productKey":"a1umzzYpOjO","gmtCreate":1594437943335,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437943336}}}
2020-07-11 11:25:46.706 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:25:50.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:25:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:25:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:25:50.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:25:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:25:50.051 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:25:50.054 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:25:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:25:50.019+0800');
2020-07-11 11:25:58.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:26:00.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:26:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:26:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:26:00.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:26:00.038 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:26:00.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:26:00.011+0800');
2020-07-11 11:26:10.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:26:20.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:26:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:26:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:26:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:26:20.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:26:20.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:26:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:26:20.018+0800');
2020-07-11 11:26:22.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:26:23.543 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791922176004096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"410","productKey":"a1umzzYpOjO","gmtCreate":1594437983444,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437983445}}}
2020-07-11 11:26:30.209 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:26:30.250 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:26:30.290 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:30 | 耗时 4 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:26:30.461 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:26:30.466 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：257 毫秒
2020-07-11 11:26:30.471 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:26:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 257, '2020-07-11T11:26:30.209+0800');
2020-07-11 11:26:33.153 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791962843932673, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"413","productKey":"a1umzzYpOjO","gmtCreate":1594437993138,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":17.399999618530273,"out_power":0,"run_state":0},"time":1594437993140}}}
2020-07-11 11:26:33.356 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281791963678677504, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"414","productKey":"a1umzzYpOjO","gmtCreate":1594437993339,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594437993340}}}
2020-07-11 11:26:34.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:26:40.071 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:26:40.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:26:40.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:26:40.106 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:26:40.108 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 11:26:40.111 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:26:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T11:26:40.071+0800');
2020-07-11 11:26:43.252 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792005206480385, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"418","productKey":"a1umzzYpOjO","gmtCreate":1594438003239,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438003241}}}
2020-07-11 11:26:46.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:26:50.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:26:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:26:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:26:50.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:26:50 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:26:50.067 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-07-11 11:26:50.070 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:26:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-07-11T11:26:50.009+0800');
2020-07-11 11:26:58.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:27:00.010 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:27:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:27:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:27:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:27:00.036 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:27:00.039 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:27:00.010+0800');
2020-07-11 11:27:10.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:27:13.497 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792132059035648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"430","productKey":"a1umzzYpOjO","gmtCreate":1594438033483,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438033486}}}
2020-07-11 11:27:20.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:27:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:27:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:27:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:27:20.033 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:27:20.036 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:27:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:27:20.009+0800');
2020-07-11 11:27:22.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:27:30.276 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:27:30.290 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:27:30.293 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:27:30.316 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:27:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:27:30.317 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 11:27:30.320 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:27:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T11:27:30.276+0800');
2020-07-11 11:27:33.342 febs [JmsSession [ID:b6086d63-6251-4374-8384-09d628a0e15d:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792214930095616, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"439","productKey":"a1umzzYpOjO","gmtCreate":1594438053241,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438053243}}}
2020-07-11 11:27:34.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594437438257_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:27:49.060 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16296 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:27:49.064 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:27:50.524 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:27:50.527 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:27:50.597 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-07-11 11:27:51.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$51614562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e7d2d491] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$cbcb4bc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$80809ccb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b033eac' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a5553f7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:27:51.787 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:27:51.803 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:27:51.813 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:27:51.814 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:27:51.822 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:27:51.927 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:27:51.927 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2789 ms
2020-07-11 11:27:52.262 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:27:52.270 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:27:52.715 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:27:52.715 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:27:52.716 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:27:52.716 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:27:53.197 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:27:55.231 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:27:55.261 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:27:55.273 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:27:55.273 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:27:55.276 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:27:55.278 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:27:55.278 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594438075262'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:27:55.278 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:27:55.279 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:27:55.280 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1cb44a2f
2020-07-11 11:27:55.350 febs [main] INFO  p6spy - 2020-07-11 11:27:55 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:27:56.395 febs [main] INFO  p6spy - 2020-07-11 11:27:56 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:27:57.275 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:27:57.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:27:57.517 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:27:57.591 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@397dfbe8, org.springframework.security.web.context.SecurityContextPersistenceFilter@20960b51, org.springframework.security.web.header.HeaderWriterFilter@47e725af, org.springframework.security.web.authentication.logout.LogoutFilter@27048db3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c46dc02, org.springframework.security.web.session.ConcurrentSessionFilter@18c60d81, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a947424, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@94aeba1, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@37f71e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@783f5f71, org.springframework.security.web.session.SessionManagementFilter@535be281, org.springframework.security.web.access.ExceptionTranslationFilter@7682bf66, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@594c66c3]
2020-07-11 11:27:57.641 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:27:57.655 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:27:57.657 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:27:58.040 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:27:58.597 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:27:58.612 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:27:58.672 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:27:58.693 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:27:58.706 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:27:58.725 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:27:58.728 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.403 seconds (JVM running for 11.85)
2020-07-11 11:27:58.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:27:58.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:27:58.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:27:58.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:27:58.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:27:59.372 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:27:59.632 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:27:59.633 febs [QpidJMS Connection Executor: ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:27:59.695 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:27:59.719 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594438075262 started.
2020-07-11 11:27:59.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:28:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:28:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:28:00.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:28:00.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:28:00.124 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：85 毫秒
2020-07-11 11:28:00.138 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 85, '2020-07-11T11:28:00.039+0800');
2020-07-11 11:28:00.213 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:28:00.213 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:28:00.226 febs [RMI TCP Connection(1)-192.168.3.108] INFO  p6spy - 2020-07-11 11:28:00 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:28:00.231 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-07-11 11:28:03.350 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792340813669376, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"451","productKey":"a1umzzYpOjO","gmtCreate":1594438083254,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438083256}}}
2020-07-11 11:28:11.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:28:12.735 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:28:12 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:28:12.769 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:28:12 | 耗时 24 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:28:13.084 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792382001788928, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"453","productKey":"a1umzzYpOjO","gmtCreate":1594438093074,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438093076}}}
2020-07-11 11:28:14.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:28:14.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594437438257"'s failed in-progress jobs.
2020-07-11 11:28:14.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 11:28:20.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:28:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:28:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:28:20.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:28:20.063 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 11:28:20.067 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:28:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T11:28:20.023+0800');
2020-07-11 11:28:23.165 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792424221566976, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"457","productKey":"a1umzzYpOjO","gmtCreate":1594438103141,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438103142}}}
2020-07-11 11:28:23.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:28:30.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:28:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:28:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:28:30.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:28:30.059 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 11:28:30.064 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:28:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T11:28:30.021+0800');
2020-07-11 11:28:35.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:28:40.024 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:28:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:28:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:28:40.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:28:40.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 11:28:40.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:28:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T11:28:40.024+0800');
2020-07-11 11:28:43.112 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792507952498177, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"465","productKey":"a1umzzYpOjO","gmtCreate":1594438123103,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438123105}}}
2020-07-11 11:28:47.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:28:50.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:28:50.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:28:50.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:28:50.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:28:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:28:50.057 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:28:50.061 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:28:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:28:50.022+0800');
2020-07-11 11:28:53.312 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792550730185728, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"471","productKey":"a1umzzYpOjO","gmtCreate":1594438133303,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438133305}}}
2020-07-11 11:28:59.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438075262_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:29:00.012 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:29:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:29:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:29:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:29:00.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:29:00.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:29:00.012+0800');
2020-07-11 11:29:03.100 febs [JmsSession [ID:11f7b173-0dc7-4b24-9d0b-ba88a1f3567a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792591725293568, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"473","productKey":"a1umzzYpOjO","gmtCreate":1594438143077,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438143079}}}
2020-07-11 11:29:09.958 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 5216 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:29:09.964 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:29:12.124 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:29:12.128 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:29:12.226 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75ms. Found 0 repository interfaces.
2020-07-11 11:29:12.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:12.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c9a04b4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:12.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:12.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6011da7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$440a51aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f8bfa2b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b9ac754' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1d944567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:29:13.542 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:29:13.555 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:29:13.563 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:29:13.564 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:29:13.570 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:29:13.672 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:29:13.673 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3605 ms
2020-07-11 11:29:14.063 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:29:14.072 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:29:14.521 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:29:14.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:29:14.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:29:14.521 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:29:14.993 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:29:16.970 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:29:17.004 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:29:17.015 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:29:17.016 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:29:17.019 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:29:17.020 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:29:17.021 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594438157005'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:29:17.021 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:29:17.021 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:29:17.023 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6a04d2a4
2020-07-11 11:29:17.095 febs [main] INFO  p6spy - 2020-07-11 11:29:17 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:29:18.088 febs [main] INFO  p6spy - 2020-07-11 11:29:18 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:29:18.958 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:29:19.185 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:29:19.185 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:29:19.185 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:29:19.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:29:19.253 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e5c52fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@259aec72, org.springframework.security.web.header.HeaderWriterFilter@5aeebccc, org.springframework.security.web.authentication.logout.LogoutFilter@594c66c3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@14d53884, org.springframework.security.web.session.ConcurrentSessionFilter@495bc9e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26be0d23, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@126f2eb8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@568c9ee1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@614361fa, org.springframework.security.web.session.SessionManagementFilter@6fe243a, org.springframework.security.web.access.ExceptionTranslationFilter@7057dbda, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1382a7d8]
2020-07-11 11:29:19.300 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:29:19.314 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:29:19.316 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:29:19.697 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:29:20.282 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:29:20.294 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:29:20.349 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:29:20.367 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:29:20.380 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:29:20.398 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:29:20.401 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.464 seconds (JVM running for 12.472)
2020-07-11 11:29:20.424 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:29:20.424 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:29:20.424 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:29:20.424 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:29:20.424 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:29:20.970 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:29:21.228 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:29:21.230 febs [QpidJMS Connection Executor: ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:29:21.368 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:29:21.391 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594438157005 started.
2020-07-11 11:29:21.397 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:29:21.728 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:29:21.728 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:29:21.741 febs [RMI TCP Connection(2)-192.168.3.108] INFO  p6spy - 2020-07-11 11:29:21 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:29:21.743 febs [RMI TCP Connection(3)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-07-11 11:29:23.124 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792675645004288, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"481","productKey":"a1umzzYpOjO","gmtCreate":1594438163084,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438163086}}}
2020-07-11 11:29:30.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:29:30.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:29:30.086 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:29:30.131 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:29:30.133 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：91 毫秒
2020-07-11 11:29:30.149 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 91, '2020-07-11T11:29:30.042+0800');
2020-07-11 11:29:30.862 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:29:30.871 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:29:30 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.id = '48' LIMIT 0, 8;
2020-07-11 11:29:33.176 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792717730616833, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"485","productKey":"a1umzzYpOjO","gmtCreate":1594438173118,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":19.200000762939453,"out_power":0,"run_state":0},"time":1594438173119}}}
2020-07-11 11:29:33.396 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:29:36.394 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:29:36.394 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594438075262"'s failed in-progress jobs.
2020-07-11 11:29:40.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:29:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:29:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:29:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:29:40.053 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 11:29:40.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:29:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T11:29:40.012+0800');
2020-07-11 11:29:43.295 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792760269199872, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"490","productKey":"a1umzzYpOjO","gmtCreate":1594438183260,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438183262}}}
2020-07-11 11:29:45.397 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:29:50.048 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:29:50.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:29:50.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:29:50.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:29:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:29:50.085 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 11:29:50.091 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:29:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T11:29:50.048+0800');
2020-07-11 11:29:53.421 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792802837298177, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"494","productKey":"a1umzzYpOjO","gmtCreate":1594438193410,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438193411}}}
2020-07-11 11:29:57.397 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:30:00.026 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:30:00.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:30:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:30:00.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:30:00.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:30:00.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:30:00.026+0800');
2020-07-11 11:30:09.399 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:30:10.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:30:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:30:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:30:10.055 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:30:10.059 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:30:10.020+0800');
2020-07-11 11:30:21.399 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:30:24.063 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792931346515456, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"506","productKey":"a1umzzYpOjO","gmtCreate":1594438224049,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438224051}}}
2020-07-11 11:30:30.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:30:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:30:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:30:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:30:30.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:30:30.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:30:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:30:30.010+0800');
2020-07-11 11:30:33.318 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281792970177339392, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"510","productKey":"a1umzzYpOjO","gmtCreate":1594438233307,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438233309}}}
2020-07-11 11:30:33.399 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:30:40.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:30:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:30:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:30:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:30:40.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:30:40.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:30:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:30:40.010+0800');
2020-07-11 11:30:43.297 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793011969483264, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"514","productKey":"a1umzzYpOjO","gmtCreate":1594438243268,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438243270}}}
2020-07-11 11:30:45.400 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:30:50.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:30:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:30:50.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:30:50.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:30:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:30:50.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:30:50.058 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:30:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:30:50.023+0800');
2020-07-11 11:30:53.209 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793053581073920, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"519","productKey":"a1umzzYpOjO","gmtCreate":1594438253192,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438253194}}}
2020-07-11 11:30:57.401 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:31:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:31:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:31:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:31:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:31:00.050 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:31:00.053 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:31:00.020+0800');
2020-07-11 11:31:03.253 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793095700379649, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"523","productKey":"a1umzzYpOjO","gmtCreate":1594438263234,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438263236}}}
2020-07-11 11:31:09.401 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:31:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:31:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:31:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:31:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:31:10.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:31:10.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:31:10.007+0800');
2020-07-11 11:31:21.401 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:31:23.433 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793180349718528, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"530","productKey":"a1umzzYpOjO","gmtCreate":1594438283416,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438283418}}}
2020-07-11 11:31:30.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:31:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:31:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:31:30.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:31:30.052 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:31:30.055 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:31:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:31:30.021+0800');
2020-07-11 11:31:33.402 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:31:40.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:31:40.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:31:40.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:31:40.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:31:40.073 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:31:40.076 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:31:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:31:40.043+0800');
2020-07-11 11:31:43.308 febs [JmsSession [ID:8cf2a49f-9bca-459e-8a15-c8798df493ea:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793263745153024, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"538","productKey":"a1umzzYpOjO","gmtCreate":1594438303298,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438303300}}}
2020-07-11 11:31:45.404 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:31:50.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:31:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:31:50.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:31:50.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:31:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:31:50.056 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:31:50.059 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:31:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:31:50.021+0800');
2020-07-11 11:31:57.405 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438157005_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:32:03.532 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18756 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:32:03.536 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:32:05.027 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:32:05.029 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:32:05.107 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 0 repository interfaces.
2020-07-11 11:32:05.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5911026f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef82919e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.733 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$d37b08cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$883059d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5f9f3e58' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ad04fc8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:05.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:06.226 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:32:06.240 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:32:06.248 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:32:06.248 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:32:06.257 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:32:06.363 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:32:06.363 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2753 ms
2020-07-11 11:32:06.686 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:32:06.693 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:32:07.141 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:32:07.141 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:32:07.141 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:32:07.141 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:32:07.620 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:32:09.693 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:32:09.724 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:32:09.735 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:32:09.735 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:32:09.738 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:32:09.739 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:32:09.740 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594438329725'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:32:09.740 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:32:09.740 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:32:09.742 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3f80d8c
2020-07-11 11:32:09.818 febs [main] INFO  p6spy - 2020-07-11 11:32:09 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:32:10.919 febs [main] INFO  p6spy - 2020-07-11 11:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:32:11.776 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:32:12.006 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:32:12.007 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:32:12.007 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:32:12.007 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:32:12.007 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:32:12.007 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:32:12.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@397dfbe8, org.springframework.security.web.context.SecurityContextPersistenceFilter@20960b51, org.springframework.security.web.header.HeaderWriterFilter@47e725af, org.springframework.security.web.authentication.logout.LogoutFilter@27048db3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c46dc02, org.springframework.security.web.session.ConcurrentSessionFilter@18c60d81, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a947424, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@94aeba1, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@37f71e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@783f5f71, org.springframework.security.web.session.SessionManagementFilter@535be281, org.springframework.security.web.access.ExceptionTranslationFilter@7682bf66, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@594c66c3]
2020-07-11 11:32:12.120 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:32:12.134 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:32:12.136 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:32:12.503 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:32:13.055 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:32:13.068 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:32:13.129 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:32:13.149 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:32:13.162 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:32:13.180 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:32:13.183 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.514 seconds (JVM running for 11.488)
2020-07-11 11:32:13.206 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:32:13.206 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:32:13.206 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:32:13.206 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:32:13.206 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:32:13.829 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:32:14.103 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:04a752d9-ca8e-4497-8836-396e8e219918:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:32:14.104 febs [QpidJMS Connection Executor: ID:04a752d9-ca8e-4497-8836-396e8e219918:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:32:14.151 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:32:14.165 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:32:14.165 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594438157005"'s failed in-progress jobs.
2020-07-11 11:32:14.170 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-07-11 11:32:14.183 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594438329725 started.
2020-07-11 11:32:14.191 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438329725_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:32:14.710 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:32:14.710 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:32:14.724 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-07-11 11:32:14.724 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 11:32:14 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:32:20.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:32:20.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:32:20.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:32:20.132 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:32:20.135 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-07-11 11:32:20.151 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:32:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 89, '2020-07-11T11:32:20.046+0800');
2020-07-11 11:32:22.299 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:32:22 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:32:22.328 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:32:22 | 耗时 19 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.orgName = '初心智能' LIMIT 0, 8;
2020-07-11 11:32:23.323 febs [JmsSession [ID:04a752d9-ca8e-4497-8836-396e8e219918:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793431420753408, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"554","productKey":"a1umzzYpOjO","gmtCreate":1594438343275,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438343277}}}
2020-07-11 11:32:26.188 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438329725_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:32:30.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:32:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:32:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:32:30.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:32:30.062 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 11:32:30.066 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:32:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T11:32:30.022+0800');
2020-07-11 11:32:33.340 febs [JmsSession [ID:04a752d9-ca8e-4497-8836-396e8e219918:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793473590330880, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"559","productKey":"a1umzzYpOjO","gmtCreate":1594438353330,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438353332}}}
2020-07-11 11:32:38.186 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438329725_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:32:40.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:32:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:32:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:32:40.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:32:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:32:40.060 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 11:32:40.064 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:32:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T11:32:40.022+0800');
2020-07-11 11:32:48.481 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 3632 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 11:32:48.485 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 11:32:49.932 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 11:32:49.936 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 11:32:50.009 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-07-11 11:32:50.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b7ddf2e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.610 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.613 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e4f8215] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3247f944] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.765 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e6fd4a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@193eb1ba' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bd1ed01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:50.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 11:32:51.138 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 11:32:51.154 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 11:32:51.163 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 11:32:51.163 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 11:32:51.170 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 11:32:51.276 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 11:32:51.276 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2725 ms
2020-07-11 11:32:51.606 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 11:32:51.614 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 11:32:52.065 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 11:32:52.065 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 11:32:52.065 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 11:32:52.066 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 11:32:52.536 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 11:32:54.569 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 11:32:54.603 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 11:32:54.616 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 11:32:54.616 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 11:32:54.620 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 11:32:54.622 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 11:32:54.622 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594438374604'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 11:32:54.623 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 11:32:54.623 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 11:32:54.624 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2cc61b3b
2020-07-11 11:32:54.698 febs [main] INFO  p6spy - 2020-07-11 11:32:54 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 11:32:55.749 febs [main] INFO  p6spy - 2020-07-11 11:32:55 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 11:32:56.608 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 11:32:56.855 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 11:32:56.856 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 11:32:56.930 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c91f5bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@2a60981c, org.springframework.security.web.header.HeaderWriterFilter@618fb1, org.springframework.security.web.authentication.logout.LogoutFilter@259aec72, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2914a328, org.springframework.security.web.session.ConcurrentSessionFilter@3f33bb6f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7057dbda, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@495bc9e7, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2b540131, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44948ac6, org.springframework.security.web.session.SessionManagementFilter@471a9e8c, org.springframework.security.web.access.ExceptionTranslationFilter@14eb96e9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1983a4e4]
2020-07-11 11:32:56.978 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 11:32:56.993 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 11:32:56.994 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 11:32:57.381 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 11:32:57.956 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 11:32:57.973 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 11:32:58.036 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 11:32:58.057 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 11:32:58.071 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 11:32:58.091 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 11:32:58.115 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.411 seconds (JVM running for 11.34)
2020-07-11 11:32:58.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 11:32:58.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 11:32:58.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 11:32:58.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 11:32:58.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 11:32:58.775 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:32:59.059 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 11:32:59.065 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:35e081ed-8760-487e-872e-303219bd0e96:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 11:32:59.066 febs [QpidJMS Connection Executor: ID:35e081ed-8760-487e-872e-303219bd0e96:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:32:59.084 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594438374604 started.
2020-07-11 11:32:59.089 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:32:59.581 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 11:32:59.581 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 11:32:59.596 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 11:32:59 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 11:32:59.597 febs [RMI TCP Connection(1)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-07-11 11:33:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:33:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:33:00.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:00 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:33:00.108 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:33:00.110 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：71 毫秒
2020-07-11 11:33:00.124 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 71, '2020-07-11T11:33:00.039+0800');
2020-07-11 11:33:04.660 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:33:04 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:04.669 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:33:04 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:33:06.079 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:33:06 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:06.082 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:33:06 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:33:11.089 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:33:13.272 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793640943102464, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"574","productKey":"a1umzzYpOjO","gmtCreate":1594438393230,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438393231}}}
2020-07-11 11:33:14.076 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 11:33:14.076 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594438329725"'s failed in-progress jobs.
2020-07-11 11:33:20.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:33:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:33:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:33:20.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:33:20.071 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-07-11 11:33:20.076 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-07-11T11:33:20.023+0800');
2020-07-11 11:33:20.198 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 2 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:20.205 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:33:20.991 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:20.996 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:33:20 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:33:23.088 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:33:23.169 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281793682588305408, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"579","productKey":"a1umzzYpOjO","gmtCreate":1594438403157,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438403160}}}
2020-07-11 11:33:26.045 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:26.053 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:33:26.150 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:33:26.156 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:33:26.176 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:33:26.203 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 10 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:33:26.207 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:33:26.213 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:33:26.219 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:33:26.222 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:33:26.228 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:33:26.234 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:33:26.237 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:33:26.243 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:33:26.248 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:33:26.253 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:33:26.257 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:33:26 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:33:30.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:33:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:33:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:33:30.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:33:30.054 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:33:30.058 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:33:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:33:30.019+0800');
2020-07-11 11:33:32.237 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:33:32 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:33:32.245 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:33:32 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:33:35.089 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:33:40.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:33:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:33:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:33:40.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:33:40.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 11:33:40.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:33:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T11:33:40.020+0800');
2020-07-11 11:33:41.248 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:33:41 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:33:41.255 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:33:41 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:33:47.091 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:33:47.532 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:33:47 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:47.535 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:33:47 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:33:48.161 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:33:48 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:33:48.165 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:33:48 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:33:50.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:33:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:33:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:33:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:33:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:33:50.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 11:33:50.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:33:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T11:33:50.016+0800');
2020-07-11 11:33:59.122 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:34:00.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:34:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:34:00.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:34:00.143 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:34:00.147 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：110 毫秒
2020-07-11 11:34:00.157 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:34:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 110, '2020-07-11T11:34:00.037+0800');
2020-07-11 11:34:11.139 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:34:20.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:34:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:34:20.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:34:20.467 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:20 | 耗时 18 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:34:20.510 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：490 毫秒
2020-07-11 11:34:20.577 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:34:20 | 耗时 4 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 490, '2020-07-11T11:34:20.020+0800');
2020-07-11 11:34:23.184 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:34:30.119 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:34:30.125 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:34:30.130 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:34:30.157 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:34:30.159 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-07-11 11:34:30.164 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:34:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-07-11T11:34:30.119+0800');
2020-07-11 11:34:35.179 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:34:40.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:34:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:34:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:34:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:34:40.048 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:34:40.051 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:34:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:34:40.021+0800');
2020-07-11 11:34:47.172 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:34:50.087 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:34:50.780 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:34:50.802 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:50 | 耗时 13 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:34:51.374 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:34:51 | 耗时 32 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:34:51.420 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：1333 毫秒
2020-07-11 11:34:51.452 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:34:51 | 耗时 15 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 1333, '2020-07-11T11:34:50.087+0800');
2020-07-11 11:34:59.171 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:35:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:35:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:35:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:35:00.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:35:00.042 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:35:00.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:35:00.012+0800');
2020-07-11 11:35:11.172 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:35:20.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:35:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:35:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:35:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:35:20.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:35:20.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:35:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:35:20.019+0800');
2020-07-11 11:35:23.172 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:35:27.443 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:35:27 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:35:27.449 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:35:27 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:35:30.009 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:35:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:35:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:35:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:35:30.039 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:35:30.042 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:35:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:35:30.009+0800');
2020-07-11 11:35:35.172 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:35:39.075 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - IdleTimeoutCheck closed the transport due to the peer exceeding our requested idle-timeout.
2020-07-11 11:35:39.089 febs [QpidJMS Connection Executor: ID:35e081ed-8760-487e-872e-303219bd0e96:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:35:39.784 febs [AmqpProvider :(2):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 11:35:40.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:35:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:35:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:35:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:35:40.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:35:40.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:35:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:35:40.018+0800');
2020-07-11 11:35:40.262 febs [QpidJMS Connection Executor: ID:35e081ed-8760-487e-872e-303219bd0e96:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionRestored, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 11:35:44.692 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794276166248960, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"635","productKey":"a1umzzYpOjO","gmtCreate":1594438544678,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438544680}}}
2020-07-11 11:35:47.173 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:35:48.006 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:35:48 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:35:48.011 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:35:48 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:35:50.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:35:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:35:50.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:35:50.054 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:35:50.059 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:35:50.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:35:50.068 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-07-11 11:35:50.073 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-07-11T11:35:50.019+0800');
2020-07-11 11:35:50.599 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:35:50.602 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:35:50 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:35:59.173 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:36:00.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:36:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:36:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:36:00.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:36:00.052 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:36:00.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:36:00.023+0800');
2020-07-11 11:36:03.359 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794354478059520, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"642","productKey":"a1umzzYpOjO","gmtCreate":1594438563349,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438563351}}}
2020-07-11 11:36:11.192 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:36:13.268 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794396039460864, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"647","productKey":"a1umzzYpOjO","gmtCreate":1594438573259,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438573260}}}
2020-07-11 11:36:20.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:36:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:36:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:36:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:36:20.048 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:36:20.051 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:36:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:36:20.019+0800');
2020-07-11 11:36:23.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:36:28.915 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:36:28 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:36:28.920 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:36:28 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:36:29.952 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:36:29 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:36:29.955 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:36:29 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:36:30.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:36:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:36:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:36:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:36:30.051 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:36:30.054 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:36:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:36:30.019+0800');
2020-07-11 11:36:35.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:36:39.345 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794102622684672, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"619","productKey":"a1umzzYpOjO","gmtCreate":1594438503303,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438503305}}}
2020-07-11 11:36:40.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:36:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:36:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:36:40.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:36:40.052 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 11:36:40.056 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:36:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T11:36:40.020+0800');
2020-07-11 11:36:47.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:36:50.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:36:50.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:36:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:36:50.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:36:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:36:50.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:36:50.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:36:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:36:50.021+0800');
2020-07-11 11:36:53.332 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794564088357376, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"663","productKey":"a1umzzYpOjO","gmtCreate":1594438613324,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438613326}}}
2020-07-11 11:36:59.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:37:00.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:37:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:37:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:37:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:37:00.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:37:00.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:37:00.017+0800');
2020-07-11 11:37:05.718 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794479690651137, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"655","productKey":"a1umzzYpOjO","gmtCreate":1594438593203,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438593205}}}
2020-07-11 11:37:11.192 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:37:14.593 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:37:14.597 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:37:14.718 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:37:14.724 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:37:14.730 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:37:14.735 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:37:14.739 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:37:14.744 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:37:14.751 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:37:14.755 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:37:14.761 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:37:14.767 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:37:14.771 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:37:14.777 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:37:14.783 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:37:14.788 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:37:14.794 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:37:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:37:19.490 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:37:19.494 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:37:19.575 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:37:19.580 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:37:19.586 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:37:19.591 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:37:19.595 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:37:19.601 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:37:19.605 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:37:19.610 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:37:19.615 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:37:19.620 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:37:19.624 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:37:19.631 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:37:19.635 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:37:19.639 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:37:19.643 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:37:20.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:37:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:37:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:37:20.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:37:20.056 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-07-11 11:37:20.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:37:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-07-11T11:37:20.019+0800');
2020-07-11 11:37:23.194 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:37:30.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:37:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:37:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:37:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:37:30.048 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:37:30.051 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:37:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:37:30.019+0800');
2020-07-11 11:37:33.347 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794731898370560, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"679","productKey":"a1umzzYpOjO","gmtCreate":1594438653333,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438653335}}}
2020-07-11 11:37:35.192 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:37:40.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:37:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:37:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:37:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:37:40.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:37:40.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:37:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:37:40.019+0800');
2020-07-11 11:37:46.843 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794647995495937, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"671","productKey":"a1umzzYpOjO","gmtCreate":1594438633329,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438633331}}}
2020-07-11 11:37:47.193 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:37:50.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:37:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:37:50.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:37:50.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:37:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:37:50.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:37:50.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:37:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:37:50.020+0800');
2020-07-11 11:37:59.192 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:38:00.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:38:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:38:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:38:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:38:00.036 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:38:00.039 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:38:00.009+0800');
2020-07-11 11:38:03.351 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794857773626368, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"690","productKey":"a1umzzYpOjO","gmtCreate":1594438683345,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438683346}}}
2020-07-11 11:38:09.328 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:38:09.332 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:38:09.460 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 2 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:38:09.465 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:38:09.472 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:38:09.478 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:38:09.482 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:38:09.487 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:38:09.492 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:38:09.496 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:38:09.502 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:38:09.507 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:38:09.510 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:38:09.516 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:38:09.524 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:38:09.564 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:38:09.571 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:09 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:38:11.194 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:38:14.034 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794898705841152, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"693","productKey":"a1umzzYpOjO","gmtCreate":1594438693103,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":60,"out_power":0,"run_state":0},"time":1594438693106}}}
2020-07-11 11:38:14.103 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:38:14 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:38:16.972 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:38:16.979 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:38:16.985 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:38:16.990 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:38:16.994 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:38:16.999 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:16 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:38:20.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:38:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:38:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:38:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:38:20.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:38:20.038 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:38:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:38:20.010+0800');
2020-07-11 11:38:23.063 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:38:23 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 11:38:23.193 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:38:30.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:38:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:38:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:38:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:38:30.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:38:30.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:38:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:38:30.008+0800');
2020-07-11 11:38:33.337 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281794983531386368, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"702","productKey":"a1umzzYpOjO","gmtCreate":1594438713327,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594438713328}}}
2020-07-11 11:38:35.195 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:38:36.640 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:38:36.644 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:38:36.730 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:38:36.734 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:38:36.740 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:38:36.745 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:38:36.748 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:38:36.752 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:38:36.756 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:38:36.758 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:38:36.764 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:38:36.768 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:38:36.771 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:38:36.775 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:38:36.779 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:38:36.782 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:38:36.786 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:38:39.365 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:39 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:38:39.368 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:38:39 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:38:40.008 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:38:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:38:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:38:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:38:40.037 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:38:40.039 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:38:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:38:40.008+0800');
2020-07-11 11:38:43.295 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281795025306641920, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"707","productKey":"a1umzzYpOjO","gmtCreate":1594438723287,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594438723289}}}
2020-07-11 11:38:47.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:38:50.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:38:50.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:38:50.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:38:50.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:38:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:38:50.035 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:38:50.037 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:38:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:38:50.007+0800');
2020-07-11 11:38:55.753 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:55 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:38:55.756 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:38:55 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:38:57.850 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:38:57 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:38:57.853 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:38:57 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:38:59.195 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:39:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:39:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:39:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:39:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:39:00.052 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:39:00.055 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:39:00.023+0800');
2020-07-11 11:39:03.444 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:39:03.448 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:39:03.453 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:39:03.457 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:39:03.461 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:39:03.464 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:39:06.059 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:39:06 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 11:39:11.197 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:39:13.381 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:39:13.386 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:39:13.391 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:39:13.398 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:39:13.402 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:39:13.406 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:39:14.015 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:39:14.019 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:39:14.089 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:39:14.092 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:39:14.097 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:39:14.101 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:39:14.105 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:39:14.110 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:39:14.114 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:39:14.118 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:39:14.122 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:39:14.130 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:39:14.134 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:39:14.138 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:39:14.142 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:39:14.144 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:39:14.148 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:39:14.725 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:39:14.729 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:14 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:39:16.848 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_feed_info;
2020-07-11 11:39:16.867 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 11:39:16 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_feed_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:17.343 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_heart_info;
2020-07-11 11:39:17.345 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, power, period_id, heart_state, heart_temperature, state, creator, create_date, modifier, mod_date FROM a_equipment_heart_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:17.841 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_roller_info;
2020-07-11 11:39:17.843 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:17.850 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_energy_info;
2020-07-11 11:39:17.851 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:17 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, current_a, current_b, current_c, voltage_b, voltage_a, voltage_c, power_a, power_b, power_c, state, creator, create_date, modifier, mod_date FROM a_equipment_energy_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:18.081 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:39:18 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:39:18.087 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:39:18 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:39:20.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:39:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:39:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:39:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:39:20.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:39:20.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:39:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:39:20.018+0800');
2020-07-11 11:39:23.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:39:30.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:39:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:39:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:39:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:39:30.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:39:30.045 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:39:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:39:30.018+0800');
2020-07-11 11:39:35.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:39:40.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:39:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:39:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:39:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:39:40.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:39:40.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:39:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:39:40.018+0800');
2020-07-11 11:39:44.645 febs [JmsSession [ID:35e081ed-8760-487e-872e-303219bd0e96:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281795024631409664, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"705","productKey":"a1umzzYpOjO","gmtCreate":1594438723126,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":60,"out_power":0,"run_state":0},"time":1594438723128}}}
2020-07-11 11:39:47.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:39:50.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:39:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:39:50.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:39:50.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:39:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:39:50.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:39:50.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:39:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:39:50.020+0800');
2020-07-11 11:39:57.162 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:39:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_feed_info;
2020-07-11 11:39:57.164 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:39:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_feed_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:57.663 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:39:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_heart_info;
2020-07-11 11:39:57.664 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:39:57 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, power, period_id, heart_state, heart_temperature, state, creator, create_date, modifier, mod_date FROM a_equipment_heart_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:58.167 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_energy_info;
2020-07-11 11:39:58.169 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, current_a, current_b, current_c, voltage_b, voltage_a, voltage_c, power_a, power_b, power_c, state, creator, create_date, modifier, mod_date FROM a_equipment_energy_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:58.176 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment_roller_info;
2020-07-11 11:39:58.178 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info ORDER BY id DESC LIMIT 0,15;
2020-07-11 11:39:58.758 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 5 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info;
2020-07-11 11:39:58.971 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:39:58.978 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 11:39:58 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:39:59.197 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:40:00.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:40:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:40:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:40:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:40:00.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:40:00.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:40:00.019+0800');
2020-07-11 11:40:11.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:40:20.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:40:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:40:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:40:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:40:20.042 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:40:20.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:40:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:40:20.018+0800');
2020-07-11 11:40:23.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:40:30.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:40:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:40:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:40:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:40:30.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:40:30.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:40:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:40:30.017+0800');
2020-07-11 11:40:35.199 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:40:40.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:40:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:40:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:40:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:40:40.040 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:40:40.042 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:40:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:40:40.017+0800');
2020-07-11 11:40:47.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:40:50.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:40:50.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:40:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:40:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:40:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:40:50.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:40:50.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:40:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:40:50.018+0800');
2020-07-11 11:40:59.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:41:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:41:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:41:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:41:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:41:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:41:00.047 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:41:00.019+0800');
2020-07-11 11:41:11.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:41:20.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:41:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:41:20.026 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:41:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:41:20.030 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:41:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:41:20.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 11:41:20.055 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T11:41:20.018+0800');
2020-07-11 11:41:20.122 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:41:20.126 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:41:20.132 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:41:20.137 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:41:20.141 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:41:20.145 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:41:20.148 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:41:20.152 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:41:20.156 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:41:20.160 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:41:20.163 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:41:20.170 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:41:20.174 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:41:20.177 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:41:20.182 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:41:20.723 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:41:20.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:41:20.731 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:41:20.736 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:41:20.741 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:41:20.745 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:41:22.279 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:41:22 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:41:22.285 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:41:22 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:41:23.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:41:30.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:41:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:41:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:41:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:41:30.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:41:30.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 11:41:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:41:30.018+0800');
2020-07-11 11:41:35.201 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:41:40.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:41:40.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:41:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:41:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:41:40.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 11:41:40.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 11:41:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T11:41:40.016+0800');
2020-07-11 11:41:47.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:41:50.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:41:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:41:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:41:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:41:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:41:50.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:41:50.044 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 11:41:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:41:50.016+0800');
2020-07-11 11:41:59.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:42:00.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:42:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:42:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:42:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:42:00.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:42:00.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 11:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:42:00.021+0800');
2020-07-11 11:42:11.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:42:20.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:42:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:42:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:42:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:42:20.048 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:42:20.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 11:42:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:42:20.019+0800');
2020-07-11 11:42:23.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:42:30.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:42:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:42:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:42:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:42:30.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:42:30.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 11:42:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:42:30.018+0800');
2020-07-11 11:42:35.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:42:40.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:42:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:42:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:42:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:42:40.047 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 11:42:40.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 11:42:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T11:42:40.018+0800');
2020-07-11 11:42:47.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:42:47.954 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:42:47 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:42:47.959 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:42:47 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:42:50.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:42:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:42:50.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:42:50.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:42:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:42:50.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 11:42:50.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 11:42:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T11:42:50.019+0800');
2020-07-11 11:42:53.598 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:42:53.602 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 11:42:53.690 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 11:42:53.695 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 11:42:53.699 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:42:53.703 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 11:42:53.707 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 11:42:53.712 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:42:53.715 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 11:42:53.719 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 11:42:53.723 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:42:53.726 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 11:42:53.729 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 11:42:53.733 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:42:53.737 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 11:42:53.739 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 11:42:53.743 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:42:56.093 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 11:42:56.098 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 11:42:56.102 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 11:42:56.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 11:42:56.111 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 11:42:56.115 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 11:42:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 11:42:57.290 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-07-11 11:42:57 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 11:42:59.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:43:00.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:43:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:43:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:43:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:43:00.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:43:00.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 11:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:43:00.017+0800');
2020-07-11 11:43:02.636 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:43:02 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:43:02.639 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 11:43:02 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:43:03.649 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:43:03 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:43:03.651 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 11:43:03 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:43:11.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:43:20.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:43:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:43:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:43:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:43:20.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:43:20.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 11:43:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:43:20.019+0800');
2020-07-11 11:43:23.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:43:30.017 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:43:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:43:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:43:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:43:30.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:43:30.045 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 11:43:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:43:30.017+0800');
2020-07-11 11:43:35.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:43:40.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:43:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:43:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:43:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:43:40.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:43:40.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 11:43:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:43:40.020+0800');
2020-07-11 11:43:47.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:43:48.127 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:43:48 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:43:48.130 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 11:43:48 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 11:43:48.449 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:43:48 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 11:43:48.452 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 11:43:48 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 11:43:50.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:43:50.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:43:50.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:43:50.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:43:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:43:50.041 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:43:50.043 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 11:43:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:43:50.018+0800');
2020-07-11 11:43:59.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:44:00.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:44:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:44:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:44:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:44:00.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 11:44:00.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 11:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T11:44:00.019+0800');
2020-07-11 11:44:11.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:44:20.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:44:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:44:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:44:20.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:44:20.050 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 11:44:20.052 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 11:44:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T11:44:20.020+0800');
2020-07-11 11:44:23.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:44:30.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:44:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:44:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:44:30.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:44:30.040 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 11:44:30.042 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 11:44:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T11:44:30.018+0800');
2020-07-11 11:44:35.210 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:44:40.008 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:44:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:44:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:44:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:44:40.033 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 11:44:40.035 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 11:44:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T11:44:40.008+0800');
2020-07-11 11:44:47.210 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:44:50.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:44:50.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:44:50.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:50 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:44:50.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:44:50 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:44:50.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 11:44:50.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 11:44:50 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T11:44:50.017+0800');
2020-07-11 11:44:59.211 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594438374604_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 11:45:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 11:45:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:45:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 11:45:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:45:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 11:45:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 11:45:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 11:45:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 11:45:00.047 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 11:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T11:45:00.018+0800');
2020-07-11 14:36:14.115 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9504 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 14:36:14.118 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 14:36:15.794 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 14:36:15.798 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 14:36:15.887 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69ms. Found 0 repository interfaces.
2020-07-11 14:36:16.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2c8b8bf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.613 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2fd1b25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a6f59254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5baae35f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49edcb30' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$807f8611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:16.845 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 14:36:17.302 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 14:36:17.319 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 14:36:17.329 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 14:36:17.329 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 14:36:17.336 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 14:36:17.743 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 14:36:17.743 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3563 ms
2020-07-11 14:36:18.064 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 14:36:18.071 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 14:36:18.582 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 14:36:18.582 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 14:36:18.582 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 14:36:18.582 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 14:36:19.057 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 14:36:21.116 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 14:36:21.147 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 14:36:21.159 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 14:36:21.159 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 14:36:21.162 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 14:36:21.164 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 14:36:21.165 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594449381148'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 14:36:21.165 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 14:36:21.165 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 14:36:21.166 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@57b130f6
2020-07-11 14:36:21.243 febs [main] INFO  p6spy - 2020-07-11 14:36:21 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 14:36:22.336 febs [main] INFO  p6spy - 2020-07-11 14:36:22 | 耗时 2 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 14:36:24.009 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 14:36:24.378 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 14:36:24.379 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 14:36:24.380 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 14:36:24.380 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 14:36:24.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d34866a, org.springframework.security.web.context.SecurityContextPersistenceFilter@33b2ba25, org.springframework.security.web.header.HeaderWriterFilter@6f27730b, org.springframework.security.web.authentication.logout.LogoutFilter@580154b3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@362c48c, org.springframework.security.web.session.ConcurrentSessionFilter@48751d8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@481bae3f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14293540, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3ce7a354, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26291192, org.springframework.security.web.session.SessionManagementFilter@14eb96e9, org.springframework.security.web.access.ExceptionTranslationFilter@7f94541b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15ee8861]
2020-07-11 14:36:24.539 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 14:36:24.556 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 14:36:24.558 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 14:36:24.996 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 14:36:25.586 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 14:36:25.600 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 14:36:25.658 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 14:36:25.677 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 14:36:25.691 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 14:36:25.709 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 14:36:25.712 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.165 seconds (JVM running for 13.902)
2020-07-11 14:36:25.734 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 14:36:25.734 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 14:36:25.734 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 14:36:25.734 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 14:36:25.734 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.3.108:8099/login
2020-07-11 14:36:26.679 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 14:36:26.691 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 14:36:26.691 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594438374604"'s failed in-progress jobs.
2020-07-11 14:36:26.707 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594449381148 started.
2020-07-11 14:36:26.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:36:27.171 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 14:36:28.253 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 14:36:28.254 febs [QpidJMS Connection Executor: ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 14:36:30.031 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:36:30.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:36:30.060 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 14:36:30.060 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 14:36:30.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:36:30.075 febs [RMI TCP Connection(3)-192.168.3.108] INFO  p6spy - 2020-07-11 14:36:30 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 14:36:30.079 febs [RMI TCP Connection(2)-192.168.3.108] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-07-11 14:36:30.112 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:36:30.115 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：84 毫秒
2020-07-11 14:36:30.130 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:36:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 84, '2020-07-11T14:36:30.031+0800');
2020-07-11 14:36:38.560 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281839798935575040, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"638","productKey":"a1umzzYpOjO","gmtCreate":1594449398153,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594449398155}}}
2020-07-11 14:36:38.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:36:40.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:36:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:36:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:36:40.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:36:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:36:40.055 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 14:36:40.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:36:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T14:36:40.012+0800');
2020-07-11 14:36:48.488 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281839840681587200, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"641","productKey":"a1umzzYpOjO","gmtCreate":1594449408105,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449408107}}}
2020-07-11 14:36:50.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:37:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:37:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:37:00.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:37:00.055 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 14:37:00.060 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T14:37:00.022+0800');
2020-07-11 14:37:02.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:37:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:37:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:37:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:37:10.084 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 14:37:10.088 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T14:37:10.046+0800');
2020-07-11 14:37:14.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:18.422 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281839966514903041, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"653","productKey":"a1umzzYpOjO","gmtCreate":1594449438107,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449438109}}}
2020-07-11 14:37:18.683 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281839966976206336, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"655","productKey":"a1umzzYpOjO","gmtCreate":1594449438216,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449438218}}}
2020-07-11 14:37:20.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:37:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:37:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:37:20.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:37:20.053 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 14:37:20.056 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:37:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T14:37:20.021+0800');
2020-07-11 14:37:26.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:30.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:37:30.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:37:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:37:30.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:37:30.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 14:37:30.060 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:37:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T14:37:30.022+0800');
2020-07-11 14:37:38.552 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840050828792320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"663","productKey":"a1umzzYpOjO","gmtCreate":1594449458208,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449458210}}}
2020-07-11 14:37:38.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:40.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:37:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:37:40.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:37:40.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:37:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:37:40.051 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 14:37:40.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:37:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T14:37:40.021+0800');
2020-07-11 14:37:48.506 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840092453076480, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"667","productKey":"a1umzzYpOjO","gmtCreate":1594449468133,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449468135}}}
2020-07-11 14:37:50.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:37:58.405 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840134198960640, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"669","productKey":"a1umzzYpOjO","gmtCreate":1594449478086,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449478088}}}
2020-07-11 14:38:00.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:38:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:38:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:38:00.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:38:00.059 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 14:38:00.063 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T14:38:00.023+0800');
2020-07-11 14:38:02.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:38:08.633 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840176251074049, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"673","productKey":"a1umzzYpOjO","gmtCreate":1594449488112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449488113}}}
2020-07-11 14:38:08.635 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840176766950912, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"675","productKey":"a1umzzYpOjO","gmtCreate":1594449488234,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449488236}}}
2020-07-11 14:38:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:38:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:38:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:38:10.057 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-07-11 14:38:10.060 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-07-11T14:38:10.021+0800');
2020-07-11 14:38:14.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:38:20.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:38:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:38:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:38:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:38:20.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:38:20.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:38:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:38:20.020+0800');
2020-07-11 14:38:26.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:38:30.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:38:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:38:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:38:30.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:38:30.071 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:38:30.074 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:38:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:38:30.043+0800');
2020-07-11 14:38:38.475 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840301820134913, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"685","productKey":"a1umzzYpOjO","gmtCreate":1594449518049,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449518052}}}
2020-07-11 14:38:38.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:38:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:38:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:38:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:38:40.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:38:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:38:40.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 14:38:40.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:38:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T14:38:40.018+0800');
2020-07-11 14:38:48.606 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840344400698880, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"691","productKey":"a1umzzYpOjO","gmtCreate":1594449528201,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449528203}}}
2020-07-11 14:38:50.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:38:59.525 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840385681049088, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"693","productKey":"a1umzzYpOjO","gmtCreate":1594449538044,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449538045}}}
2020-07-11 14:39:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:39:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:39:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:39:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:39:00.047 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:39:00.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:39:00.021+0800');
2020-07-11 14:39:02.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:39:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:39:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:39:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:39:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:39:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 14:39:10.053 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T14:39:10.020+0800');
2020-07-11 14:39:14.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:39:18.327 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840469483174912, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"701","productKey":"a1umzzYpOjO","gmtCreate":1594449558024,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449558026}}}
2020-07-11 14:39:20.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:39:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:39:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:39:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:39:20.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:39:20.052 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:39:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:39:20.021+0800');
2020-07-11 14:39:26.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:39:30.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:39:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:39:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:39:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:39:30.053 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 14:39:30.057 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:39:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T14:39:30.021+0800');
2020-07-11 14:39:38.530 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840554149454336, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"711","productKey":"a1umzzYpOjO","gmtCreate":1594449578210,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449578212}}}
2020-07-11 14:39:38.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:39:40.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:39:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:39:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:39:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:39:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:39:40.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:39:40.049 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:39:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:39:40.021+0800');
2020-07-11 14:39:50.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:39:58.450 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840637582469633, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"717","productKey":"a1umzzYpOjO","gmtCreate":1594449598102,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449598103}}}
2020-07-11 14:40:00.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:40:00.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:40:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:40:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:40:00.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:40:00.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 14:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:40:00.017+0800');
2020-07-11 14:40:02.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:40:10.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:40:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:40:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:40:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:40:10.075 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 14:40:10.078 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 14:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T14:40:10.045+0800');
2020-07-11 14:40:14.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:40:20.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:40:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:40:20.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:40:20.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:40:20.070 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:40:20.072 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 14:40:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:40:20.044+0800');
2020-07-11 14:40:26.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:40:30.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:40:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:40:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:40:30.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:40:30.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 14:40:30.043 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:40:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T14:40:30.010+0800');
2020-07-11 14:40:38.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:40:40.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:40:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:40:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:40:40.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:40:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:40:40.039 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:40:40.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:40:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:40:40.011+0800');
2020-07-11 14:40:48.695 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840847717193216, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"739","productKey":"a1umzzYpOjO","gmtCreate":1594449648201,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449648203}}}
2020-07-11 14:40:50.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:40:58.365 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840889047863296, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"741","productKey":"a1umzzYpOjO","gmtCreate":1594449658056,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449658058}}}
2020-07-11 14:40:58.663 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840889505032705, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"743","productKey":"a1umzzYpOjO","gmtCreate":1594449658165,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449658167}}}
2020-07-11 14:41:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:41:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:41:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:41:00.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:41:00.039 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:41:00.041 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:41:00.011+0800');
2020-07-11 14:41:02.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:41:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:41:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:41:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:41:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:41:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:41:10.042 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:41:10.011+0800');
2020-07-11 14:41:14.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:41:18.577 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281840972866822658, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"749","productKey":"a1umzzYpOjO","gmtCreate":1594449678040,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449678042}}}
2020-07-11 14:41:20.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:41:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:41:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:41:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:41:20.046 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:41:20.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:41:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:41:20.020+0800');
2020-07-11 14:41:26.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:41:30.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:41:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:41:30.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:41:30.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:41:30.072 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 14:41:30.075 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:41:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T14:41:30.040+0800');
2020-07-11 14:41:38.401 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841057033937408, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"757","productKey":"a1umzzYpOjO","gmtCreate":1594449698106,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449698107}}}
2020-07-11 14:41:38.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:41:40.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:41:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:41:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:41:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:41:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:41:40.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:41:40.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:41:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:41:40.017+0800');
2020-07-11 14:41:50.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:41:58.687 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841141381386240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"767","productKey":"a1umzzYpOjO","gmtCreate":1594449718217,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449718218}}}
2020-07-11 14:42:00.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:42:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:42:00.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:42:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:42:00.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:42:00.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:42:00.021+0800');
2020-07-11 14:42:02.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:42:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:42:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:42:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:42:10.048 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:42:10.050 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:42:10.021+0800');
2020-07-11 14:42:14.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:42:20.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:42:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:42:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:42:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:42:20.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:42:20.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:42:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:42:20.020+0800');
2020-07-11 14:42:26.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:42:30.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:42:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:42:30.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:42:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:42:30.053 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 14:42:30.056 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:42:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T14:42:30.021+0800');
2020-07-11 14:42:38.540 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841308918674432, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"783","productKey":"a1umzzYpOjO","gmtCreate":1594449758161,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449758163}}}
2020-07-11 14:42:38.723 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:42:40.012 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:42:40.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:42:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:42:40.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:42:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:42:40.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:42:40.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:42:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:42:40.012+0800');
2020-07-11 14:42:50.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:42:58.492 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841392372719104, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"789","productKey":"a1umzzYpOjO","gmtCreate":1594449778057,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449778058}}}
2020-07-11 14:43:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:43:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:43:00.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:43:00.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:43:00.069 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:43:00.072 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:43:00.046+0800');
2020-07-11 14:43:02.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:43:08.557 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841434974187008, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"795","productKey":"a1umzzYpOjO","gmtCreate":1594449788214,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449788216}}}
2020-07-11 14:43:10.012 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:43:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:43:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:43:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:43:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 14:43:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T14:43:10.011+0800');
2020-07-11 14:43:14.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:43:20.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:43:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:43:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:43:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:43:20.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:43:20.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:43:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:43:20.019+0800');
2020-07-11 14:43:26.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:43:30.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:43:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:43:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:43:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:43:30.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:43:30.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:43:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:43:30.017+0800');
2020-07-11 14:43:38.477 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841560362983936, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"805","productKey":"a1umzzYpOjO","gmtCreate":1594449818109,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449818111}}}
2020-07-11 14:43:38.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:43:40.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:43:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:43:40.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:43:40.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:43:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:43:40.045 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:43:40.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:43:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:43:40.019+0800');
2020-07-11 14:43:48.342 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841602029209601, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"809","productKey":"a1umzzYpOjO","gmtCreate":1594449828044,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":57.599998474121094,"out_power":0,"run_state":0},"time":1594449828045}}}
2020-07-11 14:43:48.500 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841602511467520, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"811","productKey":"a1umzzYpOjO","gmtCreate":1594449828160,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449828161}}}
2020-07-11 14:43:50.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:43:58.595 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841644794243584, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"815","productKey":"a1umzzYpOjO","gmtCreate":1594449838240,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449838242}}}
2020-07-11 14:44:00.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:44:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:44:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:44:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:44:00.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:44:00.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 14:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:44:00.019+0800');
2020-07-11 14:44:02.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:44:10.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:44:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:44:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:44:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:44:10.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-07-11 14:44:10.050 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 14:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-07-11T14:44:10.011+0800');
2020-07-11 14:44:14.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:44:20.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:44:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:44:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:44:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:44:20.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:44:20.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 14:44:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:44:20.017+0800');
2020-07-11 14:44:22.530 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:22 | 耗时 1 ms | SQL 语句：
SELECT a.* FROM a_account a WHERE a.kh_account = 'fxp' AND a.kh_pwd = '123456';
2020-07-11 14:44:22.535 febs [http-nio-8099-exec-4] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1949B640F73B8A0985CDDA1153BC5C58
2020-07-11 14:44:22.718 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 14:44:22 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:44:22.732 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 14:44:22 | 耗时 3 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:44:26.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:44:26.947 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 14:44:26 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:26.951 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 14:44:26 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:44:27.056 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:44:27.062 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:44:27.079 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:27.094 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:44:27.096 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:44:27.099 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:27.102 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:44:27.104 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:44:27.107 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:27.110 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:44:27.113 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:44:27.115 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:27.118 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:44:27.121 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:44:27.125 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:27 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:30.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:44:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:44:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:44:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:44:30.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:44:30.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:44:30.019+0800');
2020-07-11 14:44:30.514 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:44:30.520 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:30.525 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:30.529 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:30.532 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:30.537 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:31.853 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:31.856 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:44:31.945 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:44:31.950 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:44:31.955 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:31.960 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:44:31.963 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:44:31.969 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:31.972 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:44:31.975 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:44:31.979 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:31.983 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:44:31.985 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:44:31.988 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:31.990 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:44:31.993 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:44:31.996 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:31 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:32.921 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:44:32.925 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:32.930 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:32.934 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:32.939 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:32.943 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:34.658 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:34.661 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:44:34.746 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:44:34.752 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:44:34.757 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:34.762 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:44:34.766 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:44:34.771 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:34.775 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:44:34.778 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:44:34.781 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:34.784 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:44:34.787 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:44:34.791 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:34.794 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:44:34.796 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:44:34.799 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:34 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:35.542 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:44:35.547 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:35.551 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:35.556 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:35.560 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:35.566 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:38.160 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 3 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info;
2020-07-11 14:44:38.419 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:38.423 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:44:38.510 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:44:38.514 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:44:38.518 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:38.523 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:44:38.525 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:44:38.529 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:38.533 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:44:38.537 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:44:38.542 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:38.546 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:44:38.552 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:44:38.556 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:38.560 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:44:38.562 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:44:38.566 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:38 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:38.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:44:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:44:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:44:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:44:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:44:40.038 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 14:44:40.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T14:44:40.009+0800');
2020-07-11 14:44:40.124 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:44:40.129 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:40.134 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:40.140 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:40.144 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:40.148 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:40 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:41.962 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:41 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:41.966 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:41 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 14:44:43.012 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:43 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:44:43.015 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:43 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 8, 16;
2020-07-11 14:44:45.810 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:44:45.814 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:44:45.818 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:44:45.822 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:44:45.827 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:44:45.830 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:44:45 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:44:47.012 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:44:47 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 8, 16;
2020-07-11 14:44:49.455 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-07-11 14:44:49 | 耗时 3 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_roller_info;
2020-07-11 14:44:49.960 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:44:49 | 耗时 6 ms | SQL 语句：
SELECT id, sb_code, power, period_id, heart_state, heart_temperature, state, creator, create_date, modifier, mod_date FROM a_equipment_heart_info;
2020-07-11 14:44:50.457 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-07-11 14:44:50 | 耗时 3 ms | SQL 语句：
SELECT id, sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date FROM a_equipment_feed_info;
2020-07-11 14:44:50.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:44:55.851 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841884138100736, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"2","productKey":"a1umzzYpOjO","gmtCreate":1594449895304,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594449895306}}}
2020-07-11 14:44:55.853 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841884146395648, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"1","productKey":"a1umzzYpOjO","gmtCreate":1594449895306,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594449895307}}}
2020-07-11 14:44:55.855 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841884154884608, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"3","productKey":"a1umzzYpOjO","gmtCreate":1594449895307,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449895308}}}
2020-07-11 14:45:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:45:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:45:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:45:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:45:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:45:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:45:00.020+0800');
2020-07-11 14:45:01.598 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 1 ms | SQL 语句：
SELECT ae.* FROM a_account_equipment ae WHERE ae.kh_id = '48' LIMIT 0, 8;
2020-07-11 14:45:01.601 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:45:01.605 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:45:01.609 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:45:01.614 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:45:01.617 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-07-11 14:45:01 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:45:02.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:45:04.890 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:45:04 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:45:04.893 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-07-11 14:45:04 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 14:45:06.831 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:06 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:45:06.833 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:06 | 耗时 0 ms | SQL 语句：
SELECT ae.* FROM a_account ae WHERE ae.org_name = '初心智能' LIMIT 0, 8;
2020-07-11 14:45:08.963 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:45:08 | 耗时 1 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:45:08.967 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:45:08 | 耗时 1 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:45:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:45:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:45:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:45:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:45:10.032 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:45:10.035 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:45:10.008+0800');
2020-07-11 14:45:10.281 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:45:10.285 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:45:10.370 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:45:10.375 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:45:10.380 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:45:10.383 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:45:10.387 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:45:10.392 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:45:10.396 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:45:10.399 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:45:10.402 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:45:10.406 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:45:10.408 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:45:10.411 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:45:10.414 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:45:10.416 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:45:10.419 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-07-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:45:14.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:45:16.601 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281841971849336321, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"9","productKey":"a1umzzYpOjO","gmtCreate":1594449916215,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":50,"out_power":0,"run_state":0},"time":1594449916218}}}
2020-07-11 14:45:20.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:45:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:45:20.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:45:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:45:20.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:45:20.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:45:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:45:20.021+0800');
2020-07-11 14:45:26.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:45:30.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:45:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:45:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:30 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:45:30.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:45:30.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 14:45:30.053 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:45:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T14:45:30.019+0800');
2020-07-11 14:45:38.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:45:40.007 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:45:40.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:45:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:45:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:45:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:45:40.030 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:45:40.032 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:45:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:45:40.007+0800');
2020-07-11 14:45:46.767 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842097854655488, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"23","productKey":"a1umzzYpOjO","gmtCreate":1594449946257,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594449946259}}}
2020-07-11 14:45:50.728 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:45:56.518 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842139369793024, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"25","productKey":"a1umzzYpOjO","gmtCreate":1594449956157,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594449956158}}}
2020-07-11 14:46:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:46:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:46:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:46:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:46:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:46:00.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:46:00.020+0800');
2020-07-11 14:46:02.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:46:06.396 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842181094728192, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"29","productKey":"a1umzzYpOjO","gmtCreate":1594449966102,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594449966105}}}
2020-07-11 14:46:10.008 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:46:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:46:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:46:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:46:10.033 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:46:10.035 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:46:10.008+0800');
2020-07-11 14:46:14.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:46:20.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:46:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:46:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:46:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:46:20.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:46:20.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:46:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:46:20.019+0800');
2020-07-11 14:46:26.728 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:46:30.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:46:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:46:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:46:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:46:30.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:46:30.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:46:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:46:30.019+0800');
2020-07-11 14:46:38.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:46:40.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:46:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:46:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:46:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:46:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:46:40.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:46:40.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:46:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:46:40.019+0800');
2020-07-11 14:46:44.645 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281842341162009600, content = {"lastTime":"2020-07-11 14:46:16.232","utcLastTime":"2020-07-11T06:46:16.232Z","clientIp":"122.97.175.56","utcTime":"2020-07-11T06:46:44.269Z","time":"2020-07-11 14:46:44.269","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 14:46:44.669 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 14:46:44 | 耗时 14 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 14:46:16.232', modifier = NULL, mod_date = '2020-07-11T14:46:44.653' WHERE (code = '1001');
2020-07-11 14:46:44.708 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281842341203901441, content = {"lastTime":"2020-07-11 14:46:44.143","utcLastTime":"2020-07-11T06:46:44.143Z","clientIp":"122.97.175.56","utcTime":"2020-07-11T06:46:44.279Z","time":"2020-07-11 14:46:44.279","productKey":"a1umzzYpOjO","deviceName":"1001","status":"online"}
2020-07-11 14:46:44.712 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 14:46:44 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 2, create_date = '2020-07-11T14:46:44.708', modifier = NULL, mod_date = '2020-07-11T14:46:44.710' WHERE (code = '1001');
2020-07-11 14:46:44.982 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842342328010753, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"2","productKey":"a1umzzYpOjO","gmtCreate":1594450004544,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594450004546}}}
2020-07-11 14:46:50.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:46:55.499 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842386607315456, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"5","productKey":"a1umzzYpOjO","gmtCreate":1594450015101,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450015104}}}
2020-07-11 14:46:55.610 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842387026665472, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594450015201,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450015203}}}
2020-07-11 14:46:55.611 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842387030965760, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"7","productKey":"a1umzzYpOjO","gmtCreate":1594450015202,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450015204}}}
2020-07-11 14:47:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:47:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:47:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:47:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:47:00.042 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:47:00.044 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:47:00.018+0800');
2020-07-11 14:47:02.728 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:47:05.688 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842429435364864, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594450025313,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450025314}}}
2020-07-11 14:47:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:47:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:47:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:47:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:47:10.033 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:47:10.035 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:47:10.009+0800');
2020-07-11 14:47:14.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:47:15.500 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842470728200192, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"13","productKey":"a1umzzYpOjO","gmtCreate":1594450035157,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450035159}}}
2020-07-11 14:47:20.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:47:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:47:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:47:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:47:20.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:47:20.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:47:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:47:20.017+0800');
2020-07-11 14:47:25.687 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842513073892864, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"18","productKey":"a1umzzYpOjO","gmtCreate":1594450045254,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450045256}}}
2020-07-11 14:47:26.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:47:30.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:47:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:47:30.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:47:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:47:30.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:47:30.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:47:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:47:30.019+0800');
2020-07-11 14:47:35.623 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842554639446016, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"21","productKey":"a1umzzYpOjO","gmtCreate":1594450055164,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450055165}}}
2020-07-11 14:47:35.758 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842555235138048, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"23","productKey":"a1umzzYpOjO","gmtCreate":1594450055305,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450055307}}}
2020-07-11 14:47:38.730 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:47:40.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:47:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:47:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:47:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:47:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:47:40.033 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:47:40.036 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:47:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:47:40.008+0800');
2020-07-11 14:47:45.750 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842596901334016, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"27","productKey":"a1umzzYpOjO","gmtCreate":1594450065240,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450065241}}}
2020-07-11 14:47:50.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:48:00.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:48:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:48:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:48:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:48:00.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:48:00.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 14:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:48:00.019+0800');
2020-07-11 14:48:02.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:48:05.452 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842680535672322, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"33","productKey":"a1umzzYpOjO","gmtCreate":1594450085179,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450085182}}}
2020-07-11 14:48:06.237 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842681085228544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"35","productKey":"a1umzzYpOjO","gmtCreate":1594450085311,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450085313}}}
2020-07-11 14:48:10.006 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:48:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:48:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:48:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:48:10.029 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:48:10.032 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 14:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:48:10.006+0800');
2020-07-11 14:48:14.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:48:15.406 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842722306746368, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"37","productKey":"a1umzzYpOjO","gmtCreate":1594450095137,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450095139}}}
2020-07-11 14:48:15.539 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842722864668161, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"39","productKey":"a1umzzYpOjO","gmtCreate":1594450095272,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450095273}}}
2020-07-11 14:48:20.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:48:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:48:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:48:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:48:20.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:48:20.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 14:48:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:48:20.016+0800');
2020-07-11 14:48:25.426 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842764329522176, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"41","productKey":"a1umzzYpOjO","gmtCreate":1594450105158,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450105159}}}
2020-07-11 14:48:26.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:48:30.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:48:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:48:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:48:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:48:30.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:48:30.046 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:48:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:48:30.017+0800');
2020-07-11 14:48:35.658 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842806071232000, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"45","productKey":"a1umzzYpOjO","gmtCreate":1594450115110,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450115111}}}
2020-07-11 14:48:35.659 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842806679469569, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"46","productKey":"a1umzzYpOjO","gmtCreate":1594450115254,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450115257}}}
2020-07-11 14:48:38.733 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:48:40.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:48:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:48:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:48:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:48:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:48:40.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:48:40.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:48:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:48:40.007+0800');
2020-07-11 14:48:50.732 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:49:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:49:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:49:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:49:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:49:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:49:00.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:49:00.022+0800');
2020-07-11 14:49:02.733 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:49:05.991 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281842932504290304, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"58","productKey":"a1umzzYpOjO","gmtCreate":1594450145254,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450145255}}}
2020-07-11 14:49:10.007 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:49:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:49:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:49:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:49:10.032 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:49:10.035 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:49:10.007+0800');
2020-07-11 14:49:11.243 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:49:11 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:49:11.248 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-07-11 14:49:11 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:49:13.274 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-07-11 14:49:13.278 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT e.code, e.sb_status AS sbStatus, e.type AS sbType, a.kh_name, a.id AS khId, e.id AS sbId FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY e.sb_status DESC, e.code;
2020-07-11 14:49:13.359 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT count(*) FROM a_account_equipment ae LEFT JOIN a_equipment e ON e.code = ae.sb_code WHERE ae.kh_id = '48' AND e.type = 1;
2020-07-11 14:49:13.365 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 2 ms | SQL 语句：
SELECT e.*, period_no, p.is_period, p.period_no AS work_id, e.sb_status, a.* FROM a_account_equipment ae LEFT JOIN a_equipment e ON ae.sb_code = e.code LEFT JOIN a_account a ON ae.kh_id = a.id LEFT JOIN a_equipment_work_period p ON ae.sb_code = p.sb_code AND p.is_period = 1 WHERE ae.kh_id = '48' AND e.type = 1 ORDER BY p.is_period DESC, e.sb_status DESC, e.code LIMIT 0, 8;
2020-07-11 14:49:13.370 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1004');
2020-07-11 14:49:13.374 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1004');
2020-07-11 14:49:13.377 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1004';
2020-07-11 14:49:13.382 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1005');
2020-07-11 14:49:13.385 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1005');
2020-07-11 14:49:13.388 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1005';
2020-07-11 14:49:13.391 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1001');
2020-07-11 14:49:13.394 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1001');
2020-07-11 14:49:13.397 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1001';
2020-07-11 14:49:13.401 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1002');
2020-07-11 14:49:13.405 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, period_id, start_time, end_time, yc_type, yc_status, is_deal, yc_info, state, creator, create_date, modifier, mod_date FROM a_work_period_yc WHERE (sb_code = '1002');
2020-07-11 14:49:13.407 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '1002';
2020-07-11 14:49:13.411 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-07-11 14:49:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, start_time, end_time, work_sc, work_type, work_sd, sc, kg, is_period, is_pj, pj_content, period_no, state, creator, create_date, modifier, mod_date FROM a_equipment_work_period WHERE (sb_code = '1003');
2020-07-11 14:49:14.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:49:20.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:49:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:49:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:49:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:49:20.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:49:20.045 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:49:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:49:20.017+0800');
2020-07-11 14:49:25.713 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843016327458305, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"66","productKey":"a1umzzYpOjO","gmtCreate":1594450165238,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450165241}}}
2020-07-11 14:49:26.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:49:30.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:49:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:49:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:49:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:49:30.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:49:30.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:49:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:49:30.019+0800');
2020-07-11 14:49:38.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:49:40.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:49:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:49:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:49:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:49:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:49:40.042 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:49:40.044 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:49:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:49:40.016+0800');
2020-07-11 14:49:45.565 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843099626423808, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"73","productKey":"a1umzzYpOjO","gmtCreate":1594450185099,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450185101}}}
2020-07-11 14:49:45.568 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843100180075008, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"74","productKey":"a1umzzYpOjO","gmtCreate":1594450185230,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":22.799999237060547,"out_power":0,"run_state":1},"time":1594450185232}}}
2020-07-11 14:49:50.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:50:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:50:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:50:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:50:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:50:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:50:00.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:50:00.020+0800');
2020-07-11 14:50:02.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:50:05.752 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843184472912896, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"83","productKey":"a1umzzYpOjO","gmtCreate":1594450205328,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450205330}}}
2020-07-11 14:50:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:50:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:50:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:50:10.045 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:50:10.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:50:10.021+0800');
2020-07-11 14:50:14.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:50:20.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:50:20.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:50:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:50:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:50:20.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:50:20.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:50:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:50:20.017+0800');
2020-07-11 14:50:26.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:50:30.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:50:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:50:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:50:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:50:30.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:50:30.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:50:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:50:30.019+0800');
2020-07-11 14:50:35.664 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843309509307392, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"93","productKey":"a1umzzYpOjO","gmtCreate":1594450235137,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450235139}}}
2020-07-11 14:50:35.665 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843310016818177, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"95","productKey":"a1umzzYpOjO","gmtCreate":1594450235261,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450235262}}}
2020-07-11 14:50:38.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:50:40.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:50:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:50:40.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:50:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:50:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:50:40.032 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:50:40.034 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:50:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:50:40.007+0800');
2020-07-11 14:50:50.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:51:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:51:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:51:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:51:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:51:00.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:51:00.045 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:51:00.018+0800');
2020-07-11 14:51:02.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:51:05.615 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843436114475520, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"107","productKey":"a1umzzYpOjO","gmtCreate":1594450265323,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594450265325}}}
2020-07-11 14:51:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:51:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:51:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:51:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:51:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:51:10.016+0800');
2020-07-11 14:51:14.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:51:15.672 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843478099438080, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"111","productKey":"a1umzzYpOjO","gmtCreate":1594450275334,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594450275335}}}
2020-07-11 14:51:20.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:51:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:51:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:51:20.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:51:20.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:51:20.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:51:20.018+0800');
2020-07-11 14:51:25.652 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843520248019456, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"113","productKey":"a1umzzYpOjO","gmtCreate":1594450285382,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450285384}}}
2020-07-11 14:51:26.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:51:30.040 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:51:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:51:30.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:51:30.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:51:30.067 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:51:30.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:51:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:51:30.040+0800');
2020-07-11 14:51:35.474 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843561398273536, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"117","productKey":"a1umzzYpOjO","gmtCreate":1594450295194,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450295196}}}
2020-07-11 14:51:38.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:51:40.007 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:51:40.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:51:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:51:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:51:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:51:40.030 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:51:40.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:51:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:51:40.007+0800');
2020-07-11 14:51:45.413 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843603131661312, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"121","productKey":"a1umzzYpOjO","gmtCreate":1594450305143,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450305145}}}
2020-07-11 14:51:50.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:00.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:52:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:52:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:52:00.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:52:00.065 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:52:00.067 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 14:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:52:00.042+0800');
2020-07-11 14:52:02.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:05.374 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843686854103552, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"129","productKey":"a1umzzYpOjO","gmtCreate":1594450325104,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450325107}}}
2020-07-11 14:52:10.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:52:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:52:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:52:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:52:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:52:10.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 14:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:52:10.016+0800');
2020-07-11 14:52:14.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:15.428 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843728998512640, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"133","productKey":"a1umzzYpOjO","gmtCreate":1594450335153,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450335155}}}
2020-07-11 14:52:20.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:52:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:52:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:52:20.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:52:20.066 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:52:20.068 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 14:52:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:52:20.042+0800');
2020-07-11 14:52:25.596 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843771671355904, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"139","productKey":"a1umzzYpOjO","gmtCreate":1594450345327,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450345328}}}
2020-07-11 14:52:26.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:30.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:52:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:52:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:52:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:52:30.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:52:30.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:52:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:52:30.017+0800');
2020-07-11 14:52:35.549 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843813425569281, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"143","productKey":"a1umzzYpOjO","gmtCreate":1594450355281,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450355283}}}
2020-07-11 14:52:38.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:40.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:52:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:52:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:52:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:52:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:52:40.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 14:52:40.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:52:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T14:52:40.019+0800');
2020-07-11 14:52:50.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:52:55.375 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843896539896320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"149","productKey":"a1umzzYpOjO","gmtCreate":1594450375098,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450375099}}}
2020-07-11 14:53:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:53:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:53:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:53:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:53:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:53:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:53:00.020+0800');
2020-07-11 14:53:02.741 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:53:05.601 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281843939472840194, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"155","productKey":"a1umzzYpOjO","gmtCreate":1594450385333,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.299999237060547,"set_power":0,"run_state":0},"time":1594450385335}}}
2020-07-11 14:53:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:53:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:53:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:53:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:53:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:53:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:53:10.017+0800');
2020-07-11 14:53:14.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:53:20.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:53:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:53:20.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:53:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:53:20.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:53:20.049 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:53:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:53:20.022+0800');
2020-07-11 14:53:26.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:53:30.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:53:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:53:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:53:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:53:30.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:53:30.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:53:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:53:30.021+0800');
2020-07-11 14:53:35.421 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844064546941952, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"165","productKey":"a1umzzYpOjO","gmtCreate":1594450415154,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450415156}}}
2020-07-11 14:53:35.541 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844065050301440, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"167","productKey":"a1umzzYpOjO","gmtCreate":1594450415274,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450415275}}}
2020-07-11 14:53:38.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:53:40.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:53:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:53:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:53:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:53:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:53:40.041 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:53:40.044 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:53:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:53:40.017+0800');
2020-07-11 14:53:50.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:54:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:54:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:54:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:54:00.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:54:00.058 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 14:54:00.060 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T14:54:00.020+0800');
2020-07-11 14:54:02.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:54:10.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:54:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:54:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:54:10.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:54:10.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:54:10.019+0800');
2020-07-11 14:54:14.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:54:15.371 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844232092694528, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"181","productKey":"a1umzzYpOjO","gmtCreate":1594450455099,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450455101}}}
2020-07-11 14:54:20.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:54:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:54:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:54:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:54:20.040 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:54:20.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:54:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:54:20.016+0800');
2020-07-11 14:54:26.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:54:30.042 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:54:30.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:54:30.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:54:30.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:54:30.068 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:54:30.070 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:54:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:54:30.042+0800');
2020-07-11 14:54:35.510 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844316545023488, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"191","productKey":"a1umzzYpOjO","gmtCreate":1594450475235,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450475237}}}
2020-07-11 14:54:38.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:54:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:54:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:54:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:54:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:54:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:54:40.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:54:40.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:54:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:54:40.018+0800');
2020-07-11 14:54:50.745 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:00.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:55:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:55:00.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:55:00.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:55:00.066 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:55:00.068 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:55:00.043+0800');
2020-07-11 14:55:02.745 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:05.511 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844442386662912, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"202","productKey":"a1umzzYpOjO","gmtCreate":1594450505237,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594450505239}}}
2020-07-11 14:55:05.513 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844442395100672, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"203","productKey":"a1umzzYpOjO","gmtCreate":1594450505240,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450505242}}}
2020-07-11 14:55:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:55:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:55:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:55:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:55:10.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:55:10.017+0800');
2020-07-11 14:55:14.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:20.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:55:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:55:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:55:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:55:20.040 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:55:20.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:55:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:55:20.017+0800');
2020-07-11 14:55:25.374 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844525719053312, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"209","productKey":"a1umzzYpOjO","gmtCreate":1594450525106,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450525108}}}
2020-07-11 14:55:25.487 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844526222369792, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"210","productKey":"a1umzzYpOjO","gmtCreate":1594450525225,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594450525227}}}
2020-07-11 14:55:26.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:30.006 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:55:30.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:55:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:55:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:55:30.030 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:55:30.032 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:55:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:55:30.006+0800');
2020-07-11 14:55:38.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:40.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:55:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:55:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:55:40.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:55:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:55:40.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 14:55:40.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:55:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T14:55:40.017+0800');
2020-07-11 14:55:50.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:55:55.537 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844652231947778, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"223","productKey":"a1umzzYpOjO","gmtCreate":1594450555268,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450555271}}}
2020-07-11 14:56:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:56:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:56:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:56:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:56:00.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:56:00.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 14:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:56:00.020+0800');
2020-07-11 14:56:02.748 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:56:05.495 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844693973562368, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"226","productKey":"a1umzzYpOjO","gmtCreate":1594450565220,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594450565222}}}
2020-07-11 14:56:10.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:56:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:56:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:56:10.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:56:10.047 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 14:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:56:10.018+0800');
2020-07-11 14:56:14.748 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:56:20.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:56:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:56:20.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:56:20.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:56:20.065 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:56:20.067 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 14:56:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:56:20.041+0800');
2020-07-11 14:56:25.468 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844777767366145, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"235","productKey":"a1umzzYpOjO","gmtCreate":1594450585199,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.299999237060547,"set_power":0,"run_state":0},"time":1594450585201}}}
2020-07-11 14:56:25.472 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844777779978240, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"234","productKey":"a1umzzYpOjO","gmtCreate":1594450585200,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594450585203}}}
2020-07-11 14:56:26.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:56:30.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:56:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:56:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:56:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:56:30.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:56:30.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 14:56:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:56:30.016+0800');
2020-07-11 14:56:35.473 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844819743980544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"238","productKey":"a1umzzYpOjO","gmtCreate":1594450595207,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594450595209}}}
2020-07-11 14:56:38.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:56:40.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:56:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:56:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:56:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:56:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:56:40.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:56:40.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 14:56:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:56:40.008+0800');
2020-07-11 14:56:50.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:56:55.650 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281844904351544832, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"245","productKey":"a1umzzYpOjO","gmtCreate":1594450615378,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594450615380}}}
2020-07-11 14:57:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:57:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:57:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:57:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:57:00.042 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 14:57:00.044 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 14:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T14:57:00.018+0800');
2020-07-11 14:57:02.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:57:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:57:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:57:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:57:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:57:10.045 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 14:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:57:10.019+0800');
2020-07-11 14:57:14.750 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:57:20.041 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:57:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:57:20.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:57:20.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:57:20.068 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 14:57:20.071 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 14:57:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T14:57:20.041+0800');
2020-07-11 14:57:26.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:57:30.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:57:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:57:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:57:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:57:30.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:57:30.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 14:57:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:57:30.016+0800');
2020-07-11 14:57:35.715 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281845072392054784, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"263","productKey":"a1umzzYpOjO","gmtCreate":1594450655442,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.399999618530273,"set_power":0,"run_state":0},"time":1594450655444}}}
2020-07-11 14:57:38.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:57:40.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:57:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:57:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:57:40.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:57:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:57:40.038 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 14:57:40.041 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 14:57:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T14:57:40.016+0800');
2020-07-11 14:57:50.750 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:57:55.485 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281845155279991808, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"271","productKey":"a1umzzYpOjO","gmtCreate":1594450675204,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594450675206}}}
2020-07-11 14:58:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:58:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:58:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:58:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:58:00.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:58:00.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 14:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:58:00.020+0800');
2020-07-11 14:58:02.750 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:58:10.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:58:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:58:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:58:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:58:10.035 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:58:10.038 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 14:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:58:10.009+0800');
2020-07-11 14:58:14.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:58:20.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:58:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:58:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:58:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:58:20.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:58:20.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 14:58:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:58:20.018+0800');
2020-07-11 14:58:26.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:58:30.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:58:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:58:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:58:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:58:30.042 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:58:30.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 14:58:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:58:30.019+0800');
2020-07-11 14:58:38.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:58:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:58:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:58:40.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:58:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:58:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:58:40.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:58:40.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 14:58:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:58:40.018+0800');
2020-07-11 14:58:50.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:59:00.042 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:59:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:59:00.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:59:00.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:59:00.065 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:59:00.068 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 14:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:59:00.042+0800');
2020-07-11 14:59:02.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:59:10.054 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:59:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:59:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:59:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:59:10.080 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 14:59:10.082 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 14:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T14:59:10.054+0800');
2020-07-11 14:59:14.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:59:20.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:59:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:59:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:59:20.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:59:20.034 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 14:59:20.036 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 14:59:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T14:59:20.009+0800');
2020-07-11 14:59:26.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:59:30.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:59:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:59:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:59:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:59:30.033 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 14:59:30.036 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 14:59:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T14:59:30.010+0800');
2020-07-11 14:59:38.753 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 14:59:40.007 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 14:59:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 14:59:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 14:59:40.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 14:59:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 14:59:40.035 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 14:59:40.037 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 14:59:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T14:59:40.007+0800');
2020-07-11 14:59:50.753 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:00:00.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:00:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:00:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:00:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:00:00.034 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:00:00.036 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:00:00.009+0800');
2020-07-11 15:00:02.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:00:10.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:00:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:00:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:00:10.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:00:10.047 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:00:10.021+0800');
2020-07-11 15:00:14.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:00:20.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:00:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:00:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:00:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:00:20.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:00:20.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:00:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:00:20.018+0800');
2020-07-11 15:00:26.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:00:30.009 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:00:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:00:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:00:30.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:00:30.037 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:00:30.040 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:00:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:00:30.009+0800');
2020-07-11 15:00:38.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:00:40.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:00:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:00:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:00:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:00:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:00:40.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:00:40.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:00:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:00:40.018+0800');
2020-07-11 15:00:50.756 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:01:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:01:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:01:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:01:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:01:00.036 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:01:00.038 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:01:00.011+0800');
2020-07-11 15:01:02.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:01:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:01:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:01:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:01:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:01:10.019+0800');
2020-07-11 15:01:14.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:01:20.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:01:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:01:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:01:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:01:20.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 15:01:20.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:01:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T15:01:20.017+0800');
2020-07-11 15:01:26.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:01:30.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:01:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:01:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:01:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:01:30.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 15:01:30.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:01:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T15:01:30.009+0800');
2020-07-11 15:01:38.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:01:40.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:01:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:01:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:01:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:01:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:01:40.048 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:01:40.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:01:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:01:40.020+0800');
2020-07-11 15:01:50.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:02:00.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:02:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:02:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:02:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:02:00.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:02:00.038 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:02:00.009+0800');
2020-07-11 15:02:02.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:02:10.042 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:02:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:02:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:02:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:02:10.066 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:02:10.069 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:02:10.042+0800');
2020-07-11 15:02:14.758 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:02:20.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:02:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:02:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:02:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:02:20.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:02:20.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:02:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:02:20.017+0800');
2020-07-11 15:02:26.758 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:02:30.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:02:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:02:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:02:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:02:30.033 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:02:30.035 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:02:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:02:30.008+0800');
2020-07-11 15:02:38.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:02:40.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:02:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:02:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:02:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:02:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:02:40.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:02:40.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:02:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:02:40.017+0800');
2020-07-11 15:02:50.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:03:00.008 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:03:00.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:03:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:03:00.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:03:00.031 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:03:00.033 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:03:00.008+0800');
2020-07-11 15:03:02.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:03:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:03:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:03:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:03:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:03:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:03:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:03:10.019+0800');
2020-07-11 15:03:14.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:03:20.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:03:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:03:20.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:03:20.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:03:20.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:03:20.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:03:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:03:20.019+0800');
2020-07-11 15:03:26.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:03:30.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:03:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:03:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:03:30.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:03:30.033 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:03:30.036 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:03:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:03:30.010+0800');
2020-07-11 15:03:38.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:03:40.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:03:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:03:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:03:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:03:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:03:40.041 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:03:40.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:03:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:03:40.018+0800');
2020-07-11 15:03:50.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:04:00.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:04:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:04:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:04:00.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:04:00.034 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:04:00.036 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:04:00.011+0800');
2020-07-11 15:04:02.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:04:10.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:04:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:04:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:04:10.044 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:04:10.019+0800');
2020-07-11 15:04:14.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:04:20.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:04:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:04:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:04:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:04:20.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:04:20.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:04:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:04:20.020+0800');
2020-07-11 15:04:26.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:04:30.008 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:04:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:04:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:04:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:04:30.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:04:30.032 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:04:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:04:30.008+0800');
2020-07-11 15:04:38.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:04:40.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:04:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:04:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:04:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:04:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:04:40.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:04:40.045 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:04:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:04:40.020+0800');
2020-07-11 15:04:50.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:05:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:05:00.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:05:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:05:00.035 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:05:00.037 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:05:00.011+0800');
2020-07-11 15:05:02.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:05:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:05:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:05:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:05:10.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:05:10.016+0800');
2020-07-11 15:05:14.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:20.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:05:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:05:20.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:05:20.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:05:20.046 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:05:20.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:05:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:05:20.020+0800');
2020-07-11 15:05:26.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:28.620 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281847055899464704, content = {"lastTime":"2020-07-11 14:58:05.228","utcLastTime":"2020-07-11T06:58:05.228Z","clientIp":"122.97.175.56","utcTime":"2020-07-11T07:05:28.350Z","time":"2020-07-11 15:05:28.350","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 15:05:28.626 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:05:28 | 耗时 1 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 14:58:05.228', modifier = NULL, mod_date = '2020-07-11T15:05:28.623' WHERE (code = '1001');
2020-07-11 15:05:30.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:05:30.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:05:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:05:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:05:30.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:05:30.035 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:05:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:05:30.008+0800');
2020-07-11 15:05:38.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:40.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:05:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:05:40.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:05:40.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:05:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:05:40.048 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 15:05:40.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:05:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T15:05:40.019+0800');
2020-07-11 15:05:49.352 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847142872553984, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"9","productKey":"a1umzzYpOjO","gmtCreate":1594451149083,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451149085}}}
2020-07-11 15:05:49.443 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847143250052608, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594451149173,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451149174}}}
2020-07-11 15:05:50.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:05:59.412 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847185058887682, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"13","productKey":"a1umzzYpOjO","gmtCreate":1594451159142,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451159144}}}
2020-07-11 15:05:59.528 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847185549518848, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"15","productKey":"a1umzzYpOjO","gmtCreate":1594451159260,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451159261}}}
2020-07-11 15:05:59.529 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847185553744897, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"14","productKey":"a1umzzYpOjO","gmtCreate":1594451159261,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451159262}}}
2020-07-11 15:06:00.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:06:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:06:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:06:00.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:06:00.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-07-11 15:06:00.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-07-11T15:06:00.016+0800');
2020-07-11 15:06:02.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:06:09.726 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847228323132416, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"19","productKey":"a1umzzYpOjO","gmtCreate":1594451169456,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451169458}}}
2020-07-11 15:06:09.734 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847228331500032, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"18","productKey":"a1umzzYpOjO","gmtCreate":1594451169458,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451169460}}}
2020-07-11 15:06:10.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:06:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:06:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:06:10.042 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:06:10.045 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:06:10.018+0800');
2020-07-11 15:06:14.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:06:20.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:06:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:06:20.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:20 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:06:20.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:06:20.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:06:20.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:06:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:06:20.021+0800');
2020-07-11 15:06:26.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:06:30.010 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:06:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:06:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:06:30.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:06:30.033 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:06:30.036 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:06:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:06:30.010+0800');
2020-07-11 15:06:38.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:06:39.827 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281847354571596800, content = {"lastTime":"2020-07-11 15:06:09.445","utcLastTime":"2020-07-11T07:06:09.445Z","clientIp":"122.97.179.181","utcTime":"2020-07-11T07:06:39.559Z","time":"2020-07-11 15:06:39.559","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 15:06:39.831 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:06:39 | 耗时 1 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 15:06:09.445', modifier = NULL, mod_date = '2020-07-11T15:06:39.829' WHERE (code = '1001');
2020-07-11 15:06:39.834 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281847354596784128, content = {"lastTime":"2020-07-11 15:06:39.549","utcLastTime":"2020-07-11T07:06:39.549Z","clientIp":"122.97.179.215","utcTime":"2020-07-11T07:06:39.565Z","time":"2020-07-11 15:06:39.565","productKey":"a1umzzYpOjO","deviceName":"1001","status":"online"}
2020-07-11 15:06:39.837 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:06:39 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 2, create_date = '2020-07-11T15:06:39.834', modifier = NULL, mod_date = '2020-07-11T15:06:39.835' WHERE (code = '1001');
2020-07-11 15:06:40.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:06:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:06:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:06:40.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:06:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:06:40.030 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:06:40.032 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:06:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:06:40.008+0800');
2020-07-11 15:06:40.061 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847355557285888, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"1","productKey":"a1umzzYpOjO","gmtCreate":1594451199792,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594451199794}}}
2020-07-11 15:06:40.148 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847355922150912, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"4","productKey":"a1umzzYpOjO","gmtCreate":1594451199879,"deviceName":"1001","items":{"energy_info":{"value":{"input_power_b":0,"input_curr_a":0,"input_power_a":0,"input_curr_b":0,"input_curr_c":0,"input_volt_b":0,"input_volt_a":0,"input_volt_c":0,"input_power_c":0},"time":1594451199881}}}
2020-07-11 15:06:50.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:07:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:07:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:07:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:07:00.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:07:00.037 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:07:00.039 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:07:00.013+0800');
2020-07-11 15:07:00.380 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847440798184448, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"9","productKey":"a1umzzYpOjO","gmtCreate":1594451220114,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451220116}}}
2020-07-11 15:07:00.586 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847441657915392, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594451220319,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451220321}}}
2020-07-11 15:07:00.591 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847441678888960, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"10","productKey":"a1umzzYpOjO","gmtCreate":1594451220324,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451220326}}}
2020-07-11 15:07:02.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:07:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:07:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:07:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:07:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:07:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 15:07:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T15:07:10.019+0800');
2020-07-11 15:07:10.464 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847483072517120, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"13","productKey":"a1umzzYpOjO","gmtCreate":1594451230193,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451230195}}}
2020-07-11 15:07:10.727 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847484175596544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"15","productKey":"a1umzzYpOjO","gmtCreate":1594451230456,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594451230459}}}
2020-07-11 15:07:14.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:07:20.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:07:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:07:20.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:07:20.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:07:20.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:07:20.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:07:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:07:20.020+0800');
2020-07-11 15:07:20.445 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847524671684096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"17","productKey":"a1umzzYpOjO","gmtCreate":1594451240112,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451240114}}}
2020-07-11 15:07:20.544 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847525258814465, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"19","productKey":"a1umzzYpOjO","gmtCreate":1594451240253,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.5,"set_power":0,"run_state":0},"time":1594451240254}}}
2020-07-11 15:07:20.545 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847525258744833, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"18","productKey":"a1umzzYpOjO","gmtCreate":1594451240252,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451240254}}}
2020-07-11 15:07:26.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:07:30.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:07:30.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:07:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:07:30.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:07:30.030 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:07:30.032 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:07:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:07:30.007+0800');
2020-07-11 15:07:38.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:07:40.016 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:07:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:07:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:07:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:07:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:07:40.041 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:07:40.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:07:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:07:40.016+0800');
2020-07-11 15:07:50.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:00.010 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:08:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:08:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:08:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:08:00.035 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:08:00.037 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:08:00.010+0800');
2020-07-11 15:08:02.119 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281847699737691136, content = {"lastTime":"2020-07-11 15:07:20.241","utcLastTime":"2020-07-11T07:07:20.241Z","clientIp":"122.97.179.215","utcTime":"2020-07-11T07:08:01.853Z","time":"2020-07-11 15:08:01.853","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 15:08:02.123 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:08:02 | 耗时 1 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 15:07:20.241', modifier = NULL, mod_date = '2020-07-11T15:08:02.121' WHERE (code = '1001');
2020-07-11 15:08:02.131 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281847699779611137, content = {"lastTime":"2020-07-11 15:08:01.842","utcLastTime":"2020-07-11T07:08:01.842Z","clientIp":"122.97.175.81","utcTime":"2020-07-11T07:08:01.863Z","time":"2020-07-11 15:08:01.863","productKey":"a1umzzYpOjO","deviceName":"1001","status":"online"}
2020-07-11 15:08:02.134 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:08:02 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 2, create_date = '2020-07-11T15:08:02.131', modifier = NULL, mod_date = '2020-07-11T15:08:02.132' WHERE (code = '1001');
2020-07-11 15:08:02.299 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847700501100544, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"2","productKey":"a1umzzYpOjO","gmtCreate":1594451282033,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594451282035}}}
2020-07-11 15:08:02.300 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847700496836096, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"3","productKey":"a1umzzYpOjO","gmtCreate":1594451282032,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":0,"set_power":0,"run_state":0},"time":1594451282034}}}
2020-07-11 15:08:02.304 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847700513666560, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"1","productKey":"a1umzzYpOjO","gmtCreate":1594451282035,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":0,"out_power":0,"run_state":0},"time":1594451282038}}}
2020-07-11 15:08:02.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:10.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:08:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:08:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:08:10.041 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:08:10.043 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:08:10.017+0800');
2020-07-11 15:08:12.445 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847743056407552, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"5","productKey":"a1umzzYpOjO","gmtCreate":1594451292177,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451292179}}}
2020-07-11 15:08:12.551 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847743492611584, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"7","productKey":"a1umzzYpOjO","gmtCreate":1594451292282,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451292284}}}
2020-07-11 15:08:12.566 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847743505241089, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"6","productKey":"a1umzzYpOjO","gmtCreate":1594451292285,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451292287}}}
2020-07-11 15:08:14.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:20.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:08:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:08:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:08:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:08:20.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:08:20.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:08:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:08:20.018+0800');
2020-07-11 15:08:22.492 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847785175609344, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"10","productKey":"a1umzzYpOjO","gmtCreate":1594451302220,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451302222}}}
2020-07-11 15:08:22.495 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847785179883008, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"11","productKey":"a1umzzYpOjO","gmtCreate":1594451302222,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451302223}}}
2020-07-11 15:08:26.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:30.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:08:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:08:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:08:30.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:08:30.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:08:30.046 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:08:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:08:30.022+0800');
2020-07-11 15:08:32.530 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847827286496768, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"15","productKey":"a1umzzYpOjO","gmtCreate":1594451312260,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451312262}}}
2020-07-11 15:08:38.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:40.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:08:40.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:08:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:08:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:08:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:08:40.041 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:08:40.043 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:08:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:08:40.016+0800');
2020-07-11 15:08:42.473 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847869007238656, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"17","productKey":"a1umzzYpOjO","gmtCreate":1594451322207,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451322210}}}
2020-07-11 15:08:42.584 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847869460176896, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"19","productKey":"a1umzzYpOjO","gmtCreate":1594451322316,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451322318}}}
2020-07-11 15:08:50.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:08:52.668 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847911763894784, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"23","productKey":"a1umzzYpOjO","gmtCreate":1594451332400,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451332402}}}
2020-07-11 15:09:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:09:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:09:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:09:00.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:09:00.040 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:09:00.042 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:09:00.016+0800');
2020-07-11 15:09:02.516 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847953052727809, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"27","productKey":"a1umzzYpOjO","gmtCreate":1594451342245,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.600000381469727,"set_power":0,"run_state":0},"time":1594451342247}}}
2020-07-11 15:09:02.518 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847953061012480, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"26","productKey":"a1umzzYpOjO","gmtCreate":1594451342248,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451342249}}}
2020-07-11 15:09:02.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:09:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:09:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:09:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:09:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:09:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:09:10.045 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:09:10.019+0800');
2020-07-11 15:09:12.458 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281847994651730945, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"29","productKey":"a1umzzYpOjO","gmtCreate":1594451352164,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451352165}}}
2020-07-11 15:09:14.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:09:20.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:09:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:09:20.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:09:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:09:20.042 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:09:20.044 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:09:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:09:20.018+0800');
2020-07-11 15:09:22.731 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848037857253888, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"33","productKey":"a1umzzYpOjO","gmtCreate":1594451362463,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451362465}}}
2020-07-11 15:09:22.929 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848038675142147, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"35","productKey":"a1umzzYpOjO","gmtCreate":1594451362659,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.700000762939453,"set_power":0,"run_state":0},"time":1594451362661}}}
2020-07-11 15:09:26.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:09:30.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:09:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:09:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:09:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:09:30.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:09:30.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:09:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:09:30.020+0800');
2020-07-11 15:09:32.533 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848078957285376, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"38","productKey":"a1umzzYpOjO","gmtCreate":1594451372263,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451372264}}}
2020-07-11 15:09:38.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:09:40.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:09:40.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:09:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:09:40.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:09:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:09:40.041 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-07-11 15:09:40.043 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:09:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-07-11T15:09:40.019+0800');
2020-07-11 15:09:42.362 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848120191538690, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"41","productKey":"a1umzzYpOjO","gmtCreate":1594451382095,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451382096}}}
2020-07-11 15:09:42.457 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848120577423360, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"43","productKey":"a1umzzYpOjO","gmtCreate":1594451382187,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.700000762939453,"set_power":0,"run_state":0},"time":1594451382189}}}
2020-07-11 15:09:42.458 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848120581536768, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"42","productKey":"a1umzzYpOjO","gmtCreate":1594451382188,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451382189}}}
2020-07-11 15:09:50.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:09:52.398 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848162285560320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"45","productKey":"a1umzzYpOjO","gmtCreate":1594451392131,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451392133}}}
2020-07-11 15:09:52.493 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848162671446016, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"47","productKey":"a1umzzYpOjO","gmtCreate":1594451392223,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.700000762939453,"set_power":0,"run_state":0},"time":1594451392224}}}
2020-07-11 15:10:00.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:10:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:10:00.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:10:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:10:00.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 15:10:00.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T15:10:00.011+0800');
2020-07-11 15:10:02.555 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848204891321856, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"50","productKey":"a1umzzYpOjO","gmtCreate":1594451402289,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594451402290}}}
2020-07-11 15:10:02.557 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848204916486657, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"51","productKey":"a1umzzYpOjO","gmtCreate":1594451402295,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.700000762939453,"set_power":0,"run_state":0},"time":1594451402297}}}
2020-07-11 15:10:02.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:10:10.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:10:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:10:10.048 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:10:10.051 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:10:10.020+0800');
2020-07-11 15:10:14.771 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:10:20.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:10:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:10:20.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:10:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:10:20.038 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:10:20.041 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:10:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:10:20.010+0800');
2020-07-11 15:10:22.440 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848288286645761, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"57","productKey":"a1umzzYpOjO","gmtCreate":1594451422172,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594451422174}}}
2020-07-11 15:10:26.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:10:30.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:10:30.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:10:30.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:10:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:30 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:10:30.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 15:10:30.046 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:10:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T15:10:30.011+0800');
2020-07-11 15:10:32.555 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281848330716248576, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"63","productKey":"a1umzzYpOjO","gmtCreate":1594451432288,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.899999618530273,"set_power":0,"run_state":0},"time":1594451432290}}}
2020-07-11 15:10:38.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:10:40.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:10:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:10:40.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:10:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:10:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:10:40.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 15:10:40.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:10:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T15:10:40.010+0800');
2020-07-11 15:10:50.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:11:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:11:00.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:11:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:11:00.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:11:00.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-07-11 15:11:00.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-07-11T15:11:00.013+0800');
2020-07-11 15:11:02.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:11:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:11:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:11:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:11:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:11:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-07-11 15:11:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-07-11T15:11:10.010+0800');
2020-07-11 15:11:14.776 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:11:20.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:11:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:11:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:11:20.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:11:20.042 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 15:11:20.045 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:11:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T15:11:20.011+0800');
2020-07-11 15:11:26.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:11:30.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:11:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:11:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:11:30.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:11:30.036 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:11:30.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:11:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:11:30.010+0800');
2020-07-11 15:11:38.776 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:11:40.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:11:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:11:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:11:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:11:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:11:40.032 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:11:40.035 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:11:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:11:40.008+0800');
2020-07-11 15:11:50.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:12:00.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:12:00.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:12:00.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:12:00.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:12:00.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:12:00.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:12:00.021+0800');
2020-07-11 15:12:02.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:12:10.008 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:12:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:12:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:12:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:12:10.034 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:12:10.037 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:12:10.008+0800');
2020-07-11 15:12:14.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:12:20.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:12:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:12:20.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:12:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:12:20.038 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 15:12:20.041 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:12:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T15:12:20.009+0800');
2020-07-11 15:12:26.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:12:30.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:12:30.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:12:30.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:12:30.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:12:30.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:12:30.042 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:12:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:12:30.010+0800');
2020-07-11 15:12:38.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:12:40.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:12:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:12:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:12:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:12:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:12:40.037 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 15:12:40.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:12:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T15:12:40.008+0800');
2020-07-11 15:12:50.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:13:00.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:13:00.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:00 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:13:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:13:00.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:13:00.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-07-11 15:13:00.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-07-11T15:13:00.010+0800');
2020-07-11 15:13:02.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:13:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:13:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:13:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:13:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:13:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-07-11 15:13:10.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-07-11T15:13:10.020+0800');
2020-07-11 15:13:14.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:13:20.008 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:13:20.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:13:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:13:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:20 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:13:20.038 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 15:13:20.042 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:13:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T15:13:20.008+0800');
2020-07-11 15:13:26.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:13:30.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:13:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:13:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:13:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:13:30.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:13:30.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:13:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:13:30.017+0800');
2020-07-11 15:13:38.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:13:40.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:13:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:13:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:13:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:13:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:13:40.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:13:40.045 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:13:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:13:40.018+0800');
2020-07-11 15:13:50.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:14:00.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:14:00.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:14:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:14:00.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:14:00.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:14:00.038 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:14:00.010+0800');
2020-07-11 15:14:02.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:14:10.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:14:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:14:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:14:10.042 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:14:10.045 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:14:10.018+0800');
2020-07-11 15:14:14.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:14:20.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:14:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:14:20.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:14:20.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:14:20.040 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:14:20.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:14:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:14:20.016+0800');
2020-07-11 15:14:26.785 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:14:30.009 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:14:30.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:14:30.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:14:30.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:14:30.035 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:14:30.037 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:14:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:14:30.009+0800');
2020-07-11 15:14:38.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:14:40.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:14:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:14:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:14:40.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:14:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:14:40.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:14:40.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:14:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:14:40.018+0800');
2020-07-11 15:14:50.783 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:15:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:15:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:15:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:15:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:15:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:15:00.047 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:15:00.019+0800');
2020-07-11 15:15:02.783 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:15:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:15:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:15:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:15:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:15:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:15:10.017+0800');
2020-07-11 15:15:14.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:15:20.010 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:15:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:15:20.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:15:20.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:15:20.038 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:15:20.040 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:15:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:15:20.010+0800');
2020-07-11 15:15:26.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:15:30.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:15:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:15:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:15:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:15:30.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:15:30.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:15:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:15:30.018+0800');
2020-07-11 15:15:38.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:15:40.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:15:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:15:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:15:40.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:15:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:15:40.037 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:15:40.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:15:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:15:40.009+0800');
2020-07-11 15:15:50.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:16:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:16:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:16:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:16:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:16:00.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:16:00.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:16:00.020+0800');
2020-07-11 15:16:02.785 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:16:10.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:16:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:16:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:16:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:16:10.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:16:10.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:16:10.017+0800');
2020-07-11 15:16:14.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:16:20.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:16:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:16:20.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:16:20.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:16:20.039 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:16:20.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:16:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:16:20.016+0800');
2020-07-11 15:16:26.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:16:30.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:16:30.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:16:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:16:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:16:30.041 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:16:30.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:16:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:16:30.016+0800');
2020-07-11 15:16:38.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:16:40.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:16:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:16:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:16:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:16:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:16:40.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:16:40.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:16:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:16:40.008+0800');
2020-07-11 15:16:50.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:17:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:17:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:17:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:17:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:17:00.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:17:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:17:00.020+0800');
2020-07-11 15:17:02.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:17:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:17:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:17:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:17:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:17:10.070 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:17:10.073 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:17:10.044+0800');
2020-07-11 15:17:14.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:17:20.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:17:20.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:17:20.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:17:20.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:17:20.041 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:17:20.044 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:17:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:17:20.016+0800');
2020-07-11 15:17:26.789 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:17:30.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:17:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:17:30.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:17:30.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:17:30.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 15:17:30.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:17:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T15:17:30.020+0800');
2020-07-11 15:17:38.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:17:40.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:17:40.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:17:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:17:40.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:17:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:17:40.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:17:40.045 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:17:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:17:40.017+0800');
2020-07-11 15:17:50.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:18:00.013 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:18:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:18:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:18:00.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:00 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:18:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-07-11 15:18:00.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-07-11T15:18:00.013+0800');
2020-07-11 15:18:02.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:18:10.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:18:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:18:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:18:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:18:10.034 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:18:10.036 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:18:10.009+0800');
2020-07-11 15:18:14.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:18:20.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:18:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:18:20.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:18:20.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:18:20.037 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 15:18:20.039 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:18:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T15:18:20.010+0800');
2020-07-11 15:18:26.789 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:18:30.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:18:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:18:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:18:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:18:30.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:18:30.046 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:18:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:18:30.018+0800');
2020-07-11 15:18:38.789 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:18:40.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:18:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:18:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:18:40.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:18:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:18:40.032 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:18:40.035 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:18:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:18:40.008+0800');
2020-07-11 15:18:50.789 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:19:00.016 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:19:00.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:19:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:19:00.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:19:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-07-11 15:19:00.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-07-11T15:19:00.016+0800');
2020-07-11 15:19:02.791 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:19:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:19:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:19:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:19:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:19:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:19:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:19:10.017+0800');
2020-07-11 15:19:14.791 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:19:19.317 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:1949B640F73B8A0985CDDA1153BC5C58
2020-07-11 15:19:20.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:19:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:19:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:19:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:19:20.035 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:19:20.037 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:19:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:19:20.009+0800');
2020-07-11 15:19:26.791 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:19:30.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:19:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:19:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:19:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:19:30.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:19:30.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:19:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:19:30.018+0800');
2020-07-11 15:19:37.052 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1002/thing/event/property/post, messageId = 1281850614443471361, content = {"deviceType":"CustomCategory","iotId":"aTHtZ3eXOduxAciYM4ne000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1594451976771,"deviceName":"1002","items":{"energy_info":{"value":{"input_power_b":12,"input_curr_a":10,"input_power_a":11,"input_curr_b":20,"input_curr_c":30,"input_volt_b":12,"input_volt_a":12,"input_volt_c":12,"input_power_c":13},"time":1594451976772},"roller_info":{"value":{"run_frequence":10,"out_power":22,"run_state":0},"time":1594451976772},"Cool_Status":{"value":0,"time":1594451976772},"heart_info":{"value":{"heart_temperature":1,"set_power":2,"run_state":0},"time":1594451976772},"feed_info":{"value":{"run_frequence":12,"out_power":110,"run_state":1},"time":1594451976772}}}
2020-07-11 15:19:38.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:19:40.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:19:40.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:19:40.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:19:40.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:19:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:19:40.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:19:40.046 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:19:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:19:40.019+0800');
2020-07-11 15:19:50.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:20:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:20:00.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:20:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:20:00.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:20:00.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-07-11 15:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:20:00.020+0800');
2020-07-11 15:20:02.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:20:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:20:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:20:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:20:10.069 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 15:20:10.072 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-07-11 15:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T15:20:10.042+0800');
2020-07-11 15:20:14.794 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:20.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:20:20.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:20:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:20:20.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:20:20.032 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-07-11 15:20:20.035 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-07-11 15:20:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-07-11T15:20:20.009+0800');
2020-07-11 15:20:26.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:30.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:20:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:20:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:20:30.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:20:30.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:20:30.044 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 15:20:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:20:30.016+0800');
2020-07-11 15:20:32.184 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /as/mqtt/status/a1umzzYpOjO/1001, messageId = 1281850845679611393, content = {"lastTime":"2020-07-11 15:10:33.043","utcLastTime":"2020-07-11T07:10:33.043Z","clientIp":"122.97.175.81","utcTime":"2020-07-11T07:20:31.904Z","time":"2020-07-11 15:20:31.904","productKey":"a1umzzYpOjO","deviceName":"1001","status":"offline"}
2020-07-11 15:20:32.188 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  p6spy - 2020-07-11 15:20:32 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET sb_status = 1, last_time = '2020-07-11 15:10:33.043', modifier = NULL, mod_date = '2020-07-11T15:20:32.186' WHERE (code = '1001');
2020-07-11 15:20:32.376 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281850846552051712, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"4","productKey":"a1umzzYpOjO","gmtCreate":1594452032110,"deviceName":"1001","items":{"energy_info":{"value":{"input_power_b":0,"input_curr_a":0,"input_power_a":0,"input_curr_b":0,"input_curr_c":0,"input_volt_b":0,"input_volt_a":0,"input_volt_c":0,"input_power_c":0},"time":1594452032112}}}
2020-07-11 15:20:37.032 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1002/thing/event/property/post, messageId = 1281850866076476416, content = {"deviceType":"CustomCategory","iotId":"aTHtZ3eXOduxAciYM4ne000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1594452036765,"deviceName":"1002","items":{"energy_info":{"value":{"input_power_b":12,"input_curr_a":10,"input_power_a":11,"input_curr_b":20,"input_curr_c":30,"input_volt_b":12,"input_volt_a":12,"input_volt_c":12,"input_power_c":13},"time":1594452036766},"roller_info":{"value":{"run_frequence":10,"out_power":22,"run_state":0},"time":1594452036766},"Cool_Status":{"value":0,"time":1594452036766},"heart_info":{"value":{"heart_temperature":1,"set_power":2,"run_state":0},"time":1594452036766},"feed_info":{"value":{"run_frequence":12,"out_power":110,"run_state":1},"time":1594452036766}}}
2020-07-11 15:20:38.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:40.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:20:40.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:20:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:20:40.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:20:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:20:40.034 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:20:40.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 15:20:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:20:40.009+0800');
2020-07-11 15:20:42.317 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281850888243431425, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"5","productKey":"a1umzzYpOjO","gmtCreate":1594452042049,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452042051}}}
2020-07-11 15:20:42.422 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281850888683821568, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"7","productKey":"a1umzzYpOjO","gmtCreate":1594452042155,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":27.899999618530273,"set_power":0,"run_state":0},"time":1594452042157}}}
2020-07-11 15:20:50.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:20:52.460 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281850930794558464, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"10","productKey":"a1umzzYpOjO","gmtCreate":1594452052195,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594452052197}}}
2020-07-11 15:21:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:21:00.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:21:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:21:00.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:21:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:21:00.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-07-11 15:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:21:00.019+0800');
2020-07-11 15:21:02.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:21:07.032 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1002/thing/event/property/post, messageId = 1281850991918251520, content = {"deviceType":"CustomCategory","iotId":"aTHtZ3eXOduxAciYM4ne000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1594452066768,"deviceName":"1002","items":{"energy_info":{"value":{"input_power_b":12,"input_curr_a":10,"input_power_a":11,"input_curr_b":20,"input_curr_c":30,"input_volt_b":12,"input_volt_a":12,"input_volt_c":12,"input_power_c":13},"time":1594452066770},"roller_info":{"value":{"run_frequence":10,"out_power":22,"run_state":0},"time":1594452066770},"Cool_Status":{"value":0,"time":1594452066770},"heart_info":{"value":{"heart_temperature":1,"set_power":2,"run_state":0},"time":1594452066770},"feed_info":{"value":{"run_frequence":12,"out_power":110,"run_state":1},"time":1594452066770}}}
2020-07-11 15:21:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:21:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:21:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:21:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-07-11 15:21:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-07-11 15:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-07-11T15:21:10.017+0800');
2020-07-11 15:21:14.292 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851014252919808, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"17","productKey":"a1umzzYpOjO","gmtCreate":1594452072093,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452072095}}}
2020-07-11 15:21:14.796 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:21:20.009 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:21:20.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:21:20.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:21:20.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:21:20.036 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 15:21:20.039 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-07-11 15:21:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T15:21:20.009+0800');
2020-07-11 15:21:26.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:21:30.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:21:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:21:30.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:21:30.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:21:30.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:21:30.043 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-07-11 15:21:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:21:30.017+0800');
2020-07-11 15:21:31.113 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851014693321216, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"18","productKey":"a1umzzYpOjO","gmtCreate":1594452072197,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594452072200}}}
2020-07-11 15:21:32.429 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851098432587776, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"27","productKey":"a1umzzYpOjO","gmtCreate":1594452092163,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452092165}}}
2020-07-11 15:21:34.304 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851056363632128, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"21","productKey":"a1umzzYpOjO","gmtCreate":1594452082132,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452082135}}}
2020-07-11 15:21:34.305 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281850972049733120, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"13","productKey":"a1umzzYpOjO","gmtCreate":1594452062031,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452062033}}}
2020-07-11 15:21:38.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:21:40.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:21:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:21:40.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:21:40.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:21:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:21:40.037 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-07-11 15:21:40.039 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-07-11 15:21:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-07-11T15:21:40.009+0800');
2020-07-11 15:21:42.589 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851141050910721, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"31","productKey":"a1umzzYpOjO","gmtCreate":1594452102323,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452102325}}}
2020-07-11 15:21:50.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:22:00.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:22:00.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:22:00.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:22:00.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:22:00.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:22:00.038 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-07-11 15:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:22:00.011+0800');
2020-07-11 15:22:02.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:22:06.098 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851182893274624, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"35","productKey":"a1umzzYpOjO","gmtCreate":1594452112300,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452112301}}}
2020-07-11 15:22:10.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:22:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:22:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:22:10.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:22:10.046 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-07-11 15:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:22:10.019+0800');
2020-07-11 15:22:12.505 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851266506749440, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"42","productKey":"a1umzzYpOjO","gmtCreate":1594452132234,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594452132236}}}
2020-07-11 15:22:12.506 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851266510942720, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"43","productKey":"a1umzzYpOjO","gmtCreate":1594452132234,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452132237}}}
2020-07-11 15:22:14.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:22:20.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:22:20.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:22:20.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:22:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:22:20.032 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:22:20.035 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-07-11 15:22:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:22:20.007+0800');
2020-07-11 15:22:26.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:22:30.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:22:30.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:22:30.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:22:30.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:22:30.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-07-11 15:22:30.046 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-07-11 15:22:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-07-11T15:22:30.018+0800');
2020-07-11 15:22:38.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:22:40.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:22:40.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:22:40.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:22:40.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:22:40 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:22:40.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:22:40.035 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-07-11 15:22:40 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:22:40.008+0800');
2020-07-11 15:22:42.388 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851391866109440, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"53","productKey":"a1umzzYpOjO","gmtCreate":1594452162123,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452162124}}}
2020-07-11 15:22:42.636 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851350786993152, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"51","productKey":"a1umzzYpOjO","gmtCreate":1594452152329,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452152330}}}
2020-07-11 15:22:42.713 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851392402908673, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"54","productKey":"a1umzzYpOjO","gmtCreate":1594452162249,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594452162252}}}
2020-07-11 15:22:47.180 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851265881698306, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"41","productKey":"a1umzzYpOjO","gmtCreate":1594452132085,"deviceName":"1001","items":{"roller_info":{"value":{"run_frequence":37.200000762939453,"out_power":0,"run_state":0},"time":1594452132087}}}
2020-07-11 15:22:50.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:23:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:23:00.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:00 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:23:00.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:00 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:23:00.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:00 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:23:00.043 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:23:00.045 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-07-11 15:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:23:00.019+0800');
2020-07-11 15:23:02.537 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851476372846080, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"62","productKey":"a1umzzYpOjO","gmtCreate":1594452182272,"deviceName":"1001","items":{"feed_info":{"value":{"run_frequence":20,"out_power":0,"run_state":1},"time":1594452182273}}}
2020-07-11 15:23:02.538 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851476385528320, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"63","productKey":"a1umzzYpOjO","gmtCreate":1594452182273,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28,"set_power":0,"run_state":0},"time":1594452182275}}}
2020-07-11 15:23:02.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:23:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:23:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:23:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:23:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:23:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:23:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-07-11 15:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:23:10.019+0800');
2020-07-11 15:23:12.591 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851518496331776, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"67","productKey":"a1umzzYpOjO","gmtCreate":1594452192313,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28.100000381469727,"set_power":0,"run_state":0},"time":1594452192314}}}
2020-07-11 15:23:14.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:23:20.008 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:23:20.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:23:20.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:23:20.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:20 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:23:20.032 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-07-11 15:23:20.035 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-07-11 15:23:20 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-07-11T15:23:20.008+0800');
2020-07-11 15:23:22.479 febs [JmsSession [ID:22fdb8c2-e367-4437-b971-509fcc0391d1:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/1001/thing/event/property/post, messageId = 1281851560015730176, content = {"deviceType":"CustomCategory","iotId":"Z9NjaZ3dbfz0TGSASmmL000100","requestId":"71","productKey":"a1umzzYpOjO","gmtCreate":1594452202213,"deviceName":"1001","items":{"heart_info":{"value":{"heart_temperature":28.100000381469727,"set_power":0,"run_state":0},"time":1594452202215}}}
2020-07-11 15:23:26.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:23:30.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:23:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:23:30.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:23:30.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:23:30.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-07-11 15:23:30.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-07-11 15:23:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-07-11T15:23:30.018+0800');
2020-07-11 15:23:38.802 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594449381148_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 15:23:40.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 15:23:40.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 15:23:40.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:40 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 15:23:40.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 15:23:40 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 15:23:40.055 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-07-11 15:23:40.059 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-07-11 15:23:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-07-11T15:23:40.012+0800');
2020-07-11 17:52:00.295 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6928 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-07-11 17:52:00.350 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-07-11 17:52:03.388 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-11 17:52:03.390 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-07-11 17:52:03.457 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-07-11 17:52:04.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1906914d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af78207c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$937097ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4825e8b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@67d4c48d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6cfa8b68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-11 17:52:04.857 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-07-11 17:52:04.876 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-07-11 17:52:04.885 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-07-11 17:52:04.885 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-07-11 17:52:04.893 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME%\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;%MAVEN_HOME%\bin;D:\Readis\Redis-x64-3.2.100;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-07-11 17:52:05.010 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-07-11 17:52:05.010 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4530 ms
2020-07-11 17:52:05.499 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-07-11 17:52:05.510 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-07-11 17:52:06.320 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-07-11 17:52:06.321 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-07-11 17:52:06.321 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-07-11 17:52:06.321 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-07-11 17:52:06.975 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-07-11 17:52:09.294 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-07-11 17:52:09.323 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-07-11 17:52:09.334 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-07-11 17:52:09.334 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-07-11 17:52:09.337 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-07-11 17:52:09.339 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-07-11 17:52:09.340 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1594461129324'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-07-11 17:52:09.340 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-07-11 17:52:09.340 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-07-11 17:52:09.342 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@19d3f6ad
2020-07-11 17:52:09.410 febs [main] INFO  p6spy - 2020-07-11 17:52:09 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-07-11 17:52:10.622 febs [main] INFO  p6spy - 2020-07-11 17:52:10 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (type = 2);
2020-07-11 17:52:11.584 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-07-11 17:52:11.848 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-07-11 17:52:11.921 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14d53884, org.springframework.security.web.context.SecurityContextPersistenceFilter@51da7b08, org.springframework.security.web.header.HeaderWriterFilter@4c114687, org.springframework.security.web.authentication.logout.LogoutFilter@67823972, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@45b6c666, org.springframework.security.web.session.ConcurrentSessionFilter@5aeebccc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79fc4e99, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fabfc79, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6074d638, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@126ff1a1, org.springframework.security.web.session.SessionManagementFilter@3f1fb139, org.springframework.security.web.access.ExceptionTranslationFilter@6ad198c9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bc3d70e]
2020-07-11 17:52:11.979 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-11 17:52:11.994 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-07-11 17:52:11.996 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-07-11 17:52:12.395 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-07-11 17:52:13.039 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-07-11 17:52:13.078 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-07-11 17:52:13.141 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-07-11 17:52:13.163 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-07-11 17:52:13.177 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-07-11 17:52:13.198 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-07-11 17:52:13.201 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.111 seconds (JVM running for 15.083)
2020-07-11 17:52:13.230 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-07-11 17:52:13.230 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-07-11 17:52:13.230 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-07-11 17:52:13.230 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-07-11 17:52:13.230 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.43.46:8099/login
2020-07-11 17:52:14.044 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-07-11 17:52:14.164 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-07-11 17:52:14.177 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-07-11 17:52:14.177 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1594449381148"'s failed in-progress jobs.
2020-07-11 17:52:14.190 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1594461129324 started.
2020-07-11 17:52:14.197 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594461129324_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 17:52:14.384 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:1225b90c-c156-460a-b323-e23b8af2c603:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-07-11 17:52:14.385 febs [QpidJMS Connection Executor: ID:1225b90c-c156-460a-b323-e23b8af2c603:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-07-11 17:52:15.055 febs [RMI TCP Connection(2)-192.168.43.46] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-11 17:52:15.055 febs [RMI TCP Connection(2)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-07-11 17:52:15.070 febs [RMI TCP Connection(1)-192.168.43.46] INFO  p6spy - 2020-07-11 17:52:15 | 耗时 0 ms | SQL 语句：
select 1;
2020-07-11 17:52:15.075 febs [RMI TCP Connection(2)-192.168.43.46] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-07-11 17:52:20.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 17:52:20.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:20 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 17:52:20.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 17:52:20.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 17:52:20.109 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：66 毫秒
2020-07-11 17:52:20.122 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-07-11 17:52:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 66, '2020-07-11T17:52:20.043+0800');
2020-07-11 17:52:26.195 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1594461129324_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-07-11 17:52:30.013 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-07-11 17:52:30.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:30 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-07-11 17:52:30.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:30 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-07-11 17:52:30.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-07-11 17:52:30 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '0/10 * * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-07-11 17:52:30.054 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-07-11 17:52:30.058 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-07-11 17:52:30 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-07-11T17:52:30.013+0800');
