2020-08-10 08:24:09.340 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8652 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 08:24:09.343 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 08:24:11.247 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 08:24:11.250 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 08:24:11.325 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-08-10 08:24:11.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:11.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bf1f46c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.003 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5590d5f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$39894d23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ee3e9e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@565aa4ac' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$131340e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:24:12.551 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 08:24:12.564 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 08:24:12.572 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 08:24:12.572 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 08:24:12.578 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 08:24:12.679 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 08:24:12.679 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3267 ms
2020-08-10 08:24:13.015 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 08:24:13.023 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 08:24:13.533 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 08:24:13.534 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 08:24:13.534 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 08:24:13.534 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 08:24:14.044 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 08:24:16.140 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 08:24:16.173 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 08:24:16.184 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 08:24:16.184 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 08:24:16.187 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 08:24:16.189 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 08:24:16.190 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597019056174'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 08:24:16.190 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 08:24:16.190 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 08:24:16.191 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@eebc0db
2020-08-10 08:24:16.280 febs [main] INFO  p6spy - 2020-08-10 08:24:16 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 08:24:18.234 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 08:24:18.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 08:24:18.546 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44da745f, org.springframework.security.web.context.SecurityContextPersistenceFilter@7bde704a, org.springframework.security.web.header.HeaderWriterFilter@2f58f492, org.springframework.security.web.authentication.logout.LogoutFilter@733bd6f3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1fd35a92, org.springframework.security.web.session.ConcurrentSessionFilter@3ba1f56e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6dc2e473, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@511bfbb0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6b630d4b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2435c6ae, org.springframework.security.web.session.SessionManagementFilter@4ae5ddc0, org.springframework.security.web.access.ExceptionTranslationFilter@6b52a40, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cea67b1]
2020-08-10 08:24:18.597 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 08:24:18.614 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 08:24:18.615 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 08:24:18.979 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 08:24:19.617 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 08:24:19.630 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 08:24:19.717 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 08:24:19.735 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 08:24:19.750 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 08:24:19.780 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 08:24:19.784 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.181 seconds (JVM running for 12.144)
2020-08-10 08:24:19.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 08:24:19.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 08:24:19.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 08:24:19.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 08:24:19.808 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 08:24:20.169 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 08:24:20.169 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 08:24:20.181 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-10 08:24:20 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 08:24:20.183 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-08-10 08:24:20.738 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 08:24:20.750 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 08:24:20.750 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596857969910"'s failed in-progress jobs.
2020-08-10 08:24:20.757 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597019056174 started.
2020-08-10 08:24:20.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 08:24:20.834 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:24:41.324 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:73BA3F5CE726E1C5913CFB12D97A4D7B
2020-08-10 08:24:45.300 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:24:45 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 08:24:45.383 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:24:45 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 08:24:45.396 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:24:45 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 08:24:45.931 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 08:24:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:24:46.127 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T08:24:46.088+0800' WHERE (USERNAME = 'admin');
2020-08-10 08:24:46.143 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 4 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 08:24:46.147 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:24:46.151 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:24:46.157 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 08:24:46.162 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:24:46 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 08:24:57.716 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-10 08:24:57.732 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 3 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-10 08:24:57.741 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:24:57.745 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-10 08:24:57.751 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:24:57.758 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-10 08:24:57.761 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-10 08:24:57.766 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:24:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-10 08:25:00.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:25:00.061 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 08:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T08:25:00.046+0800');
2020-08-10 08:25:01.914 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-10 08:25:01.918 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-10 08:25:01.923 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:25:01.929 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-10 08:25:01.934 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:25:01.939 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-10 08:25:01.946 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-10 08:25:01.949 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:25:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-10 08:25:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:25:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:25:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:25:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:25:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:25:10.079 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-10 08:25:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 08:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 53, '2020-08-10T08:25:10.026+0800');
2020-08-10 08:25:20.836 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:26:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:26:00.033 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 08:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:26:00.027+0800');
2020-08-10 08:26:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:26:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:26:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:26:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:26:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 08:26:10.057 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 08:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T08:26:10.023+0800');
2020-08-10 08:26:20.839 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:26:29.321 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-10 08:26:29.325 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-10 08:26:29.328 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:26:29.331 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-10 08:26:29.335 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 08:26:29.340 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-10 08:26:29.345 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-10 08:26:29.349 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-10 08:27:00.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:27:00.058 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 08:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T08:27:00.049+0800');
2020-08-10 08:27:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:27:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:27:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:27:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:27:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 08:27:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 08:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T08:27:10.023+0800');
2020-08-10 08:27:20.841 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:28:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:28:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 08:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T08:28:00.022+0800');
2020-08-10 08:28:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:28:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:28:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:28:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:28:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 08:28:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 08:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T08:28:10.022+0800');
2020-08-10 08:28:20.842 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:28:28.661 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:28:28 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:28:29.442 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 08:28:29 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:28:35.862 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 08:28:35 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 08:28:35.872 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 08:28:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 08:28:50.842 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 08:28:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 08:28:50.844 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 08:28:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 08:29:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:29:00.029 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 08:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:29:00.023+0800');
2020-08-10 08:29:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:29:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:29:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:29:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 08:29:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 08:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T08:29:10.021+0800');
2020-08-10 08:29:20.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:30:00.097 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:30:00.128 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 08:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 25, '2020-08-10T08:30:00.097+0800');
2020-08-10 08:30:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:30:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:30:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:30:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:30:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 08:30:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 08:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T08:30:10.020+0800');
2020-08-10 08:30:20.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:31:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:31:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 08:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:31:00.020+0800');
2020-08-10 08:31:10.025 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:31:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:31:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:31:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:31:10.052 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 08:31:10.054 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 08:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T08:31:10.025+0800');
2020-08-10 08:31:20.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019056174_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:32:00.029 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:32:00.033 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 08:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:32:00.029+0800');
2020-08-10 08:32:09.545 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9472 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 08:32:09.548 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 08:32:11.003 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 08:32:11.006 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 08:32:11.099 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-10 08:32:11.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e24d784e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.738 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$78bf077d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$5cb77eac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$116ccfb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e50df2e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$36417269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:11.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:32:12.254 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 08:32:12.267 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 08:32:12.276 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 08:32:12.276 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 08:32:12.282 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 08:32:12.392 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 08:32:12.392 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2787 ms
2020-08-10 08:32:12.750 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 08:32:12.759 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 08:32:13.214 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 08:32:13.214 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 08:32:13.215 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 08:32:13.215 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 08:32:13.726 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 08:32:15.748 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 08:32:15.778 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 08:32:15.790 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 08:32:15.790 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 08:32:15.794 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 08:32:15.795 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 08:32:15.797 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597019535779'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 08:32:15.797 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 08:32:15.797 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 08:32:15.799 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@112530c3
2020-08-10 08:32:15.874 febs [main] INFO  p6spy - 2020-08-10 08:32:15 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 08:32:17.835 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:32:18.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 08:32:18.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 08:32:18.159 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23d23d98, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ba1f56e, org.springframework.security.web.header.HeaderWriterFilter@442310fd, org.springframework.security.web.authentication.logout.LogoutFilter@511bfbb0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21ba0d33, org.springframework.security.web.session.ConcurrentSessionFilter@1e4c4fda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77881b7a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1abf951a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@cea67b1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fd35a92, org.springframework.security.web.session.SessionManagementFilter@3ca6bd01, org.springframework.security.web.access.ExceptionTranslationFilter@4070c4ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78ea700f]
2020-08-10 08:32:18.210 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 08:32:18.227 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 08:32:18.229 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 08:32:18.618 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 08:32:19.252 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 08:32:19.265 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 08:32:19.329 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 08:32:19.349 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 08:32:19.363 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 08:32:19.392 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 08:32:19.396 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.568 seconds (JVM running for 11.526)
2020-08-10 08:32:19.418 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 08:32:19.419 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 08:32:19.419 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 08:32:19.419 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 08:32:19.419 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 08:32:19.893 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 08:32:19.894 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 08:32:19.905 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 08:32:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 08:32:19.909 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-08-10 08:32:20.375 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 08:32:20.443 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 08:32:20.443 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597019056174"'s failed in-progress jobs.
2020-08-10 08:32:20.452 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-10 08:32:20.458 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597019535779 started.
2020-08-10 08:32:20.465 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:32:24.031 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D4474696EC3CDD649A0B277288BEF059
2020-08-10 08:32:26.843 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:32:26 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 08:32:26.935 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:32:26 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 08:32:26.948 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:32:26 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 08:32:27.347 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:32:27.490 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T08:32:27.452+0800' WHERE (USERNAME = 'admin');
2020-08-10 08:32:27.513 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 08:32:27.518 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:32:27.521 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:32:27.527 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 08:32:27.531 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:32:27 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 08:32:30.313 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:32:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 08:32:30.327 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:32:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 08:33:00.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:33:00.059 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 08:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T08:33:00.043+0800');
2020-08-10 08:33:08.080 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:33:08 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:33:10.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:33:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:33:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:33:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:33:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:33:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:33:10.084 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：69 毫秒
2020-08-10 08:33:10.089 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 08:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 69, '2020-08-10T08:33:10.015+0800');
2020-08-10 08:33:20.465 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:33:31.133 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 08:33:31 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:34:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:34:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 08:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:34:00.026+0800');
2020-08-10 08:34:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:34:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:34:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:34:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:34:10.084 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 08:34:10.088 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 08:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T08:34:10.048+0800');
2020-08-10 08:34:20.467 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:35:00.048 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:35:00.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 08:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:35:00.048+0800');
2020-08-10 08:35:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:35:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:35:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:35:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:35:10.057 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 08:35:10.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 08:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T08:35:10.023+0800');
2020-08-10 08:35:20.467 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:36:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:36:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 08:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:36:00.023+0800');
2020-08-10 08:36:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:36:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:36:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:36:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:36:10.075 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 08:36:10.078 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 08:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T08:36:10.044+0800');
2020-08-10 08:36:20.468 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:37:00.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:37:00.053 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 08:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:37:00.049+0800');
2020-08-10 08:37:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:37:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:37:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:37:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:37:10.074 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 08:37:10.077 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 08:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T08:37:10.042+0800');
2020-08-10 08:37:20.478 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:38:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:38:00.029 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 08:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:38:00.025+0800');
2020-08-10 08:38:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:38:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:38:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:38:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 08:38:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 08:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-10T08:38:10.011+0800');
2020-08-10 08:38:20.476 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:39:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:39:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 08:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:39:00.023+0800');
2020-08-10 08:39:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:39:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:39:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:39:10.051 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 08:39:10.054 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 08:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T08:39:10.023+0800');
2020-08-10 08:39:20.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:40:00.014 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:40:00.020 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 08:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:40:00.014+0800');
2020-08-10 08:40:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:40:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:40:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:40:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:40:10.036 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 08:40:10.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 08:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T08:40:10.007+0800');
2020-08-10 08:40:20.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:41:00.026 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:41:00.031 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 08:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:41:00.026+0800');
2020-08-10 08:41:10.089 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:41:10.106 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:41:10.110 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:41:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:41:10.152 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-08-10 08:41:10.156 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 08:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 63, '2020-08-10T08:41:10.089+0800');
2020-08-10 08:41:20.486 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:41:56.659 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:41:56 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:42:00.031 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:42:00.035 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 08:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:42:00.031+0800');
2020-08-10 08:42:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:42:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:42:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:42:10.050 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 08:42:10.054 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 08:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T08:42:10.020+0800');
2020-08-10 08:42:20.488 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:43:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:43:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 08:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:43:00.022+0800');
2020-08-10 08:43:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:43:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:43:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:43:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 08:43:10.045 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 08:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T08:43:10.017+0800');
2020-08-10 08:43:20.492 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:43:59.181 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 08:43:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:44:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:44:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 08:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:44:00.020+0800');
2020-08-10 08:44:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:44:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:44:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:44:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:44:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 08:44:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 08:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T08:44:10.017+0800');
2020-08-10 08:44:17.036 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 08:44:17 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:44:20.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:45:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:45:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 08:45:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T08:45:00.023+0800');
2020-08-10 08:45:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:45:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:45:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:45:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:45:10.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 08:45:10.042 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 08:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T08:45:10.009+0800');
2020-08-10 08:45:10.559 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:45:10 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:45:20.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:45:32.441 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:45:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:46:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:46:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 08:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:46:00.023+0800');
2020-08-10 08:46:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:46:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:46:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 08:46:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 08:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T08:46:10.017+0800');
2020-08-10 08:46:20.500 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:46:28.030 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:46:28 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:47:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:47:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 08:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:47:00.024+0800');
2020-08-10 08:47:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:47:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:47:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:47:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:47:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 08:47:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 08:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T08:47:10.020+0800');
2020-08-10 08:47:20.504 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:48:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:48:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 08:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:48:00.011+0800');
2020-08-10 08:48:10.023 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:48:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:48:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:48:10.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 08:48:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 08:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T08:48:10.023+0800');
2020-08-10 08:48:20.505 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:49:00.049 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:49:00.052 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 08:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:49:00.049+0800');
2020-08-10 08:49:10.022 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:49:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:49:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:49:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 08:49:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 08:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T08:49:10.022+0800');
2020-08-10 08:49:20.508 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:50:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:50:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 08:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:50:00.022+0800');
2020-08-10 08:50:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:50:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 08:50:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 08:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T08:50:10.018+0800');
2020-08-10 08:50:20.512 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:51:00.025 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:51:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 08:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:51:00.025+0800');
2020-08-10 08:51:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:51:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:51:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:51:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:51:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 08:51:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 08:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T08:51:10.021+0800');
2020-08-10 08:51:20.515 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:52:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:52:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 08:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:52:00.021+0800');
2020-08-10 08:52:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:52:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:52:10.155 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:52:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:52:10.180 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：160 毫秒
2020-08-10 08:52:10.184 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 08:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 160, '2020-08-10T08:52:10.020+0800');
2020-08-10 08:52:20.530 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597019535779_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:52:45.929 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11004 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 08:52:45.932 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 08:52:47.382 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 08:52:47.384 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 08:52:47.444 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46ms. Found 0 repository interfaces.
2020-08-10 08:52:47.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ec22c202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82945131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.122 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$668cc860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1b42196b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4a70d302' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4016bc1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 08:52:48.655 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 08:52:48.668 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 08:52:48.676 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 08:52:48.677 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 08:52:48.683 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 08:52:48.784 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 08:52:48.784 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2784 ms
2020-08-10 08:52:49.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 08:52:49.108 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 08:52:49.573 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 08:52:49.573 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 08:52:49.573 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 08:52:49.573 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 08:52:50.108 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 08:52:52.112 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 08:52:52.144 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 08:52:52.155 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 08:52:52.155 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 08:52:52.158 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 08:52:52.160 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 08:52:52.161 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597020772145'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 08:52:52.161 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 08:52:52.161 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 08:52:52.162 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b59c3d
2020-08-10 08:52:52.251 febs [main] INFO  p6spy - 2020-08-10 08:52:52 | 耗时 12 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 08:52:54.115 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 08:52:54.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 08:52:54.363 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 08:52:54.432 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e7517aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@24f5e9e8, org.springframework.security.web.header.HeaderWriterFilter@42cf5a6f, org.springframework.security.web.authentication.logout.LogoutFilter@1906f982, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4c9d833, org.springframework.security.web.session.ConcurrentSessionFilter@da9374c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7acb5200, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2553dcc0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@76e2a621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@152035eb, org.springframework.security.web.session.SessionManagementFilter@6371c5ec, org.springframework.security.web.access.ExceptionTranslationFilter@6e8aea7e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7836c79]
2020-08-10 08:52:54.482 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 08:52:54.497 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 08:52:54.498 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 08:52:54.864 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 08:52:55.500 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 08:52:55.513 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 08:52:55.573 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 08:52:55.591 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 08:52:55.605 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 08:52:55.633 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 08:52:55.636 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.438 seconds (JVM running for 11.414)
2020-08-10 08:52:55.658 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 08:52:55.659 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 08:52:55.659 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 08:52:55.659 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 08:52:55.659 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 08:52:56.341 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 08:52:56.341 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 08:52:56.354 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 08:52:56 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 08:52:56.356 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-10 08:52:56.592 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 08:52:56.622 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597020772145 started.
2020-08-10 08:52:56.629 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:53:00.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:53:00.094 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 08:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T08:53:00.053+0800');
2020-08-10 08:53:07.316 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2ACCF807CE73872B7AEBF16DD6B9B696
2020-08-10 08:53:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:53:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:53:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:53:10.114 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:53:10.116 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：92 毫秒
2020-08-10 08:53:10.121 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 92, '2020-08-10T08:53:10.024+0800');
2020-08-10 08:53:10.246 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 08:53:10.362 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 08:53:10.375 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 08:53:10.773 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:53:10.879 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T08:53:10.870+0800' WHERE (USERNAME = 'admin');
2020-08-10 08:53:10.890 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 08:53:10.894 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:53:10.897 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:53:10.903 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 08:53:10.909 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 08:53:10 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 08:53:11.611 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 08:53:11.611 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597019535779"'s failed in-progress jobs.
2020-08-10 08:53:12.219 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:53:12.258 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T08:53:12.253+0800' WHERE (USERNAME = 'admin');
2020-08-10 08:53:12.263 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 08:53:12.267 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:53:12.271 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 08:53:12.274 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 08:53:12.278 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 08:53:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 08:53:20.632 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:53:57.588 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 08:53:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 08:54:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:54:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 08:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T08:54:00.021+0800');
2020-08-10 08:54:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:54:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:54:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:54:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:54:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 08:54:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 08:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T08:54:10.023+0800');
2020-08-10 08:54:20.630 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:55:00.072 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:55:00.078 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 08:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:55:00.072+0800');
2020-08-10 08:55:10.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:55:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:55:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:55:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:55:10.066 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 08:55:10.072 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 08:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-10T08:55:10.025+0800');
2020-08-10 08:55:20.632 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:56:00.015 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:56:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 08:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:56:00.015+0800');
2020-08-10 08:56:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:56:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:56:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:56:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:56:10.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 08:56:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 08:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T08:56:10.023+0800');
2020-08-10 08:56:20.636 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:57:00.015 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:57:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 08:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:57:00.015+0800');
2020-08-10 08:57:10.024 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:57:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:57:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:57:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:57:10.056 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 08:57:10.059 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 08:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T08:57:10.024+0800');
2020-08-10 08:57:20.638 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:58:00.015 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:58:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 08:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:58:00.015+0800');
2020-08-10 08:58:10.086 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:58:10.092 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:58:10.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:58:10.120 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:58:10.122 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 08:58:10.126 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 08:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T08:58:10.086+0800');
2020-08-10 08:58:20.638 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 08:59:00.014 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 08:59:00.019 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 08:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T08:59:00.014+0800');
2020-08-10 08:59:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 08:59:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 08:59:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 08:59:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 08:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 08:59:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 08:59:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 08:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T08:59:10.020+0800');
2020-08-10 08:59:20.643 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:00:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:00:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:00:00.015+0800');
2020-08-10 09:00:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:00:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:00:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:00:10.052 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 09:00:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T09:00:10.017+0800');
2020-08-10 09:00:20.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:01:00.014 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:01:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 09:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T09:01:00.014+0800');
2020-08-10 09:01:10.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:01:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:01:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:01:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:01:10.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:01:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 09:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T09:01:10.022+0800');
2020-08-10 09:01:20.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:02:00.049 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:02:00.054 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 09:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:02:00.049+0800');
2020-08-10 09:02:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:02:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:02:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:02:10.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:02:10.052 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 09:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T09:02:10.021+0800');
2020-08-10 09:02:20.652 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:03:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:03:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:03:00.025+0800');
2020-08-10 09:03:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:03:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:03:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:03:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:03:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:03:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T09:03:10.021+0800');
2020-08-10 09:03:20.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:04:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:04:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:04:00.020+0800');
2020-08-10 09:04:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:04:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:04:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:04:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:04:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T09:04:10.020+0800');
2020-08-10 09:04:20.662 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:05:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:05:00.030 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:05:00.023+0800');
2020-08-10 09:05:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:05:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:05:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:05:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:05:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:05:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:05:10.018+0800');
2020-08-10 09:05:20.661 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:06:00.025 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:06:00.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:06:00.025+0800');
2020-08-10 09:06:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:06:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:06:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:06:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:06:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:06:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T09:06:10.023+0800');
2020-08-10 09:06:20.665 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:07:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:07:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 09:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:07:00.023+0800');
2020-08-10 09:07:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:07:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:07:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:07:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 09:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T09:07:10.019+0800');
2020-08-10 09:07:20.665 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:08:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:08:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 09:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:08:00.022+0800');
2020-08-10 09:08:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:08:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:08:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:08:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:08:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 09:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:08:10.018+0800');
2020-08-10 09:08:20.670 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:09:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:09:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 09:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:09:00.022+0800');
2020-08-10 09:09:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:09:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:09:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:09:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:09:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 09:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:09:10.016+0800');
2020-08-10 09:09:20.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:10:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:10:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:10:00.019+0800');
2020-08-10 09:10:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:10:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:10:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:10:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:10:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 09:10:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T09:10:10.021+0800');
2020-08-10 09:10:20.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597020772145_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:10:52.925 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 10924 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 09:10:52.928 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 09:10:54.513 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 09:10:54.515 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 09:10:54.591 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-08-10 09:10:55.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d1fb08a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$686c97d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4c650eff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$11a600a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1310fcb0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.385 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$25ef02bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.391 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:10:55.760 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 09:10:55.779 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 09:10:55.790 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 09:10:55.791 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 09:10:55.798 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 09:10:55.901 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 09:10:55.901 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2903 ms
2020-08-10 09:10:56.284 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 09:10:56.291 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 09:10:56.752 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 09:10:56.752 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 09:10:56.752 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 09:10:56.752 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 09:10:57.254 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 09:10:59.274 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 09:10:59.307 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 09:10:59.318 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 09:10:59.318 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 09:10:59.321 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 09:10:59.323 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 09:10:59.324 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597021859308'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 09:10:59.324 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 09:10:59.324 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 09:10:59.325 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@252d8df6
2020-08-10 09:10:59.399 febs [main] INFO  p6spy - 2020-08-10 09:10:59 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 09:11:01.398 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 09:11:01.648 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 09:11:01.649 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 09:11:01.649 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 09:11:01.719 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d9ee75a, org.springframework.security.web.context.SecurityContextPersistenceFilter@1dadd172, org.springframework.security.web.header.HeaderWriterFilter@727f36dd, org.springframework.security.web.authentication.logout.LogoutFilter@3ba1f56e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@8c18bde, org.springframework.security.web.session.ConcurrentSessionFilter@37665305, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4070c4ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e4c4fda, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3051e476, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9825465, org.springframework.security.web.session.SessionManagementFilter@ae74eef, org.springframework.security.web.access.ExceptionTranslationFilter@5111f814, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@320ba79f]
2020-08-10 09:11:01.772 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 09:11:01.787 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 09:11:01.788 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 09:11:02.173 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 09:11:02.846 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 09:11:02.861 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 09:11:02.928 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 09:11:02.951 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 09:11:02.966 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 09:11:03.019 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 09:11:03.023 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.916 seconds (JVM running for 11.987)
2020-08-10 09:11:03.045 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 09:11:03.046 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 09:11:03.046 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 09:11:03.046 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 09:11:03.046 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 09:11:03.350 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 09:11:03.351 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 09:11:03.370 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-10 09:11:03.766 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 09:11:03 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 09:11:03.952 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 09:11:03.974 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597021859308 started.
2020-08-10 09:11:03.980 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:11:10.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:11:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:11:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:11:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:11:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:11:10.152 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：112 毫秒
2020-08-10 09:11:10.165 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:11:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 112, '2020-08-10T09:11:10.040+0800');
2020-08-10 09:11:15.983 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:11:18.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 09:11:18.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597020772145"'s failed in-progress jobs.
2020-08-10 09:11:18.984 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-10 09:11:26.877 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C0D62C23B8EDA5B86B2930489249A205
2020-08-10 09:11:27.982 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:12:00.030 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:12:00.043 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 8, '2020-08-10T09:12:00.030+0800');
2020-08-10 09:12:10.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:12:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:12:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:12:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:12:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:12:10.068 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-10 09:12:10.072 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-10T09:12:10.022+0800');
2020-08-10 09:12:15.984 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021859308_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:12:42.235 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16240 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 09:12:42.238 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 09:12:44.438 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 09:12:44.444 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 09:12:44.566 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91ms. Found 0 repository interfaces.
2020-08-10 09:12:45.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c15cf7d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$57ce8706] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3bc6fe35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f07c4f40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@43d65a81' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1550f1f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:12:45.846 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 09:12:45.863 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 09:12:45.873 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 09:12:45.873 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 09:12:45.880 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 09:12:45.999 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 09:12:45.999 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3684 ms
2020-08-10 09:12:46.333 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 09:12:46.341 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 09:12:46.858 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 09:12:46.858 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 09:12:46.858 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 09:12:46.858 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 09:12:47.392 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 09:12:49.479 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 09:12:49.510 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 09:12:49.521 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 09:12:49.522 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 09:12:49.525 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 09:12:49.526 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 09:12:49.527 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597021969512'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 09:12:49.527 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 09:12:49.527 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 09:12:49.529 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@fa11fda
2020-08-10 09:12:49.602 febs [main] INFO  p6spy - 2020-08-10 09:12:49 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 09:12:51.666 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 09:12:52.052 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 09:12:52.053 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 09:12:52.053 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 09:12:52.053 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 09:12:52.053 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 09:12:52.053 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 09:12:52.131 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e617c0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@50e24ea4, org.springframework.security.web.header.HeaderWriterFilter@28269c65, org.springframework.security.web.authentication.logout.LogoutFilter@2befb16f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d7caf9c, org.springframework.security.web.session.ConcurrentSessionFilter@42805abe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22172b00, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ae16aa, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5065bdac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9a07409, org.springframework.security.web.session.SessionManagementFilter@18b58c77, org.springframework.security.web.access.ExceptionTranslationFilter@20518250, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75c0cd39]
2020-08-10 09:12:52.182 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 09:12:52.199 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 09:12:52.201 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 09:12:52.593 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 09:12:53.450 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 09:12:53.471 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 09:12:53.553 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 09:12:53.580 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 09:12:53.595 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 09:12:53.631 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 09:12:53.635 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.269 seconds (JVM running for 13.394)
2020-08-10 09:12:53.665 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 09:12:53.665 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 09:12:53.665 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 09:12:53.665 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 09:12:53.665 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 09:12:53.797 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 09:12:53.797 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 09:12:53.814 febs [RMI TCP Connection(6)-192.168.1.113] INFO  p6spy - 2020-08-10 09:12:53 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 09:12:53.817 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-08-10 09:12:54.581 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 09:12:54.607 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597021969512 started.
2020-08-10 09:12:54.616 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:13:00.052 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:13:00.095 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T09:13:00.052+0800');
2020-08-10 09:13:09.613 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 09:13:09.614 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597021859308"'s failed in-progress jobs.
2020-08-10 09:13:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:13:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:13:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:13:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:13:10.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:13:10.103 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：83 毫秒
2020-08-10 09:13:10.107 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 83, '2020-08-10T09:13:10.020+0800');
2020-08-10 09:13:18.618 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:14:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:14:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:14:00.014+0800');
2020-08-10 09:14:10.013 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:14:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:14:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:14:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 09:14:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T09:14:10.013+0800');
2020-08-10 09:14:18.616 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:14:44.915 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:0E66E2902AD53C9F1BF79098B278379E
2020-08-10 09:14:47.604 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:14:47 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 09:14:47.686 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:14:47 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 09:14:47.698 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:14:47 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 09:14:48.175 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:14:48.302 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T09:14:48.294+0800' WHERE (USERNAME = 'admin');
2020-08-10 09:14:48.314 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 09:14:48.317 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:14:48.320 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:14:48.327 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 09:14:48.330 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:14:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 09:14:50.907 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 17 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:14:50.921 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 2 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:14:50.926 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:14:50.930 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:14:50.935 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:14:50.941 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:15:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:15:00.019 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:15:00.014+0800');
2020-08-10 09:15:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:15:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:15:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:15:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:15:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 09:15:10.050 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T09:15:10.011+0800');
2020-08-10 09:15:16.683 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:15:16 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:15:18.061 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:15:18.069 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:15:18.075 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:15:18.083 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:15:18.089 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:15:18.094 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:15:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:15:18.618 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:16:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:16:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:16:00.023+0800');
2020-08-10 09:16:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:16:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:16:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:16:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:16:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:16:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T09:16:10.020+0800');
2020-08-10 09:16:18.622 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:17:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:17:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 09:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:17:00.022+0800');
2020-08-10 09:17:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:17:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:17:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:17:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:17:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:17:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 09:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T09:17:10.021+0800');
2020-08-10 09:17:18.622 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:18:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:18:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 09:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:18:00.024+0800');
2020-08-10 09:18:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:18:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:18:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:18:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:18:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:18:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 09:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T09:18:10.019+0800');
2020-08-10 09:18:18.625 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:19:00.050 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:19:00.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 09:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:19:00.050+0800');
2020-08-10 09:19:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:19:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:19:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:19:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:19:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 09:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T09:19:10.019+0800');
2020-08-10 09:19:18.627 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:20:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:20:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:20:00.022+0800');
2020-08-10 09:20:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:20:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:20:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:20:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:20:10.054 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 09:20:10.057 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T09:20:10.019+0800');
2020-08-10 09:20:18.629 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:21:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:21:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 09:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:21:00.024+0800');
2020-08-10 09:21:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:21:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:21:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:21:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:21:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 09:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:21:10.020+0800');
2020-08-10 09:21:18.631 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:22:00.048 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:22:00.052 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 09:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:22:00.048+0800');
2020-08-10 09:22:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:22:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:22:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:22:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:22:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 09:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:22:10.021+0800');
2020-08-10 09:22:18.635 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:23:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:23:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:23:00.025+0800');
2020-08-10 09:23:10.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:23:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:23:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:23:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:23:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 09:23:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T09:23:10.009+0800');
2020-08-10 09:23:18.636 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:24:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:24:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:24:00.023+0800');
2020-08-10 09:24:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:24:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:24:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:24:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:24:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:24:10.018+0800');
2020-08-10 09:24:18.639 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:25:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:25:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:25:00.024+0800');
2020-08-10 09:25:10.012 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:25:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:25:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:25:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:25:10.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:25:10.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T09:25:10.011+0800');
2020-08-10 09:25:18.642 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:26:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:26:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:26:00.021+0800');
2020-08-10 09:26:10.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:26:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:26:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:26:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:26:10.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:26:10.044 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:26:10.016+0800');
2020-08-10 09:26:18.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:27:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:27:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 09:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:27:00.023+0800');
2020-08-10 09:27:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:27:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:27:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:27:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:27:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 09:27:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 09:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T09:27:10.016+0800');
2020-08-10 09:27:18.647 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:28:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:28:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 09:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:28:00.020+0800');
2020-08-10 09:28:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:28:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:28:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:28:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:28:10.035 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:28:10.037 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 09:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:28:10.010+0800');
2020-08-10 09:28:18.651 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:29:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:29:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 09:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:29:00.023+0800');
2020-08-10 09:29:10.015 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:29:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:29:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:29:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:29:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:29:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 09:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:29:10.015+0800');
2020-08-10 09:29:18.653 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:30:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:30:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:30:00.022+0800');
2020-08-10 09:30:08.302 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:30:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 09:30:08.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:30:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 09:30:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:30:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:30:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:30:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:30:10.033 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 09:30:10.036 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T09:30:10.009+0800');
2020-08-10 09:30:18.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:30:23.797 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:30:23.801 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:30:23.805 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:30:23.808 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:30:23.810 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:30:23.813 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:30:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:31:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:31:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 09:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:31:00.021+0800');
2020-08-10 09:31:10.012 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:31:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:31:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:31:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:31:10.035 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-10 09:31:10.038 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 09:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-10T09:31:10.012+0800');
2020-08-10 09:31:18.660 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:32:00.023 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:32:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 09:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:32:00.023+0800');
2020-08-10 09:32:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:32:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:32:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:32:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:32:10.037 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:32:10.040 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 09:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T09:32:10.009+0800');
2020-08-10 09:32:18.665 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:33:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:33:00.017 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:33:00.013+0800');
2020-08-10 09:33:03.651 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:33:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:33:08.331 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:33:08.336 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:33:08.340 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:33:08.343 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:33:08.345 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:33:08.348 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:33:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:33:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:33:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:33:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:33:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:33:10.034 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 09:33:10.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T09:33:10.010+0800');
2020-08-10 09:33:18.666 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597021969512_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:33:58.507 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 21448 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 09:33:58.512 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 09:34:00.167 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 09:34:00.170 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 09:34:00.235 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-08-10 09:34:00.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b5b64f46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c27de75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$302055a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e4d5a6af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3dda8a2e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9aa4961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:34:01.634 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 09:34:01.651 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 09:34:01.660 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 09:34:01.661 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 09:34:01.668 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 09:34:01.791 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 09:34:01.791 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3207 ms
2020-08-10 09:34:02.211 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 09:34:02.220 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 09:34:02.781 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 09:34:02.781 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 09:34:02.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 09:34:02.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 09:34:03.373 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 09:34:05.668 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 09:34:05.709 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 09:34:05.724 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 09:34:05.724 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 09:34:05.729 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 09:34:05.732 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 09:34:05.733 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597023245711'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 09:34:05.733 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 09:34:05.733 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 09:34:05.735 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5c552f08
2020-08-10 09:34:05.840 febs [main] INFO  p6spy - 2020-08-10 09:34:05 | 耗时 11 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 09:34:08.013 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 09:34:08.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 09:34:08.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 09:34:08.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4446a191, org.springframework.security.web.context.SecurityContextPersistenceFilter@352d3749, org.springframework.security.web.header.HeaderWriterFilter@51eeae0a, org.springframework.security.web.authentication.logout.LogoutFilter@6894436e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4110ffe5, org.springframework.security.web.session.ConcurrentSessionFilter@1f4fa465, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5935eb9c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fe337, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4981b83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ef812b, org.springframework.security.web.session.SessionManagementFilter@55589ef5, org.springframework.security.web.access.ExceptionTranslationFilter@1d77d9c6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c7f8c25]
2020-08-10 09:34:08.465 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 09:34:08.485 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 09:34:08.487 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 09:34:08.950 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 09:34:09.790 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 09:34:09.808 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 09:34:09.883 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 09:34:09.909 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 09:34:09.923 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 09:34:09.957 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 09:34:09.962 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.223 seconds (JVM running for 14.292)
2020-08-10 09:34:09.989 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 09:34:09.989 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 09:34:09.989 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 09:34:09.989 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 09:34:09.989 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 09:34:10.604 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 09:34:10.604 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 09:34:10.620 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-10 09:34:10.620 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 09:34:10 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 09:34:10.910 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 09:34:10.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 09:34:10.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597021969512"'s failed in-progress jobs.
2020-08-10 09:34:10.933 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-10 09:34:10.981 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023245711 started.
2020-08-10 09:34:10.989 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023245711_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:34:11.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:34:11.110 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:34:11 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-10T09:34:11.040+0800');
2020-08-10 09:34:21.460 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6D0EC2409D75E14B227CE0A3F4A1ECA8
2020-08-10 09:34:24.625 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:34:24 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 09:34:24.726 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:34:24 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 09:34:24.741 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:34:24 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 09:34:25.231 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:34:25.427 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T09:34:25.379+0800' WHERE (USERNAME = 'admin');
2020-08-10 09:34:25.453 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 09:34:25.457 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:34:25.462 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:34:25.470 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 09:34:25.475 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:34:25 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 09:34:28.587 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:34:28 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:34:28.603 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:34:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:35:20.404 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:35:20.412 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:35:20.416 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:35:20.420 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:35:20.451 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:35:20.459 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:35:20.451+0800');
2020-08-10 09:35:20.486 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:35:20.496 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023245711 paused.
2020-08-10 09:35:20.505 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:35:20.510 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 09:35:20.514 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 09:35:20.514 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023245711 shutting down.
2020-08-10 09:35:20.514 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023245711 paused.
2020-08-10 09:35:20.515 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023245711 shutdown complete.
2020-08-10 09:35:20.522 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:35:20.524 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 09:35:20.524 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 09:35:20.536 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:35:20 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:35:20.539 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-10 09:35:20.660 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 09:35:27.650 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 12832 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 09:35:27.655 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 09:35:29.364 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 09:35:29.366 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 09:35:29.433 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-10 09:35:30.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2a83f0c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0f57fef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a4edf71e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$59a34829] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@726a8729' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7e77eadb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 09:35:30.835 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 09:35:30.852 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 09:35:30.861 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 09:35:30.861 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 09:35:30.868 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 09:35:30.997 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 09:35:30.997 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3264 ms
2020-08-10 09:35:31.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 09:35:31.459 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 09:35:32.026 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 09:35:32.027 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 09:35:32.027 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 09:35:32.027 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 09:35:32.653 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 09:35:34.895 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 09:35:34.931 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 09:35:34.945 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 09:35:34.945 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 09:35:34.950 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 09:35:34.952 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 09:35:34.952 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597023334933'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 09:35:34.953 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 09:35:34.953 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 09:35:34.954 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@517d9cd5
2020-08-10 09:35:35.040 febs [main] INFO  p6spy - 2020-08-10 09:35:35 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 09:35:37.118 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 09:35:37.417 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 09:35:37.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 09:35:37.501 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d5fc340, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d5fea64, org.springframework.security.web.header.HeaderWriterFilter@53086bdc, org.springframework.security.web.authentication.logout.LogoutFilter@4cc28ad0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30f99ca1, org.springframework.security.web.session.ConcurrentSessionFilter@5cef5fc9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@155767a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d0acb8f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6f70015, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@613f48de, org.springframework.security.web.session.SessionManagementFilter@600a1270, org.springframework.security.web.access.ExceptionTranslationFilter@75d61b62, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ef4a8fb]
2020-08-10 09:35:37.558 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 09:35:37.578 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 09:35:37.579 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 09:35:38.038 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 09:35:38.858 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 09:35:38.876 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 09:35:38.950 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 09:35:38.974 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 09:35:38.988 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 09:35:39.024 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 09:35:39.029 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.378 seconds (JVM running for 13.636)
2020-08-10 09:35:39.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 09:35:39.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 09:35:39.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 09:35:39.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 09:35:39.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 09:35:39.257 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 09:35:39.257 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 09:35:39.273 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-10 09:35:39.613 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-10 09:35:39 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-10 09:35:39.975 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 09:35:39.987 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023334933 started.
2020-08-10 09:35:39.992 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:35:46.355 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:19B0FE70990A1456DFF9A738FF7E06CE
2020-08-10 09:35:50.696 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:35:50 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 09:35:50.802 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:35:50 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 09:35:50.818 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:35:50 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 09:35:51.318 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:35:51.511 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T09:35:51.453+0800' WHERE (USERNAME = 'admin');
2020-08-10 09:35:51.535 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 09:35:51.539 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:35:51.544 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 09:35:51.551 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 09:35:51.556 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:35:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 09:35:54.990 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 09:35:54.990 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597023245711"'s failed in-progress jobs.
2020-08-10 09:35:54.995 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Cleaned-up 1 other failed job(s).
2020-08-10 09:35:55.928 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:35:55 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:35:55.944 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:35:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:36:09.942 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:36:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:36:16.038 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:36:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:36:19.202 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:36:19.207 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:36:19.214 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:36:19.239 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-10T09:36:19.214+0800');
2020-08-10 09:36:19.239 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:36:19.257 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:36:19.274 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:36:19.309 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:36:19.313 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：74 毫秒
2020-08-10 09:36:19.322 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:36:19 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 74, '2020-08-10T09:36:19.239+0800');
2020-08-10 09:36:31.192 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:37:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:37:00.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:37:00.027+0800');
2020-08-10 09:37:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:37:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:37:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:37:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:37:10.060 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-10 09:37:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-10T09:37:10.012+0800');
2020-08-10 09:37:11.821 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:37:11 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:37:12.542 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:37:12.549 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:37:12.555 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:37:12.560 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:37:12.565 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:37:12.571 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:37:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:37:19.194 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:37:47.844 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:37:47.850 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:37:47.854 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:37:47.860 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:37:47.864 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:37:47.868 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:37:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:38:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:38:00.030 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:38:00.023+0800');
2020-08-10 09:38:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:38:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:38:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:38:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:38:10.059 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 09:38:10.064 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T09:38:10.021+0800');
2020-08-10 09:38:19.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:38:48.240 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:38:48.947 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:38:48.954 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:38:48.958 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:38:48.963 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:38:48.967 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:38:48.973 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:39:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:39:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:39:00.023+0800');
2020-08-10 09:39:02.472 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 09:39:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 09:39:03.200 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:39:03.205 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 09:39:03.209 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 09:39:03.214 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 09:39:03.217 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 09:39:03.221 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:39:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 09:39:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:39:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:39:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:39:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:39:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 09:39:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T09:39:10.010+0800');
2020-08-10 09:39:19.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:40:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:40:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 09:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:40:00.024+0800');
2020-08-10 09:40:07.775 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:40:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-10 09:40:07.791 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:40:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-10 09:40:07.798 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:40:07 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-10 09:40:07.800 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:40:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-10 09:40:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:40:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:40:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:40:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:40:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-10 09:40:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 09:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-10T09:40:10.009+0800');
2020-08-10 09:40:15.970 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:40:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 09:40:15.975 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:40:15 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 09:40:15.975 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:40:15 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 09:40:16.916 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:40:16 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 09:40:19.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:40:19.562 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:40:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 09:40:19.564 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 09:40:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 09:41:00.048 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:41:00.053 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 09:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:41:00.048+0800');
2020-08-10 09:41:10.023 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:41:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:41:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:41:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:41:10.052 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:41:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 09:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T09:41:10.023+0800');
2020-08-10 09:41:19.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:42:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:42:00.033 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 09:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:42:00.026+0800');
2020-08-10 09:42:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:42:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:42:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:42:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 09:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T09:42:10.017+0800');
2020-08-10 09:42:19.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:42:42.327 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 22;
2020-08-10 09:42:42.375 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 35 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 22);
2020-08-10 09:42:42.378 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 09:42:42.384 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-10 09:42:42.387 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-10 09:42:42.394 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 22 AND myequipment_id = 1);
2020-08-10 09:42:42.398 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 22 AND myequipment_id = 2);
2020-08-10 09:42:42.401 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 09:42:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 22 AND myequipment_id = 3);
2020-08-10 09:42:54.052 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:42:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:42:54.054 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:42:54 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-10 09:43:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:43:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:43:00.021+0800');
2020-08-10 09:43:10.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:43:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:43:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:43:10.053 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 09:43:10.057 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T09:43:10.023+0800');
2020-08-10 09:43:19.210 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:43:53.237 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 09:43:53 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-10 09:43:53.237 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 09:43:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:44:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:44:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 09:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:44:00.021+0800');
2020-08-10 09:44:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:44:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:44:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:44:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:44:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 09:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T09:44:10.019+0800');
2020-08-10 09:44:19.211 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:44:33.755 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:44:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 09:44:33.758 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 09:44:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 09:44:35.868 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 09:44:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 1;
2020-08-10 09:45:00.023 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:45:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 09:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T09:45:00.023+0800');
2020-08-10 09:45:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:45:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:45:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 09:45:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 09:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T09:45:10.016+0800');
2020-08-10 09:45:19.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:46:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:46:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:46:00.024+0800');
2020-08-10 09:46:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:46:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:46:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:46:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:46:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T09:46:10.021+0800');
2020-08-10 09:46:19.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:47:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:47:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:47:00.022+0800');
2020-08-10 09:47:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:47:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:47:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:47:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:47:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T09:47:10.019+0800');
2020-08-10 09:47:19.218 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:47:28.430 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 09:47:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 22;
2020-08-10 09:47:28.474 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 09:47:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 09:48:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:48:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:48:00.021+0800');
2020-08-10 09:48:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:48:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:48:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:48:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:48:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T09:48:10.018+0800');
2020-08-10 09:48:19.222 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:49:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:49:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:49:00.024+0800');
2020-08-10 09:49:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:49:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:49:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:49:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T09:49:10.019+0800');
2020-08-10 09:49:19.224 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:50:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:50:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 09:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:50:00.023+0800');
2020-08-10 09:50:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:50:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:50:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:50:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:50:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 09:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T09:50:10.021+0800');
2020-08-10 09:50:19.228 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:51:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:51:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 09:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:51:00.021+0800');
2020-08-10 09:51:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:51:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:51:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:51:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:51:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 09:51:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 09:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T09:51:10.019+0800');
2020-08-10 09:51:19.230 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:52:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:52:00.019 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 09:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:52:00.013+0800');
2020-08-10 09:52:10.012 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:52:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:52:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:52:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:52:10.038 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:52:10.041 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 09:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:52:10.012+0800');
2020-08-10 09:52:19.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:53:00.047 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:53:00.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 09:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:53:00.047+0800');
2020-08-10 09:53:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:53:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:53:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:53:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:53:10.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 09:53:10.035 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 09:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T09:53:10.007+0800');
2020-08-10 09:53:19.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:54:00.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:54:00.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 09:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:54:00.046+0800');
2020-08-10 09:54:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:54:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:54:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:54:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:54:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 09:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T09:54:10.019+0800');
2020-08-10 09:54:19.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:55:00.049 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:55:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 09:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:55:00.049+0800');
2020-08-10 09:55:10.048 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:55:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:55:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:55:10.076 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 09:55:10.078 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 09:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T09:55:10.048+0800');
2020-08-10 09:55:19.239 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:56:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:56:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 09:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:56:00.023+0800');
2020-08-10 09:56:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:56:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:56:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:56:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:56:10.050 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:56:10.053 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 09:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:56:10.024+0800');
2020-08-10 09:56:19.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:57:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:57:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 09:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T09:57:00.014+0800');
2020-08-10 09:57:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:57:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:57:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:57:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:57:10.075 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:57:10.078 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 09:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T09:57:10.046+0800');
2020-08-10 09:57:19.243 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:58:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:58:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 09:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:58:00.021+0800');
2020-08-10 09:58:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:58:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:58:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:58:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 09:58:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 09:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T09:58:10.016+0800');
2020-08-10 09:58:17.340 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 09:59:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 09:59:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 09:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T09:59:00.022+0800');
2020-08-10 09:59:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 09:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 09:59:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 09:59:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 09:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 09:59:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 09:59:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 09:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T09:59:10.018+0800');
2020-08-10 09:59:17.343 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:00:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:00:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:00:00.022+0800');
2020-08-10 10:00:10.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:00:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:00:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:00:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:00:10.051 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:00:10.022+0800');
2020-08-10 10:00:17.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:01:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:01:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:01:00.020+0800');
2020-08-10 10:01:07.993 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 10:01:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:01:09.056 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:01:09.059 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:01:09.063 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:01:09.067 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:01:09.070 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:01:09.073 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:01:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:01:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:01:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:01:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:01:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:01:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T10:01:10.017+0800');
2020-08-10 10:01:17.349 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:01:23.078 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:01:23.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:01:23.846 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:01:23.850 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:01:23.854 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:01:23.857 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:01:23.861 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:01:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:02:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:02:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:02:00.020+0800');
2020-08-10 10:02:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:02:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:02:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 10:02:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T10:02:10.017+0800');
2020-08-10 10:02:17.351 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:02:33.347 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 10:02:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:02:34.071 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:02:34.074 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:02:34.077 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:02:34.080 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:02:34.083 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:02:34.087 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:02:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:03:00.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:03:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:03:00.017+0800');
2020-08-10 10:03:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:03:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:03:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:03:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:03:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 10:03:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T10:03:10.021+0800');
2020-08-10 10:03:17.354 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:03:18.107 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:03:18.111 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:03:18.115 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:03:18.119 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:03:18.122 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:03:18.125 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 10:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:03:40.911 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:03:40.915 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:03:40.920 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:03:40.924 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:03:40.929 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:03:40.932 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:03:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:03:55.725 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:03:55.730 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:03:55.733 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:03:55.737 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:03:55.740 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:03:55.743 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 10:03:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:04:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:04:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:04:00.021+0800');
2020-08-10 10:04:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:04:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:04:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:04:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:04:10.084 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-08-10 10:04:10.088 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:04:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 64, '2020-08-10T10:04:10.020+0800');
2020-08-10 10:04:17.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:04:30.699 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:04:30 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:04:31.715 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:04:31.719 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:04:31.723 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:04:31.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:04:31.730 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:04:31.734 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:04:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:05:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:05:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 10:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:05:00.018+0800');
2020-08-10 10:05:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:05:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:05:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:05:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:05:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:05:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 10:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T10:05:10.017+0800');
2020-08-10 10:05:17.360 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:06:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:06:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:06:00.018+0800');
2020-08-10 10:06:10.040 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:06:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:06:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:06:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:06:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:06:10.069 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T10:06:10.040+0800');
2020-08-10 10:06:17.361 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:07:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:07:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:07:00.021+0800');
2020-08-10 10:07:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:07:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:07:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:07:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:07:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 10:07:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T10:07:10.016+0800');
2020-08-10 10:07:17.364 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:08:00.015 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:08:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:08:00.015+0800');
2020-08-10 10:08:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:08:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:08:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:08:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:08:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:08:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T10:08:10.020+0800');
2020-08-10 10:08:17.367 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:09:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:09:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:09:00.019+0800');
2020-08-10 10:09:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:09:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:09:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:09:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 10:09:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T10:09:10.018+0800');
2020-08-10 10:09:17.370 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:09:48.569 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 10:09:48 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 10:10:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:10:00.033 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:10:00.024+0800');
2020-08-10 10:10:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:10:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:10:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 10:10:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T10:10:10.016+0800');
2020-08-10 10:10:17.371 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597023334933_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:10:26.141 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 10:10:26 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 388, MENU_NAME = '污染项排名', URL = '/rank/myequipment/rank', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T10:10:26.126+0800' WHERE MENU_ID = 393;
2020-08-10 10:10:26.178 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 10:10:26 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 10:10:26.203 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 10:10:26 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 22, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=393, parentId=388, menuName=污染项排名, url=/rank/myequipment/rank, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 10:10:26 CST 2020)"', '192.168.1.113', '2020-08-10T10:10:26.176+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 10:10:31.194 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 10:10:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:10:31.221 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 10:10:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 10:10:33.086 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023334933 paused.
2020-08-10 10:10:33.096 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 10:10:33.099 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 10:10:33.099 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023334933 shutting down.
2020-08-10 10:10:33.099 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023334933 paused.
2020-08-10 10:10:33.101 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597023334933 shutdown complete.
2020-08-10 10:10:33.106 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 10:10:33.106 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 10:10:33.109 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 10:10:36.213 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13544 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 10:10:36.217 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 10:10:37.873 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 10:10:37.875 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 10:10:37.945 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-10 10:10:38.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.789 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6ad1b78f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.804 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14346be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e53bbded] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$99f10ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5fd18419' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bec5b1aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:38.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 10:10:39.372 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 10:10:39.388 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 10:10:39.398 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 10:10:39.398 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 10:10:39.406 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 10:10:39.530 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 10:10:39.530 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3239 ms
2020-08-10 10:10:39.955 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 10:10:39.964 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 10:10:40.516 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 10:10:40.516 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 10:10:40.516 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 10:10:40.516 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 10:10:41.095 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 10:10:43.303 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 10:10:43.344 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 10:10:43.357 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 10:10:43.357 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 10:10:43.361 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 10:10:43.363 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 10:10:43.364 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597025443345'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 10:10:43.364 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 10:10:43.364 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 10:10:43.366 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@35451ba6
2020-08-10 10:10:43.466 febs [main] INFO  p6spy - 2020-08-10 10:10:43 | 耗时 11 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 10:10:45.586 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 10:10:45.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 10:10:45.881 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 10:10:45.966 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f408960, org.springframework.security.web.context.SecurityContextPersistenceFilter@85b9f9c, org.springframework.security.web.header.HeaderWriterFilter@594965c9, org.springframework.security.web.authentication.logout.LogoutFilter@360e4235, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@580c4c0b, org.springframework.security.web.session.ConcurrentSessionFilter@14764fdd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b6a4da7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@edb8f0c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5bc44d78, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1516f497, org.springframework.security.web.session.SessionManagementFilter@78839c2e, org.springframework.security.web.access.ExceptionTranslationFilter@52b77d5e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ced7cf]
2020-08-10 10:10:46.025 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 10:10:46.044 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 10:10:46.046 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 10:10:46.493 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 10:10:47.317 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 10:10:47.334 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 10:10:47.403 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 10:10:47.428 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 10:10:47.442 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 10:10:47.476 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 10:10:47.480 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.121 seconds (JVM running for 13.445)
2020-08-10 10:10:47.506 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 10:10:47.506 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 10:10:47.506 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 10:10:47.506 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 10:10:47.506 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 10:10:48.117 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 10:10:48.118 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 10:10:48.135 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 10:10:48 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 10:10:48.135 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-10 10:10:48.430 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 10:10:48.451 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597025443345 started.
2020-08-10 10:10:48.458 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:10:56.718 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B1754CB21FDC58624AC5CEE23256B2F2
2020-08-10 10:10:59.568 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 10:10:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 10:10:59.666 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 10:10:59 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 10:10:59.682 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 10:10:59 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 10:11:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:11:00.068 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-10T10:11:00.042+0800');
2020-08-10 10:11:00.116 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 10:11:00.306 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T10:11:00.248+0800' WHERE (USERNAME = 'admin');
2020-08-10 10:11:00.329 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 10:11:00.333 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 10:11:00.340 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 10:11:00.347 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 10:11:00.352 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 10:11:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 10:11:03.227 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 10:11:03.241 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 10:11:03.247 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 10:11:03.254 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 10:11:03.259 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 10:11:03.264 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 10:11:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 10:11:03.456 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 10:11:03.456 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597023334933"'s failed in-progress jobs.
2020-08-10 10:11:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:11:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:11:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:11:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:11:10.076 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-10 10:11:10.080 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-08-10T10:11:10.020+0800');
2020-08-10 10:11:12.459 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:12:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:12:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:12:00.024+0800');
2020-08-10 10:12:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:12:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:12:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:12:10.075 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-10 10:12:10.080 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-10T10:12:10.017+0800');
2020-08-10 10:12:12.462 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:13:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:13:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:13:00.014+0800');
2020-08-10 10:13:10.012 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:13:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:13:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:13:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:13:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 10:13:10.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T10:13:10.012+0800');
2020-08-10 10:13:12.464 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:14:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:14:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:14:00.023+0800');
2020-08-10 10:14:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:14:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:14:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:14:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 10:14:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-10T10:14:10.010+0800');
2020-08-10 10:14:12.467 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:15:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:15:00.033 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T10:15:00.024+0800');
2020-08-10 10:15:10.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:15:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:15:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:15:10.098 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:15:10.116 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：106 毫秒
2020-08-10 10:15:10.129 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 106, '2020-08-10T10:15:10.010+0800');
2020-08-10 10:15:12.472 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:16:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:16:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:16:00.011+0800');
2020-08-10 10:16:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:16:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:16:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:16:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:16:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 10:16:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T10:16:10.009+0800');
2020-08-10 10:16:12.472 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:17:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:17:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:17:00.021+0800');
2020-08-10 10:17:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:17:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:17:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:17:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:17:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 10:17:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T10:17:10.009+0800');
2020-08-10 10:17:12.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:18:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:18:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:18:00.021+0800');
2020-08-10 10:18:10.013 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:18:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:18:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:18:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:18:10.078 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：65 毫秒
2020-08-10 10:18:10.084 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 65, '2020-08-10T10:18:10.013+0800');
2020-08-10 10:18:12.496 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:19:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:19:00.026 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:19:00.020+0800');
2020-08-10 10:19:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:19:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:19:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:19:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:19:10.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 10:19:10.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T10:19:10.008+0800');
2020-08-10 10:19:12.500 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:20:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:20:00.018 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 10:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:20:00.012+0800');
2020-08-10 10:20:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:20:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:20:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:20:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:20:10.039 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 10:20:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 10:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T10:20:10.009+0800');
2020-08-10 10:20:12.502 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:21:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:21:00.028 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:21:00.023+0800');
2020-08-10 10:21:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:21:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:21:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:21:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:21:10.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:21:10.052 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T10:21:10.020+0800');
2020-08-10 10:21:12.502 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:22:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:22:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:22:00.022+0800');
2020-08-10 10:22:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:22:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:22:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:22:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:22:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T10:22:10.017+0800');
2020-08-10 10:22:12.505 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:23:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:23:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:23:00.011+0800');
2020-08-10 10:23:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:23:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:23:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:23:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:23:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 10:23:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T10:23:10.017+0800');
2020-08-10 10:23:12.508 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:24:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:24:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:24:00.020+0800');
2020-08-10 10:24:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:24:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:24:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:24:10.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 10:24:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T10:24:10.020+0800');
2020-08-10 10:24:12.510 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:25:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:25:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:25:00.023+0800');
2020-08-10 10:25:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:25:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:25:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:25:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 10:25:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T10:25:10.018+0800');
2020-08-10 10:25:12.515 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:26:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:26:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:26:00.020+0800');
2020-08-10 10:26:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:26:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:26:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:26:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:26:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 10:26:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-10T10:26:10.009+0800');
2020-08-10 10:26:12.519 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:27:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:27:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:27:00.020+0800');
2020-08-10 10:27:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:27:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:27:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:27:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:27:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T10:27:10.018+0800');
2020-08-10 10:27:12.521 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:28:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:28:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:28:00.020+0800');
2020-08-10 10:28:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:28:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:28:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:28:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:28:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:28:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:28:10.017+0800');
2020-08-10 10:28:12.522 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:29:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:29:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:29:00.021+0800');
2020-08-10 10:29:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:29:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:29:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:29:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:29:10.077 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 10:29:10.080 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T10:29:10.042+0800');
2020-08-10 10:29:12.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:30:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:30:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 10:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:30:00.020+0800');
2020-08-10 10:30:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:30:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:30:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:30:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:30:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 10:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T10:30:10.018+0800');
2020-08-10 10:30:12.526 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:31:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:31:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:31:00.019+0800');
2020-08-10 10:31:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:31:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:31:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:31:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:31:10.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T10:31:10.018+0800');
2020-08-10 10:31:12.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:32:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:32:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:32:00.023+0800');
2020-08-10 10:32:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:32:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:32:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:32:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 10:32:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T10:32:10.017+0800');
2020-08-10 10:32:12.532 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:33:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:33:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:33:00.021+0800');
2020-08-10 10:33:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:33:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:33:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:33:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T10:33:10.018+0800');
2020-08-10 10:33:12.533 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:34:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:34:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:34:00.021+0800');
2020-08-10 10:34:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:34:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:34:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:34:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:34:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:34:10.018+0800');
2020-08-10 10:34:12.550 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:35:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:35:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:35:00.022+0800');
2020-08-10 10:35:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:35:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:35:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:35:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 10:35:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T10:35:10.019+0800');
2020-08-10 10:35:12.547 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:36:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:36:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:36:00.022+0800');
2020-08-10 10:36:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:36:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:36:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:36:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:36:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 10:36:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T10:36:10.018+0800');
2020-08-10 10:36:12.551 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:37:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:37:00.018 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:37:00.013+0800');
2020-08-10 10:37:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:37:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:37:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 10:37:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T10:37:10.019+0800');
2020-08-10 10:37:12.555 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:38:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:38:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:38:00.020+0800');
2020-08-10 10:38:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:38:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:38:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:38:10.021+0800');
2020-08-10 10:38:12.557 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:39:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:39:00.017 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:39:00.012+0800');
2020-08-10 10:39:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:39:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:39:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:39:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:39:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:39:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T10:39:10.017+0800');
2020-08-10 10:39:12.560 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:40:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:40:00.016 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 10:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:40:00.012+0800');
2020-08-10 10:40:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:40:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:40:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:40:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:40:10.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:40:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 10:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:40:10.008+0800');
2020-08-10 10:40:12.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:41:00.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:41:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:41:00.017+0800');
2020-08-10 10:41:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:41:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:41:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:41:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:41:10.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T10:41:10.017+0800');
2020-08-10 10:41:12.566 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:41:41.335 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:33DA5C03CB34B7AF2903E35C8E2BA4F0
2020-08-10 10:42:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:42:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:42:00.013+0800');
2020-08-10 10:42:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:42:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:42:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:42:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:42:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T10:42:10.020+0800');
2020-08-10 10:42:12.567 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:42:22.320 febs [http-nio-8099-exec-8] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E43B03DFF8325EBF178EC11793E0863B
2020-08-10 10:43:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:43:00.019 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:43:00.013+0800');
2020-08-10 10:43:10.015 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:43:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:43:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:43:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 10:43:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T10:43:10.015+0800');
2020-08-10 10:43:12.574 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:44:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:44:00.016 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:44:00.011+0800');
2020-08-10 10:44:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:44:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:44:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:44:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:44:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:44:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:44:10.017+0800');
2020-08-10 10:44:12.572 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:45:00.013 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:45:00.017 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:45:00.013+0800');
2020-08-10 10:45:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:45:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:45:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:45:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T10:45:10.017+0800');
2020-08-10 10:45:12.577 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:46:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:46:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:46:00.011+0800');
2020-08-10 10:46:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:46:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:46:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 10:46:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T10:46:10.016+0800');
2020-08-10 10:46:12.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:47:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:47:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:47:00.021+0800');
2020-08-10 10:47:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:47:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:47:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:47:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:47:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 10:47:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T10:47:10.017+0800');
2020-08-10 10:47:12.582 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:48:00.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:48:00.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:48:00.045+0800');
2020-08-10 10:48:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:48:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:48:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:48:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T10:48:10.019+0800');
2020-08-10 10:48:12.585 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:49:00.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:49:00.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:49:00.044+0800');
2020-08-10 10:49:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:49:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:49:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:49:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:49:10.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T10:49:10.017+0800');
2020-08-10 10:49:12.588 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:50:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:50:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 10:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:50:00.021+0800');
2020-08-10 10:50:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:50:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:50:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:50:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 10:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T10:50:10.018+0800');
2020-08-10 10:50:12.590 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:51:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:51:00.018 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 10:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:51:00.012+0800');
2020-08-10 10:51:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:51:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:51:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:51:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:51:10.037 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:51:10.040 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 10:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T10:51:10.010+0800');
2020-08-10 10:51:12.592 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:52:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:52:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 10:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:52:00.022+0800');
2020-08-10 10:52:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:52:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:52:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:52:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 10:52:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 10:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T10:52:10.016+0800');
2020-08-10 10:52:12.595 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:53:00.073 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:53:00.077 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 10:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:53:00.073+0800');
2020-08-10 10:53:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:53:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:53:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:53:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:53:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 10:53:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 10:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T10:53:10.009+0800');
2020-08-10 10:53:12.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:54:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:54:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 10:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:54:00.021+0800');
2020-08-10 10:54:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:54:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:54:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:54:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:54:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 10:54:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 10:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T10:54:10.019+0800');
2020-08-10 10:54:12.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:55:00.110 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:55:00.131 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 10:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:55:00.110+0800');
2020-08-10 10:55:05.995 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:49B7F40BCDE31771CE19A3E5EA273C84
2020-08-10 10:55:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:55:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:55:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:55:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 10:55:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 10:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T10:55:10.017+0800');
2020-08-10 10:55:12.611 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:56:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:56:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 10:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:56:00.021+0800');
2020-08-10 10:56:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:56:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:56:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:56:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 10:56:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 10:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T10:56:10.017+0800');
2020-08-10 10:56:12.612 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:57:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:57:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 10:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T10:57:00.019+0800');
2020-08-10 10:57:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:57:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:57:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:57:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 10:57:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 10:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T10:57:10.020+0800');
2020-08-10 10:57:12.619 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:58:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:58:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 10:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:58:00.021+0800');
2020-08-10 10:58:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:58:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:58:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 10:58:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 10:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T10:58:10.018+0800');
2020-08-10 10:58:12.619 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 10:59:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 10:59:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 10:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T10:59:00.021+0800');
2020-08-10 10:59:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 10:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 10:59:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 10:59:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 10:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 10:59:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 10:59:10.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 10:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T10:59:10.017+0800');
2020-08-10 10:59:12.623 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:00:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:00:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:00:00.010+0800');
2020-08-10 11:00:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:00:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:00:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:00:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:00:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:00:10.019+0800');
2020-08-10 11:00:12.624 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:01:00.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:01:00.014 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:01:00.010+0800');
2020-08-10 11:01:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:01:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:01:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:01:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:01:10.017+0800');
2020-08-10 11:01:12.628 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:02:00.034 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:02:00.039 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:02:00.034+0800');
2020-08-10 11:02:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:02:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:02:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:02:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:02:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T11:02:10.017+0800');
2020-08-10 11:02:12.629 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:03:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:03:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:03:00.021+0800');
2020-08-10 11:03:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:03:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:03:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:03:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:03:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:03:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:03:10.018+0800');
2020-08-10 11:03:12.629 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:04:00.033 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:04:00.039 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:04:00.033+0800');
2020-08-10 11:04:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:04:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:04:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:04:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:04:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:04:10.020+0800');
2020-08-10 11:04:12.633 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:05:00.050 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:05:00.055 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:05:00.050+0800');
2020-08-10 11:05:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:05:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:05:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:05:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:05:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:05:10.020+0800');
2020-08-10 11:05:12.634 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:06:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:06:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:06:00.020+0800');
2020-08-10 11:06:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:06:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:06:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:06:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:06:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:06:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T11:06:10.016+0800');
2020-08-10 11:06:12.638 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:07:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:07:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:07:00.020+0800');
2020-08-10 11:07:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:07:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:07:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 11:07:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T11:07:10.018+0800');
2020-08-10 11:07:12.642 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:08:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:08:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:08:00.020+0800');
2020-08-10 11:08:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:08:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:08:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:08:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:08:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:08:10.016+0800');
2020-08-10 11:08:12.645 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:09:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:09:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:09:00.020+0800');
2020-08-10 11:09:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:09:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:09:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:09:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:09:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:09:10.020+0800');
2020-08-10 11:09:12.647 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:10:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:10:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:10:00.021+0800');
2020-08-10 11:10:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:10:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:10:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:10:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:10:10.054 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 11:10:10.058 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-10T11:10:10.017+0800');
2020-08-10 11:10:12.649 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:11:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:11:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:11:00.022+0800');
2020-08-10 11:11:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:11:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:11:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:11:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:11:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 11:11:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T11:11:10.017+0800');
2020-08-10 11:11:12.652 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:12:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:12:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:12:00.022+0800');
2020-08-10 11:12:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:12:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:12:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:12:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:12:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:12:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T11:12:10.019+0800');
2020-08-10 11:12:12.654 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:12:41.542 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:E43B03DFF8325EBF178EC11793E0863B
2020-08-10 11:13:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:13:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:13:00.022+0800');
2020-08-10 11:13:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:13:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:13:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:13:10.074 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 11:13:10.077 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T11:13:10.042+0800');
2020-08-10 11:13:12.657 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:14:00.046 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:14:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:14:00.046+0800');
2020-08-10 11:14:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:14:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:14:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:14:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:14:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:14:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T11:14:10.020+0800');
2020-08-10 11:14:12.660 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:15:00.013 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:15:00.018 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:15:00.013+0800');
2020-08-10 11:15:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:15:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:15:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:15:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:15:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:15:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:15:10.017+0800');
2020-08-10 11:15:12.664 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:16:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:16:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:16:00.022+0800');
2020-08-10 11:16:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:16:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:16:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:16:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:16:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 11:16:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T11:16:10.009+0800');
2020-08-10 11:16:12.668 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:17:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:17:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:17:00.020+0800');
2020-08-10 11:17:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:17:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:17:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:17:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:17:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:17:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T11:17:10.017+0800');
2020-08-10 11:17:12.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:18:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:18:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:18:00.021+0800');
2020-08-10 11:18:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:18:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:18:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:18:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:18:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:18:10.017+0800');
2020-08-10 11:18:12.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:19:00.013 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:19:00.020 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:19:00.013+0800');
2020-08-10 11:19:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:19:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:19:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:19:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:19:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:19:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:19:10.019+0800');
2020-08-10 11:19:12.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:20:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:20:00.029 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:20:00.024+0800');
2020-08-10 11:20:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:20:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:20:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:20:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:20:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:20:10.037 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T11:20:10.009+0800');
2020-08-10 11:20:12.678 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:21:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:21:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:21:00.020+0800');
2020-08-10 11:21:10.006 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:21:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:21:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:21:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:21:10.032 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:21:10.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:21:10.006+0800');
2020-08-10 11:21:12.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:22:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:22:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:22:00.021+0800');
2020-08-10 11:22:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:22:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:22:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:22:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:22:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 11:22:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T11:22:10.009+0800');
2020-08-10 11:22:12.684 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:23:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:23:00.017 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:23:00.013+0800');
2020-08-10 11:23:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:23:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:23:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:23:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:23:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:23:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:23:10.018+0800');
2020-08-10 11:23:12.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:24:00.046 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:24:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:24:00.046+0800');
2020-08-10 11:24:10.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:24:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:24:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:24:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:24:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 11:24:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T11:24:10.007+0800');
2020-08-10 11:24:12.691 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:25:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:25:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:25:00.022+0800');
2020-08-10 11:25:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:25:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:25:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:25:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:25:10.035 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 11:25:10.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T11:25:10.007+0800');
2020-08-10 11:25:12.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:25:41.614 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:49B7F40BCDE31771CE19A3E5EA273C84
2020-08-10 11:26:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:26:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:26:00.021+0800');
2020-08-10 11:26:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:26:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:26:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:26:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:26:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:26:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:26:10.017+0800');
2020-08-10 11:26:12.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:27:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:27:00.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:27:00.045+0800');
2020-08-10 11:27:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:27:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:27:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:27:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:27:10.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:27:10.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:27:10.009+0800');
2020-08-10 11:27:12.697 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:28:00.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:28:00.015 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:28:00.011+0800');
2020-08-10 11:28:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:28:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:28:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:28:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:28:10.054 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 11:28:10.057 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T11:28:10.019+0800');
2020-08-10 11:28:12.702 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:29:00.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:29:00.051 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:29:00.047+0800');
2020-08-10 11:29:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:29:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:29:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:29:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:29:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:29:10.018+0800');
2020-08-10 11:29:12.704 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:30:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:30:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:30:00.021+0800');
2020-08-10 11:30:10.025 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:30:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:30:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:30:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:30:10.051 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:30:10.054 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:30:10.025+0800');
2020-08-10 11:30:12.708 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:31:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:31:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:31:00.020+0800');
2020-08-10 11:31:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:31:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:31:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:31:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:31:10.021+0800');
2020-08-10 11:31:12.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:32:00.012 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:32:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:32:00.012+0800');
2020-08-10 11:32:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:32:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:32:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:32:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:32:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:32:10.045 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:32:10.017+0800');
2020-08-10 11:32:12.712 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:33:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:33:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:33:00.020+0800');
2020-08-10 11:33:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:33:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:33:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:33:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:33:10.018+0800');
2020-08-10 11:33:12.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:34:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:34:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:34:00.020+0800');
2020-08-10 11:34:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:34:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:34:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:34:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:34:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:34:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T11:34:10.017+0800');
2020-08-10 11:34:12.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:35:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:35:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:35:00.021+0800');
2020-08-10 11:35:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:35:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:35:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:35:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:35:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:35:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:35:10.016+0800');
2020-08-10 11:35:12.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:36:00.013 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:36:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:36:00.013+0800');
2020-08-10 11:36:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:36:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:36:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:36:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:36:10.035 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:36:10.038 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T11:36:10.010+0800');
2020-08-10 11:36:12.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:37:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:37:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:37:00.020+0800');
2020-08-10 11:37:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:37:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:37:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:37:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:37:10.018+0800');
2020-08-10 11:37:12.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:38:00.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:38:00.016 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:38:00.011+0800');
2020-08-10 11:38:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:38:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:38:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:38:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:38:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T11:38:10.017+0800');
2020-08-10 11:38:12.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:39:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:39:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:39:00.022+0800');
2020-08-10 11:39:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:39:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:39:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:39:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:39:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T11:39:10.016+0800');
2020-08-10 11:39:12.733 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:40:00.014 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:40:00.020 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:40:00.014+0800');
2020-08-10 11:40:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:40:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:40:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:40:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:40:10.052 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 11:40:10.055 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T11:40:10.023+0800');
2020-08-10 11:40:12.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:41:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:41:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:41:00.024+0800');
2020-08-10 11:41:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:41:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:41:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:41:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:41:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:41:10.019+0800');
2020-08-10 11:41:12.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:42:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:42:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:42:00.011+0800');
2020-08-10 11:42:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:42:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:42:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:42:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 11:42:10.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T11:42:10.019+0800');
2020-08-10 11:42:12.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:43:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:43:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:43:00.020+0800');
2020-08-10 11:43:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:43:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:43:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:43:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 11:43:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T11:43:10.019+0800');
2020-08-10 11:43:12.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:44:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:44:00.019 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:44:00.014+0800');
2020-08-10 11:44:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:44:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:44:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:44:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:44:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:44:10.017+0800');
2020-08-10 11:44:12.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:45:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:45:00.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:45:00.046+0800');
2020-08-10 11:45:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:45:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:45:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:45:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:45:10.018+0800');
2020-08-10 11:45:12.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:46:00.046 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:46:00.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:46:00.046+0800');
2020-08-10 11:46:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:46:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:46:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:46:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:46:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T11:46:10.020+0800');
2020-08-10 11:46:12.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:47:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:47:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:47:00.021+0800');
2020-08-10 11:47:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:47:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:47:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:47:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:47:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:47:10.019+0800');
2020-08-10 11:47:12.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:48:00.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:48:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:48:00.018+0800');
2020-08-10 11:48:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:48:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:48:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:48:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T11:48:10.018+0800');
2020-08-10 11:48:12.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:49:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:49:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:49:00.021+0800');
2020-08-10 11:49:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:49:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:49:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:49:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 11:49:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T11:49:10.016+0800');
2020-08-10 11:49:12.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:50:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:50:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 11:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:50:00.019+0800');
2020-08-10 11:50:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:50:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:50:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:50:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:50:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 11:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:50:10.016+0800');
2020-08-10 11:50:12.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:51:00.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:51:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 11:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:51:00.011+0800');
2020-08-10 11:51:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:51:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:51:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:51:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:51:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:51:10.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 11:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:51:10.007+0800');
2020-08-10 11:51:12.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:52:00.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:52:00.050 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 11:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:52:00.046+0800');
2020-08-10 11:52:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:52:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:52:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:52:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:52:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 11:52:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 11:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T11:52:10.016+0800');
2020-08-10 11:52:12.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:53:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:53:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 11:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:53:00.019+0800');
2020-08-10 11:53:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:53:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:53:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:53:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:53:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:53:10.071 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 11:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T11:53:10.042+0800');
2020-08-10 11:53:12.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:54:00.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:54:00.049 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 11:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:54:00.045+0800');
2020-08-10 11:54:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:54:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:54:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:54:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 11:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:54:10.017+0800');
2020-08-10 11:54:12.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:55:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:55:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 11:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:55:00.020+0800');
2020-08-10 11:55:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:55:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:55:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:55:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:55:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 11:55:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 11:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T11:55:10.018+0800');
2020-08-10 11:55:12.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:56:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:56:00.018 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 11:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:56:00.012+0800');
2020-08-10 11:56:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:56:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:56:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 11:56:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 11:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T11:56:10.019+0800');
2020-08-10 11:56:12.776 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:57:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:57:00.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 11:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:57:00.045+0800');
2020-08-10 11:57:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:57:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:57:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:57:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:57:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 11:57:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 11:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T11:57:10.016+0800');
2020-08-10 11:57:12.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:58:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:58:00.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 11:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T11:58:00.044+0800');
2020-08-10 11:58:10.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:58:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:58:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:58:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 11:58:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 11:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T11:58:10.015+0800');
2020-08-10 11:58:12.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 11:59:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 11:59:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 11:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T11:59:00.020+0800');
2020-08-10 11:59:10.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 11:59:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 11:59:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 11:59:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 11:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 11:59:10.039 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 11:59:10.042 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 11:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T11:59:10.011+0800');
2020-08-10 11:59:12.785 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:00:00.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:00:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 12:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:00:00.011+0800');
2020-08-10 12:00:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:00:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:00:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:00:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 12:00:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 12:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T12:00:10.020+0800');
2020-08-10 12:00:12.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:01:00.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:01:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 12:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:01:00.011+0800');
2020-08-10 12:01:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:01:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:01:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:01:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 12:01:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 12:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T12:01:10.019+0800');
2020-08-10 12:01:12.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:02:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:02:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 12:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:02:00.022+0800');
2020-08-10 12:02:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:02:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:02:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:02:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:02:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 12:02:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 12:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T12:02:10.019+0800');
2020-08-10 12:02:12.792 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:03:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:03:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 12:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T12:03:00.012+0800');
2020-08-10 12:03:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:03:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:03:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:03:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:03:10.035 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:03:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 12:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T12:03:10.009+0800');
2020-08-10 12:03:12.794 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:04:00.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:04:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 12:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:04:00.047+0800');
2020-08-10 12:04:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:04:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:04:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:04:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:04:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 12:04:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 12:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T12:04:10.019+0800');
2020-08-10 12:04:12.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:05:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:05:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 12:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T12:05:00.020+0800');
2020-08-10 12:05:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:05:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:05:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:05:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:05:10.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:05:10.074 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 12:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T12:05:10.045+0800');
2020-08-10 12:05:12.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:06:00.047 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:06:00.051 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 12:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:06:00.047+0800');
2020-08-10 12:06:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:06:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:06:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:06:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:06:10.069 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 12:06:10.071 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 12:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T12:06:10.042+0800');
2020-08-10 12:06:12.803 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:07:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:07:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 12:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:07:00.022+0800');
2020-08-10 12:07:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:07:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:07:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:07:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:07:10.071 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:07:10.074 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 12:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T12:07:10.045+0800');
2020-08-10 12:07:12.806 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:08:00.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:08:00.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 12:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T12:08:00.046+0800');
2020-08-10 12:08:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:08:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:08:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:08:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:08:10.070 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 12:08:10.073 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 12:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T12:08:10.045+0800');
2020-08-10 12:08:12.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:09:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:09:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 12:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:09:00.020+0800');
2020-08-10 12:09:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:09:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:09:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:09:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 12:09:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 12:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T12:09:10.018+0800');
2020-08-10 12:09:12.811 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:10:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:10:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 12:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:10:00.021+0800');
2020-08-10 12:10:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:10:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:10:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:10:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:10:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 12:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T12:10:10.020+0800');
2020-08-10 12:10:12.815 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:11:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:11:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 12:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:11:00.013+0800');
2020-08-10 12:11:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:11:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:11:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:11:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 12:11:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 12:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T12:11:10.020+0800');
2020-08-10 12:11:12.817 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:12:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:12:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 12:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:12:00.019+0800');
2020-08-10 12:12:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:12:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:12:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:12:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:12:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:12:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 12:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T12:12:10.019+0800');
2020-08-10 12:12:12.820 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:13:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:13:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 12:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:13:00.020+0800');
2020-08-10 12:13:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:13:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:13:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:13:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 12:13:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 12:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T12:13:10.019+0800');
2020-08-10 12:13:12.821 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:14:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:14:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 12:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:14:00.023+0800');
2020-08-10 12:14:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:14:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:14:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:14:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 12:14:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 12:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T12:14:10.020+0800');
2020-08-10 12:14:12.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 12:15:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 12:15:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 12:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T12:15:00.022+0800');
2020-08-10 12:15:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 12:15:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 12:15:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 12:15:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 12:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 12:15:10.072 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 12:15:10.074 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 12:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T12:15:10.045+0800');
2020-08-10 12:15:12.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:31:33.213 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:31:33.219 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 13:31:33 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:31:33.213+0800');
2020-08-10 13:31:34.028 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 13:31:34.089 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:32:00.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:32:00.021 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 13:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:32:00.013+0800');
2020-08-10 13:32:10.016 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:32:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:32:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:32:10.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 13:32:10.048 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 13:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T13:32:10.016+0800');
2020-08-10 13:32:10.092 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:33:00.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:33:00.028 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 13:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T13:33:00.021+0800');
2020-08-10 13:33:10.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:33:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:33:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:33:10.074 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-10 13:33:10.076 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 13:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-10T13:33:10.017+0800');
2020-08-10 13:33:10.094 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:34:00.027 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:34:00.033 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 13:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:34:00.027+0800');
2020-08-10 13:34:10.007 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:34:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:34:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:34:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:34:10.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-10 13:34:10.048 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 13:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-10T13:34:10.007+0800');
2020-08-10 13:34:10.098 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:35:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:35:00.024 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 13:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:35:00.020+0800');
2020-08-10 13:35:10.008 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:35:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:35:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:35:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:35:10.034 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 13:35:10.037 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 13:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T13:35:10.008+0800');
2020-08-10 13:35:10.101 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:36:00.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:36:00.054 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 13:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:36:00.049+0800');
2020-08-10 13:36:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:36:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:36:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:36:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:36:10.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 13:36:10.047 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 13:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T13:36:10.018+0800');
2020-08-10 13:36:10.103 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:37:00.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:37:00.027 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 13:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:37:00.023+0800');
2020-08-10 13:37:10.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:37:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:37:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:37:10.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 13:37:10.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 13:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T13:37:10.016+0800');
2020-08-10 13:37:10.106 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:38:00.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:38:00.026 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 13:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:38:00.021+0800');
2020-08-10 13:38:10.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:38:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:38:10.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 13:38:10.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 13:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T13:38:10.016+0800');
2020-08-10 13:38:10.108 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:39:00.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:39:00.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 13:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:39:00.044+0800');
2020-08-10 13:39:10.006 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:39:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:39:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:39:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:39:10.033 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 13:39:10.036 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 13:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T13:39:10.006+0800');
2020-08-10 13:39:10.110 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:40:00.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:40:00.025 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 13:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:40:00.021+0800');
2020-08-10 13:40:10.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:40:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:40:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:40:10.045 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 13:40:10.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 13:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T13:40:10.017+0800');
2020-08-10 13:40:10.115 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:41:00.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:41:00.024 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 13:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:41:00.020+0800');
2020-08-10 13:41:10.007 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:41:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:41:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:41:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:41:10.033 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 13:41:10.035 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 13:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T13:41:10.007+0800');
2020-08-10 13:41:10.115 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:42:00.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:42:00.024 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 13:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:42:00.020+0800');
2020-08-10 13:42:10.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:42:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:42:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:42:10.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 13:42:10.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 13:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T13:42:10.021+0800');
2020-08-10 13:42:10.116 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:43:00.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:43:00.029 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 13:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:43:00.023+0800');
2020-08-10 13:43:10.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:43:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:43:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:43:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:43:10.048 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 13:43:10.050 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 13:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T13:43:10.022+0800');
2020-08-10 13:43:10.121 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:44:00.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:44:00.026 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 13:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:44:00.023+0800');
2020-08-10 13:44:10.016 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:44:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:44:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:44:10.041 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 13:44:10.043 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 13:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T13:44:10.016+0800');
2020-08-10 13:44:10.124 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:45:00.024 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:45:00.028 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 13:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:45:00.024+0800');
2020-08-10 13:45:10.014 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:45:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:45:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:45:10.038 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 13:45:10.041 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 13:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T13:45:10.014+0800');
2020-08-10 13:45:10.126 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:46:00.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:46:00.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 13:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:46:00.045+0800');
2020-08-10 13:46:10.006 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:46:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:46:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:46:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:46:10.031 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 13:46:10.034 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 13:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T13:46:10.006+0800');
2020-08-10 13:46:10.129 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:47:00.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:47:00.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 13:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:47:00.047+0800');
2020-08-10 13:47:10.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:47:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:47:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:47:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:47:10.034 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 13:47:10.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 13:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T13:47:10.010+0800');
2020-08-10 13:47:10.132 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:48:00.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:48:00.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 13:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:48:00.049+0800');
2020-08-10 13:48:10.008 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:48:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:48:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:48:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:48:10.033 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 13:48:10.035 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 13:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T13:48:10.008+0800');
2020-08-10 13:48:10.135 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:49:00.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:49:00.028 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 13:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:49:00.024+0800');
2020-08-10 13:49:10.008 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:49:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:49:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:49:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:49:10.032 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 13:49:10.034 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 13:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T13:49:10.008+0800');
2020-08-10 13:49:10.136 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:50:00.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:50:00.025 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 13:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:50:00.020+0800');
2020-08-10 13:50:10.008 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:50:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:50:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:50:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:50:10.032 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 13:50:10.035 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 13:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T13:50:10.008+0800');
2020-08-10 13:50:10.141 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:51:00.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:51:00.027 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 13:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:51:00.022+0800');
2020-08-10 13:51:10.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:51:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:51:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:51:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:51:10.036 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 13:51:10.039 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 13:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T13:51:10.008+0800');
2020-08-10 13:51:10.152 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:52:00.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:52:00.024 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 13:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:52:00.019+0800');
2020-08-10 13:52:10.008 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:52:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:52:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:52:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:52:10.036 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 13:52:10.039 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 13:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T13:52:10.008+0800');
2020-08-10 13:52:10.154 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:53:00.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:53:00.024 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 13:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:53:00.020+0800');
2020-08-10 13:53:10.010 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:53:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:53:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:53:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:53:10.034 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 13:53:10.037 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 13:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T13:53:10.010+0800');
2020-08-10 13:53:10.165 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:54:00.026 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:54:00.030 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 13:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:54:00.026+0800');
2020-08-10 13:54:10.006 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:54:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:54:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:54:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:54:10.034 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 13:54:10.036 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 13:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T13:54:10.006+0800');
2020-08-10 13:54:10.167 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:54:43.554 febs [main] INFO  c.c.m.pcController.TestController - Starting TestController on LAPTOP-R0RM3FEG with PID 15784 (started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 13:54:43.555 febs [main] INFO  c.c.m.pcController.TestController - The following profiles are active: pro
2020-08-10 13:54:46.346 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 13:54:46.351 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 13:54:46.473 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85ms. Found 0 repository interfaces.
2020-08-10 13:54:47.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:47.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$17f0690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$97f095bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$7be90cee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$309e5df9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ae590f6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$557300ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:48.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:54:49.236 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2020-08-10 13:54:49.258 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:54:49.273 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 13:54:49.273 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 13:54:49.299 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 13:54:49.493 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 13:54:49.494 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5918 ms
2020-08-10 13:54:50.204 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 13:54:50.230 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 13:54:51.061 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 13:54:51.061 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 13:54:51.061 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 13:54:51.061 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 13:54:52.282 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 13:54:55.755 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 13:54:55.831 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 13:54:55.858 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 13:54:55.858 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 13:54:55.866 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 13:54:55.870 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 13:54:55.872 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597038895835'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 13:54:55.872 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 13:54:55.872 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 13:54:55.875 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3ddac0b6
2020-08-10 13:54:56.037 febs [main] INFO  p6spy - 2020-08-10 13:54:56 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 13:54:58.170 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:54:58.949 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 13:54:59.493 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 13:54:59.494 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 13:54:59.716 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59d29065, org.springframework.security.web.context.SecurityContextPersistenceFilter@516155b5, org.springframework.security.web.header.HeaderWriterFilter@7cadf3ca, org.springframework.security.web.authentication.logout.LogoutFilter@1e160a9e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@210e2f2f, org.springframework.security.web.session.ConcurrentSessionFilter@2cb53bfc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44428583, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a7437d8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7267006e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a13ad55, org.springframework.security.web.session.SessionManagementFilter@737445ab, org.springframework.security.web.access.ExceptionTranslationFilter@229d508c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15a0f9]
2020-08-10 13:54:59.835 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 13:54:59.843 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 13:54:59.859 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:55:00.030 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:55:00.037 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 13:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:55:00.030+0800');
2020-08-10 13:55:00.828 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 13:55:01.993 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:55:01.993 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:55:02.014 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 21 ms
2020-08-10 13:55:02.329 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 13:55:02.364 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 13:55:02.467 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 13:55:02.500 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 13:55:02.522 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:55:02.569 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 58581 (http) with context path ''
2020-08-10 13:55:02.574 febs [main] INFO  c.c.m.pcController.TestController - Started TestController in 19.857 seconds (JVM running for 21.567)
2020-08-10 13:55:02.625 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 13:55:02.625 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 13:55:02.625 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 13:55:02.625 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 13:55:02.625 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:0/login
2020-08-10 13:55:02.954 febs [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:55:02.955 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:55:02.955 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2020-08-10 13:55:03.058 febs [Thread-7] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:55:03.062 febs [Thread-7] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 13:55:03.063 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038895835 shutting down.
2020-08-10 13:55:03.063 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038895835 paused.
2020-08-10 13:55:03.064 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038895835 shutdown complete.
2020-08-10 13:55:03.072 febs [Thread-7] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 13:55:03.073 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 13:55:03.083 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 13:55:10.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:55:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:55:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:55:10.041 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 13:55:10.044 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 13:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T13:55:10.016+0800');
2020-08-10 13:55:10.170 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:56:00.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:56:00.023 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 13:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:56:00.018+0800');
2020-08-10 13:56:10.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:56:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:56:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:56:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:56:10.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 13:56:10.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 13:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-10T13:56:10.010+0800');
2020-08-10 13:56:10.171 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:56:11.139 febs [main] INFO  c.c.m.pcController.TestController - Starting TestController on LAPTOP-R0RM3FEG with PID 23436 (started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 13:56:11.140 febs [main] INFO  c.c.m.pcController.TestController - The following profiles are active: pro
2020-08-10 13:56:13.585 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 13:56:13.590 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 13:56:13.698 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85ms. Found 0 repository interfaces.
2020-08-10 13:56:14.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2f215e77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.191 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c592eda6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.265 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a98b64d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5e40b5e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.391 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ab63838' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$83155892] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:15.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:16.441 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2020-08-10 13:56:16.466 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:56:16.481 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 13:56:16.481 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 13:56:16.501 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 13:56:16.702 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 13:56:16.702 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5519 ms
2020-08-10 13:56:17.443 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 13:56:17.469 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 13:56:18.201 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 13:56:18.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 13:56:18.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 13:56:18.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 13:56:19.430 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 13:56:22.750 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 13:56:22.829 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 13:56:22.854 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 13:56:22.854 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 13:56:22.860 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 13:56:22.865 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 13:56:22.866 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597038982832'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 13:56:22.866 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 13:56:22.866 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 13:56:22.869 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2f112ade
2020-08-10 13:56:23.024 febs [main] INFO  p6spy - 2020-08-10 13:56:23 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 13:56:25.570 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 13:56:26.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 13:56:26.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 13:56:26.069 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 13:56:26.069 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 13:56:26.069 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 13:56:26.306 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43e2b8da, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a14ab66, org.springframework.security.web.header.HeaderWriterFilter@265c0752, org.springframework.security.web.authentication.logout.LogoutFilter@7ce760af, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@237c8718, org.springframework.security.web.session.ConcurrentSessionFilter@1a7437d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ac83e67, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a11efe6, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@59bbf82e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ac68548, org.springframework.security.web.session.SessionManagementFilter@7a75183d, org.springframework.security.web.access.ExceptionTranslationFilter@516155b5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d2baa56]
2020-08-10 13:56:26.421 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 13:56:26.430 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 13:56:26.442 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:56:27.388 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 13:56:28.528 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:56:28.528 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:56:28.554 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 25 ms
2020-08-10 13:56:28.923 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 13:56:28.958 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 13:56:29.063 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 13:56:29.098 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 13:56:29.116 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:56:29.166 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 58611 (http) with context path ''
2020-08-10 13:56:29.172 febs [main] INFO  c.c.m.pcController.TestController - Started TestController in 18.949 seconds (JVM running for 20.239)
2020-08-10 13:56:29.225 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 13:56:29.226 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 13:56:29.226 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 13:56:29.226 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 13:56:29.226 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:0/login
2020-08-10 13:56:29.503 febs [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:56:29.503 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:56:29.503 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2020-08-10 13:56:29.591 febs [Thread-7] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:56:29.597 febs [Thread-7] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 13:56:29.597 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038982832 shutting down.
2020-08-10 13:56:29.597 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038982832 paused.
2020-08-10 13:56:29.598 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597038982832 shutdown complete.
2020-08-10 13:56:29.606 febs [Thread-7] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 13:56:29.607 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 13:56:29.616 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 13:56:34.172 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597025443345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:56:36.530 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597025443345 paused.
2020-08-10 13:56:36.550 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:56:36.555 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 13:56:36.555 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597025443345 shutting down.
2020-08-10 13:56:36.555 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597025443345 paused.
2020-08-10 13:56:36.557 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597025443345 shutdown complete.
2020-08-10 13:56:36.564 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 13:56:36.564 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 13:56:36.571 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 13:56:42.171 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 1192 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 13:56:42.174 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 13:56:43.976 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 13:56:43.978 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 13:56:44.066 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71ms. Found 0 repository interfaces.
2020-08-10 13:56:44.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:44.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4cf9786b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:44.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:44.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:44.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e36b079a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:44.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$c7637ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7c18cfd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b30eec5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a0ed7286] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:56:45.544 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 13:56:45.562 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 13:56:45.572 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 13:56:45.572 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 13:56:45.580 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 13:56:45.701 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 13:56:45.702 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3454 ms
2020-08-10 13:56:46.131 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 13:56:46.141 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 13:56:46.675 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 13:56:46.675 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 13:56:46.675 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 13:56:46.675 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 13:56:47.320 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 13:56:49.593 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 13:56:49.630 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 13:56:49.644 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 13:56:49.644 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 13:56:49.648 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 13:56:49.650 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 13:56:49.651 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597039009631'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 13:56:49.652 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 13:56:49.652 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 13:56:49.653 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@400d1c30
2020-08-10 13:56:49.752 febs [main] INFO  p6spy - 2020-08-10 13:56:49 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 13:56:51.975 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 13:56:52.308 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 13:56:52.309 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 13:56:52.309 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 13:56:52.309 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 13:56:52.309 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 13:56:52.309 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 13:56:52.391 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@701c413, org.springframework.security.web.context.SecurityContextPersistenceFilter@30bd6bc8, org.springframework.security.web.header.HeaderWriterFilter@1b1d93e9, org.springframework.security.web.authentication.logout.LogoutFilter@1a7f2d34, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25814d3c, org.springframework.security.web.session.ConcurrentSessionFilter@76d220eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@90b9695, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@59043128, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@427128a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28468162, org.springframework.security.web.session.SessionManagementFilter@4ccf1d3e, org.springframework.security.web.access.ExceptionTranslationFilter@299c86f0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@213c812a]
2020-08-10 13:56:52.451 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 13:56:52.470 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 13:56:52.472 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:56:52.956 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 13:56:53.778 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 13:56:53.799 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 13:56:53.881 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 13:56:53.911 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 13:56:53.926 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 13:56:53.965 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 13:56:53.968 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.7 seconds (JVM running for 14.015)
2020-08-10 13:56:53.999 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 13:56:54.001 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 13:56:54.001 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 13:56:54.001 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 13:56:54.001 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 13:56:54.359 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 13:56:54.359 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 13:56:54.376 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 13:56:54 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 13:56:54.379 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-08-10 13:56:54.912 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 13:56:54.920 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 13:56:54.920 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597025443345"'s failed in-progress jobs.
2020-08-10 13:56:54.926 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039009631 started.
2020-08-10 13:56:54.932 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:57:00.058 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:57:00.122 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 13:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T13:57:00.057+0800');
2020-08-10 13:57:03.772 febs [main] INFO  c.c.m.pcController.TestController - Starting TestController on LAPTOP-R0RM3FEG with PID 17380 (started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 13:57:03.773 febs [main] INFO  c.c.m.pcController.TestController - The following profiles are active: pro
2020-08-10 13:57:06.352 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 13:57:06.356 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 13:57:06.464 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86ms. Found 0 repository interfaces.
2020-08-10 13:57:07.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:07.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2f215e77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:07.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:07.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:07.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c592eda6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a98b64d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5e40b5e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e974b9e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$83155892] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:08.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 13:57:09.219 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2020-08-10 13:57:09.244 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:57:09.261 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 13:57:09.262 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 13:57:09.278 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 13:57:09.463 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 13:57:09.463 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5645 ms
2020-08-10 13:57:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:57:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:57:10.116 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:57:10.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:57:10.165 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：148 毫秒
2020-08-10 13:57:10.172 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 13:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 148, '2020-08-10T13:57:10.017+0800');
2020-08-10 13:57:10.230 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 13:57:10.260 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 13:57:11.037 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 13:57:11.037 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 13:57:11.037 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 13:57:11.038 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 13:57:12.214 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 13:57:15.633 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 13:57:15.721 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 13:57:15.746 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 13:57:15.746 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 13:57:15.753 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 13:57:15.757 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 13:57:15.758 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597039035724'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 13:57:15.759 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 13:57:15.759 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 13:57:15.761 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@788a0513
2020-08-10 13:57:15.914 febs [main] INFO  p6spy - 2020-08-10 13:57:15 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 13:57:18.665 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 13:57:18.933 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:57:19.217 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 13:57:19.217 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 13:57:19.217 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 13:57:19.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 13:57:19.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 13:57:19.439 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e84a52b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7cadf3ca, org.springframework.security.web.header.HeaderWriterFilter@31b7112d, org.springframework.security.web.authentication.logout.LogoutFilter@516155b5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@60e5eed0, org.springframework.security.web.session.ConcurrentSessionFilter@2cd2c764, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@737445ab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d114d27, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@411ae0d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40199d5e, org.springframework.security.web.session.SessionManagementFilter@1b5d1d9, org.springframework.security.web.access.ExceptionTranslationFilter@25e203e6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@446981a4]
2020-08-10 13:57:19.570 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 13:57:19.577 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 13:57:19.591 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:57:20.524 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 13:57:21.678 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:57:21.679 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:57:21.704 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 25 ms
2020-08-10 13:57:21.995 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 13:57:22.026 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 13:57:22.125 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 13:57:22.161 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 13:57:22.177 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2020-08-10 13:57:22.220 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 58674 (http) with context path ''
2020-08-10 13:57:22.227 febs [main] INFO  c.c.m.pcController.TestController - Started TestController in 19.37 seconds (JVM running for 20.929)
2020-08-10 13:57:22.272 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 13:57:22.272 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 13:57:22.272 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 13:57:22.272 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 13:57:22.272 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:0/login
2020-08-10 13:57:22.542 febs [main] INFO  o.s.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2020-08-10 13:57:22.543 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2020-08-10 13:57:22.545 febs [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2020-08-10 13:57:22.635 febs [Thread-7] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 13:57:22.640 febs [Thread-7] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 13:57:22.640 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039035724 shutting down.
2020-08-10 13:57:22.640 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039035724 paused.
2020-08-10 13:57:22.641 febs [Thread-7] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039035724 shutdown complete.
2020-08-10 13:57:22.649 febs [Thread-7] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 13:57:22.650 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 13:57:22.658 febs [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 13:58:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:58:00.057 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 13:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T13:58:00.045+0800');
2020-08-10 13:58:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:58:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:58:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:58:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:58:10.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 13:58:10.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 13:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-10T13:58:10.012+0800');
2020-08-10 13:58:10.067 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:5295D2DFE9B4A6E58BF427053DE5FDB2
2020-08-10 13:58:13.420 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 13:58:13 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 13:58:13.517 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 13:58:13 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 13:58:13.533 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 13:58:13 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 13:58:14.018 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 13:58:14.197 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T13:58:14.181+0800' WHERE (USERNAME = 'admin');
2020-08-10 13:58:14.219 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 13:58:14.224 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 13:58:14.227 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 13:58:14.234 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 13:58:14.240 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:58:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 13:58:18.934 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:58:21.262 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 13:58:21.287 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 10 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 13:58:21.293 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 13:58:21.299 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 13:58:21.304 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 13:58:21.309 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 13:58:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 13:59:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 13:59:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 13:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T13:59:00.025+0800');
2020-08-10 13:59:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 13:59:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 13:59:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 13:59:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 13:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 13:59:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 13:59:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 13:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T13:59:10.010+0800');
2020-08-10 13:59:11.814 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 13:59:11.860 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 13:59:11.865 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 13:59:11.870 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 13:59:11.875 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 13:59:11.879 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 13:59:11.883 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 13:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 13:59:18.938 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 13:59:23.579 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 13:59:23 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 14:00:00.028 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:00:00.034 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:00:00.028+0800');
2020-08-10 14:00:10.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:00:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:00:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:00:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:00:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 14:00:10.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-10T14:00:10.009+0800');
2020-08-10 14:00:18.938 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:01:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:01:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:01:00.023+0800');
2020-08-10 14:01:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:01:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:01:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:01:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:01:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 14:01:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T14:01:10.009+0800');
2020-08-10 14:01:18.940 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:02:00.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:02:00.055 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:02:00.050+0800');
2020-08-10 14:02:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:02:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:02:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:02:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:02:10.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:02:10.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T14:02:10.008+0800');
2020-08-10 14:02:18.941 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039009631_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:02:25.184 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039009631 paused.
2020-08-10 14:02:25.196 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:02:25.200 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:02:25.200 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039009631 shutting down.
2020-08-10 14:02:25.200 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039009631 paused.
2020-08-10 14:02:25.201 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039009631 shutdown complete.
2020-08-10 14:02:25.207 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:02:25.207 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:02:25.213 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:02:30.474 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6460 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:02:30.479 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:02:32.797 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:02:32.801 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:02:32.891 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68ms. Found 0 repository interfaces.
2020-08-10 14:02:33.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:33.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f9505ca2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:33.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:33.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:33.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8fc1ebd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:33.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$73ba6300] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.026 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$286fb40b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3d235635' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4d4456bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:02:34.491 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:02:34.509 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:02:34.519 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:02:34.520 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:02:34.528 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:02:34.658 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:02:34.658 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4090 ms
2020-08-10 14:02:35.148 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:02:35.158 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:02:35.665 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:02:35.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:02:35.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:02:35.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:02:36.290 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:02:38.595 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:02:38.633 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:02:38.647 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:02:38.647 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:02:38.652 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:02:38.654 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:02:38.655 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597039358634'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:02:38.655 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:02:38.655 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:02:38.657 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@160cf225
2020-08-10 14:02:38.743 febs [main] INFO  p6spy - 2020-08-10 14:02:38 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:02:41.119 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:02:41.454 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:02:41.454 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:02:41.454 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:02:41.454 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:02:41.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:02:41.559 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38d9c9c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f3fafca, org.springframework.security.web.header.HeaderWriterFilter@72fa021, org.springframework.security.web.authentication.logout.LogoutFilter@4d0e6424, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@65dafe50, org.springframework.security.web.session.ConcurrentSessionFilter@40f931ec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33b4c775, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44f88149, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@108d59b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a4388f1, org.springframework.security.web.session.SessionManagementFilter@7be9e9fc, org.springframework.security.web.access.ExceptionTranslationFilter@2cf97875, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48cc060d]
2020-08-10 14:02:41.630 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:02:41.653 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:02:41.655 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:02:42.133 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:02:42.984 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:02:43.004 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:02:43.078 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:02:43.102 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:02:43.118 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:02:43.152 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:02:43.156 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.029 seconds (JVM running for 15.124)
2020-08-10 14:02:43.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:02:43.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:02:43.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:02:43.185 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:02:43.185 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:02:43.607 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:02:43.607 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:02:43.626 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-10 14:02:44.104 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:02:44.128 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 14:02:44 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-10 14:02:44.136 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039358634 started.
2020-08-10 14:02:44.144 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039358634_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:02:45.108 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:59539A98F25DDDB4BD90210BA3BC8989
2020-08-10 14:02:48.058 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:02:48.163 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:02:48.178 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:02:48.604 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:02:48.789 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:02:48.733+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:02:48.815 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:02:48.820 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:02:48.824 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:02:48.833 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:02:48.837 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:02:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:02:50.951 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:02:50.967 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:02:50.973 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:02:50.980 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:02:50.986 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:02:50.990 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:02:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:02:52.619 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:02:52.627 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:02:52.633 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:02:52.639 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:02:52.644 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:02:52.648 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:02:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:02:57.300 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:02:57.306 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:02:57.311 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:02:57.316 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:02:57.321 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:02:57.326 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:02:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:02:59.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039358634_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:02:59.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039358634_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597039009631"'s failed in-progress jobs.
2020-08-10 14:03:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:03:00.061 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T14:03:00.042+0800');
2020-08-10 14:03:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:03:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:03:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:03:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:03:10.080 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-10 14:03:10.083 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-08-10T14:03:10.024+0800');
2020-08-10 14:03:20.140 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039358634_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:03:58.397 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:03:58.458 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:03:58.466 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:03:58.471 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:03:58.477 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:03:58.482 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:03:58.487 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:03:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:04:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:04:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:04:00.023+0800');
2020-08-10 14:04:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:04:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:04:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:04:10.052 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 14:04:10.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T14:04:10.018+0800');
2020-08-10 14:04:14.007 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:04:14.083 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:04:14.090 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:04:14.095 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:04:14.101 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:04:14.108 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:04:14.114 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:04:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:04:20.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039358634_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:05:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:05:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:05:00.022+0800');
2020-08-10 14:05:04.218 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039358634 paused.
2020-08-10 14:05:04.229 febs [Thread-33] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:05:04.233 febs [Thread-33] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:05:04.233 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039358634 shutting down.
2020-08-10 14:05:04.233 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039358634 paused.
2020-08-10 14:05:04.234 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039358634 shutdown complete.
2020-08-10 14:05:04.239 febs [Thread-33] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:05:04.239 febs [Thread-33] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:05:04.244 febs [Thread-33] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:05:11.555 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14580 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:05:11.560 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:05:13.244 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:05:13.246 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:05:13.314 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-10 14:05:13.964 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.144 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$93f54ea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a66ddd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e5f5507] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c314a612] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.265 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@56d822dc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e7e948c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:05:14.700 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:05:14.716 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:05:14.726 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:05:14.726 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:05:14.733 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:05:14.869 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:05:14.869 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3223 ms
2020-08-10 14:05:15.320 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:05:15.330 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:05:15.866 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:05:15.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:05:15.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:05:15.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:05:16.462 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:05:19.441 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:05:19.496 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:05:19.518 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:05:19.518 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:05:19.525 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:05:19.528 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:05:19.530 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597039519498'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:05:19.530 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:05:19.530 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:05:19.533 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@24a807a9
2020-08-10 14:05:19.668 febs [main] INFO  p6spy - 2020-08-10 14:05:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:05:21.917 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:05:22.222 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:05:22.223 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:05:22.224 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:05:22.313 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26b150cd, org.springframework.security.web.context.SecurityContextPersistenceFilter@1eda12b3, org.springframework.security.web.header.HeaderWriterFilter@5390862e, org.springframework.security.web.authentication.logout.LogoutFilter@308e465b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@24bc06dd, org.springframework.security.web.session.ConcurrentSessionFilter@489c15e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@193792e6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e6bd43b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@24d7c365, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62ff3028, org.springframework.security.web.session.SessionManagementFilter@22c0c0bc, org.springframework.security.web.access.ExceptionTranslationFilter@29088d3d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55bafbc1]
2020-08-10 14:05:22.374 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:05:22.395 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:05:22.397 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:05:22.894 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:05:23.712 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:05:23.729 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:05:23.815 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:05:23.839 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:05:23.854 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:05:23.889 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:05:23.893 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.277 seconds (JVM running for 14.445)
2020-08-10 14:05:23.923 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:05:23.923 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:05:23.923 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:05:23.923 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:05:23.923 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:05:24.343 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:05:24.343 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:05:24.358 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-10 14:05:24.683 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-10 14:05:24 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-10 14:05:24.841 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:05:24.852 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:05:24.852 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597039358634"'s failed in-progress jobs.
2020-08-10 14:05:24.870 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039519498 started.
2020-08-10 14:05:24.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:05:37.905 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:59E755F12A0188118FF0BDCE287C3531
2020-08-10 14:05:40.497 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:05:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:05:40.615 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:05:40 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:05:40.632 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:05:40 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:05:41.165 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:05:41.354 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:05:41.298+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:05:41.379 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:05:41.383 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:05:41.387 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:05:41.395 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:05:41.400 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:05:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:05:43.543 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:05:43.566 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:05:43.573 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:05:43.579 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:05:43.585 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:05:43.592 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:05:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:05:45.252 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:05:45.259 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:05:45.264 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:05:45.269 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:05:45.274 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:05:45.278 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:05:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:06:00.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:06:00.063 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T14:06:00.047+0800');
2020-08-10 14:06:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:06:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:06:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:06:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-10 14:06:10.070 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-10T14:06:10.012+0800');
2020-08-10 14:06:12.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:07:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:07:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:07:00.024+0800');
2020-08-10 14:07:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:07:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:07:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:07:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:07:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:07:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T14:07:10.012+0800');
2020-08-10 14:07:12.877 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:08:00.032 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:08:00.039 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:08:00.032+0800');
2020-08-10 14:08:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:08:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:08:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:08:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:08:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:08:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:08:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T14:08:10.010+0800');
2020-08-10 14:08:12.879 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:09:00.027 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:09:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:09:00.027+0800');
2020-08-10 14:09:10.013 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:09:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:09:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:09:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:09:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T14:09:10.013+0800');
2020-08-10 14:09:12.881 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:10:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:10:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:10:00.023+0800');
2020-08-10 14:10:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:10:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:10:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:10:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:10:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 14:10:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T14:10:10.008+0800');
2020-08-10 14:10:12.883 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:11:00.032 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:11:00.039 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:11:00.032+0800');
2020-08-10 14:11:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:11:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:11:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:11:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:11:10.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 14:11:10.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T14:11:10.010+0800');
2020-08-10 14:11:12.885 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:12:00.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:12:00.056 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 14:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:12:00.051+0800');
2020-08-10 14:12:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:12:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:12:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:12:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:12:10.038 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 14:12:10.041 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 14:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T14:12:10.009+0800');
2020-08-10 14:12:12.890 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:13:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:13:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 14:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T14:13:00.012+0800');
2020-08-10 14:13:10.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:13:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:13:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:13:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:13:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:13:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 14:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T14:13:10.010+0800');
2020-08-10 14:13:12.890 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:14:00.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:14:00.052 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 14:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:14:00.047+0800');
2020-08-10 14:14:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:14:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:14:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:14:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:14:10.037 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 14:14:10.040 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 14:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T14:14:10.008+0800');
2020-08-10 14:14:12.892 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597039519498_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:15:00.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:15:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 14:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T14:15:00.016+0800');
2020-08-10 14:15:03.452 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039519498 paused.
2020-08-10 14:15:03.468 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:15:03.473 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:15:03.473 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039519498 shutting down.
2020-08-10 14:15:03.473 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039519498 paused.
2020-08-10 14:15:03.474 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597039519498 shutdown complete.
2020-08-10 14:15:03.481 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:15:03.481 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:15:03.486 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:15:10.796 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6316 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:15:10.801 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:15:12.512 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:15:12.514 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:15:12.583 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-10 14:15:13.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8a96f3c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$210882f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$500fa23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b9b64b2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.558 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@a69f9d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$de8aede0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:13.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:15:14.059 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:15:14.078 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:15:14.088 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:15:14.088 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:15:14.097 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:15:14.226 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:15:14.226 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3341 ms
2020-08-10 14:15:14.714 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:15:14.725 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:15:15.282 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:15:15.283 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:15:15.283 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:15:15.283 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:15:15.896 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:15:18.206 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:15:18.246 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:15:18.261 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:15:18.261 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:15:18.267 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:15:18.269 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:15:18.270 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597040118248'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:15:18.270 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:15:18.270 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:15:18.272 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ec06e97
2020-08-10 14:15:18.365 febs [main] INFO  p6spy - 2020-08-10 14:15:18 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:15:20.577 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:15:20.906 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:15:20.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:15:21.000 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ac0cb64, org.springframework.security.web.context.SecurityContextPersistenceFilter@3fae357f, org.springframework.security.web.header.HeaderWriterFilter@4b1ad751, org.springframework.security.web.authentication.logout.LogoutFilter@3a22d69f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@62966c9f, org.springframework.security.web.session.ConcurrentSessionFilter@c22cf4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6956081d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3feb93a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6915351c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7be3a837, org.springframework.security.web.session.SessionManagementFilter@6da86e98, org.springframework.security.web.access.ExceptionTranslationFilter@562ec518, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f7f9d3f]
2020-08-10 14:15:21.064 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:15:21.082 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:15:21.084 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:15:21.552 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:15:22.405 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:15:22.425 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:15:22.514 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:15:22.543 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:15:22.558 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:15:22.593 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:15:22.598 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.71 seconds (JVM running for 13.85)
2020-08-10 14:15:22.629 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:15:22.630 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:15:22.630 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:15:22.630 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:15:22.630 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:15:23.226 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:15:23.226 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:15:23.250 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-10 14:15:23 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 14:15:23.253 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-08-10 14:15:23.553 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:15:23.567 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:15:23.567 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597039519498"'s failed in-progress jobs.
2020-08-10 14:15:23.586 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040118248 started.
2020-08-10 14:15:23.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040118248_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:15:32.983 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1FC849A7ADE0C566669198CEEA0D95C5
2020-08-10 14:15:36.082 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:15:36.179 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:15:36.193 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:15:36.720 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:15:36.907 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:15:36.854+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:15:36.930 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:15:36.936 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:15:36.940 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:15:36.948 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:15:36.954 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:15:36 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:15:56.930 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:15:56 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:15:56.993 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:56 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:15:57.014 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:15:57.020 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:15:57.029 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:15:57.036 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:15:57.041 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:15:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:16:00.037 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:16:00.052 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T14:16:00.037+0800');
2020-08-10 14:16:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:16:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:16:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:16:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:16:10.077 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-10 14:16:10.081 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 56, '2020-08-10T14:16:10.021+0800');
2020-08-10 14:16:11.593 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040118248_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:16:23.319 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:16:23.381 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:16:23.386 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:16:23.394 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:16:23.401 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:16:23.406 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:16:23.411 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:16:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:17:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:17:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:17:00.024+0800');
2020-08-10 14:17:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:17:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:17:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:17:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:17:10.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 14:17:10.062 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T14:17:10.023+0800');
2020-08-10 14:17:11.594 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040118248_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:18:00.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:18:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:18:00.029+0800');
2020-08-10 14:18:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:18:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:18:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:18:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:18:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 14:18:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T14:18:10.018+0800');
2020-08-10 14:18:11.597 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040118248_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:18:13.907 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040118248 paused.
2020-08-10 14:18:13.917 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:18:13.920 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:18:13.921 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040118248 shutting down.
2020-08-10 14:18:13.921 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040118248 paused.
2020-08-10 14:18:13.921 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040118248 shutdown complete.
2020-08-10 14:18:13.926 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:18:13.927 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:18:13.932 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:18:21.026 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7804 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:18:21.031 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:18:22.699 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:18:22.701 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:18:22.767 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-10 14:18:23.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$29a03d2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c011cc5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a40a438a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$58bf9495] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@46702c26' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7d943747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:23.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:18:24.224 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:18:24.240 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:18:24.250 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:18:24.250 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:18:24.258 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:18:24.377 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:18:24.377 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3264 ms
2020-08-10 14:18:24.802 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:18:24.812 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:18:25.310 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:18:25.310 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:18:25.310 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:18:25.311 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:18:25.878 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:18:28.149 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:18:28.192 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:18:28.208 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:18:28.208 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:18:28.212 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:18:28.214 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:18:28.215 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597040308193'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:18:28.216 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:18:28.216 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:18:28.217 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@180fb796
2020-08-10 14:18:28.303 febs [main] INFO  p6spy - 2020-08-10 14:18:28 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:18:30.469 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:18:30.786 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:18:30.787 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:18:30.876 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d0ce151, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b0d818d, org.springframework.security.web.header.HeaderWriterFilter@62f3ad90, org.springframework.security.web.authentication.logout.LogoutFilter@48619f15, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@134ec0f3, org.springframework.security.web.session.ConcurrentSessionFilter@7f6936cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@306c8e09, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15d68a50, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@491f3fb0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58a0f75b, org.springframework.security.web.session.SessionManagementFilter@6e6bd43b, org.springframework.security.web.access.ExceptionTranslationFilter@6fe33512, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@756030e2]
2020-08-10 14:18:30.938 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:18:30.957 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:18:30.959 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:18:31.452 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:18:32.359 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:18:32.383 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:18:32.524 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:18:32.572 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:18:32.596 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:18:32.642 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:18:32.648 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.572 seconds (JVM running for 13.74)
2020-08-10 14:18:32.689 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:18:32.689 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:18:32.689 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:18:32.689 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:18:32.689 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:18:32.822 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:18:32.822 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:18:32.844 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-10 14:18:32 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-10 14:18:32.847 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-08-10 14:18:33.573 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:18:33.585 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:18:33.585 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597040118248"'s failed in-progress jobs.
2020-08-10 14:18:33.592 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040308193 started.
2020-08-10 14:18:33.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040308193_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:18:33.892 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:32C7DB35A47DA4A472503F5AA4AB9DB0
2020-08-10 14:18:36.972 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:18:36 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:18:37.075 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:18:37.092 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:18:37.637 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:18:37.821 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:18:37.766+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:18:37.845 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:18:37.850 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:18:37.854 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:18:37.862 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:18:37.867 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:18:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:18:39.123 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:18:39.141 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:18:39.147 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:18:39.152 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:18:39.159 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:18:39.164 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:18:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:19:00.056 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:19:00.073 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T14:19:00.056+0800');
2020-08-10 14:19:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:19:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:19:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:19:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:19:10.082 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-10 14:19:10.086 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-08-10T14:19:10.026+0800');
2020-08-10 14:19:21.605 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040308193_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:20:00.029 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:20:00.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:20:00.029+0800');
2020-08-10 14:20:10.024 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:20:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:20:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:20:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:20:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 14:20:10.063 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T14:20:10.024+0800');
2020-08-10 14:20:21.604 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040308193_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:20:29.642 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040308193 paused.
2020-08-10 14:20:29.656 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:20:29.660 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:20:29.660 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040308193 shutting down.
2020-08-10 14:20:29.660 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040308193 paused.
2020-08-10 14:20:29.662 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040308193 shutdown complete.
2020-08-10 14:20:29.668 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:20:29.668 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:20:29.674 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:20:36.689 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11204 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:20:36.693 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:20:38.353 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:20:38.355 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:20:38.423 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-10 14:20:39.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1d3f29a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3b0b8d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$97a93001] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4c5e810c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.361 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2b6262bc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$713323be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:20:39.818 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:20:39.837 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:20:39.846 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:20:39.846 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:20:39.854 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:20:39.975 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:20:39.976 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3208 ms
2020-08-10 14:20:40.407 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:20:40.416 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:20:40.936 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:20:40.937 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:20:40.937 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:20:40.937 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:20:41.530 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:20:43.862 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:20:43.902 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:20:43.917 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:20:43.917 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:20:43.921 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:20:43.923 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:20:43.924 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597040443903'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:20:43.924 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:20:43.924 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:20:43.926 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@23cfdfa2
2020-08-10 14:20:44.013 febs [main] INFO  p6spy - 2020-08-10 14:20:44 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:20:46.164 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:20:46.692 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:20:46.692 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:20:46.693 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:20:46.694 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:20:46.694 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:20:46.694 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:20:46.871 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@53570fff, org.springframework.security.web.context.SecurityContextPersistenceFilter@682482ee, org.springframework.security.web.header.HeaderWriterFilter@69efdfd9, org.springframework.security.web.authentication.logout.LogoutFilter@732bb49d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c2a33af, org.springframework.security.web.session.ConcurrentSessionFilter@df5f657, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@175745fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55bafbc1, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@44ba9f25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e5df971, org.springframework.security.web.session.SessionManagementFilter@4a5c6b30, org.springframework.security.web.access.ExceptionTranslationFilter@5b01b3f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f2b1a2f]
2020-08-10 14:20:46.988 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:20:47.027 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:20:47.030 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:20:47.707 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:20:48.924 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:20:48.948 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:20:49.047 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:20:49.081 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:20:49.100 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:20:49.144 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:20:49.149 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.349 seconds (JVM running for 14.529)
2020-08-10 14:20:49.183 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:20:49.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:20:49.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:20:49.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:20:49.184 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:20:49.410 febs [http-nio-8099-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:20:49.411 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:20:49.427 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-10 14:20:49.501 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:86C8A142608B938CC95172ED6B685797
2020-08-10 14:20:49.503 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-10 14:20:49 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 14:20:50.084 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:20:50.095 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:20:50.095 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597040308193"'s failed in-progress jobs.
2020-08-10 14:20:50.110 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040443903 started.
2020-08-10 14:20:50.116 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040443903_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:20:52.123 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:20:52.225 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:20:52.241 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:20:52.785 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:20:52.982 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:20:52.928+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:20:52.997 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:52 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:20:53.002 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:53 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:20:53.006 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:53 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:20:53.013 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:53 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:20:53.019 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:20:53 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:20:54.208 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:20:54.225 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:20:54.232 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:20:54.238 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:20:54.245 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:20:54.250 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:20:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:21:00.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:21:00.063 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T14:21:00.045+0800');
2020-08-10 14:21:01.947 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040443903 paused.
2020-08-10 14:21:01.958 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:21:01.962 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 14:21:01.962 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040443903 shutting down.
2020-08-10 14:21:01.962 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040443903 paused.
2020-08-10 14:21:01.963 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040443903 shutdown complete.
2020-08-10 14:21:01.970 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 14:21:01.970 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 14:21:01.975 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 14:21:09.205 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17824 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 14:21:09.209 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 14:21:10.837 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 14:21:10.839 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 14:21:10.923 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67ms. Found 0 repository interfaces.
2020-08-10 14:21:11.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d6d3ab7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.797 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6d453aae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.846 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$513db1dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.897 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5f302e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48ae9e8b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2ac7a59a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:11.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 14:21:12.374 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 14:21:12.392 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 14:21:12.402 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 14:21:12.402 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 14:21:12.409 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 14:21:12.526 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 14:21:12.526 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3251 ms
2020-08-10 14:21:12.954 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 14:21:12.963 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 14:21:13.476 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 14:21:13.476 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 14:21:13.476 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 14:21:13.476 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 14:21:14.065 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 14:21:16.304 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 14:21:16.343 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 14:21:16.358 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 14:21:16.358 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 14:21:16.362 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 14:21:16.364 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 14:21:16.365 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597040476345'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 14:21:16.366 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 14:21:16.366 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 14:21:16.367 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@51a69e8f
2020-08-10 14:21:16.464 febs [main] INFO  p6spy - 2020-08-10 14:21:16 | 耗时 11 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 14:21:18.695 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 14:21:19.018 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 14:21:19.018 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 14:21:19.018 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:21:19.018 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 14:21:19.019 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 14:21:19.110 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40f931ec, org.springframework.security.web.context.SecurityContextPersistenceFilter@30f54522, org.springframework.security.web.header.HeaderWriterFilter@1dc28c66, org.springframework.security.web.authentication.logout.LogoutFilter@158cb50a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@452d6fd, org.springframework.security.web.session.ConcurrentSessionFilter@2cbae0f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43e9a8a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19877453, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@ccea4be, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@528ef230, org.springframework.security.web.session.SessionManagementFilter@7a25f8ee, org.springframework.security.web.access.ExceptionTranslationFilter@6d7d0946, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e864fa4]
2020-08-10 14:21:19.172 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 14:21:19.193 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 14:21:19.195 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 14:21:19.679 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 14:21:20.562 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 14:21:20.579 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 14:21:20.653 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 14:21:20.676 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 14:21:20.690 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 14:21:20.727 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 14:21:20.732 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.391 seconds (JVM running for 13.604)
2020-08-10 14:21:20.758 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 14:21:20.758 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 14:21:20.758 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 14:21:20.758 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 14:21:20.758 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 14:21:21.217 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 14:21:21.218 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 14:21:21.246 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 28 ms
2020-08-10 14:21:21.249 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 14:21:21 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-10 14:21:21.678 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 14:21:21.691 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 14:21:21.691 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597040443903"'s failed in-progress jobs.
2020-08-10 14:21:21.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040476345 started.
2020-08-10 14:21:21.745 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:21:23.790 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:483EC506431265C301C4643A1D5380D6
2020-08-10 14:21:26.558 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:21:26 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 14:21:26.661 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:21:26 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 14:21:26.678 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:21:26 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 14:21:27.193 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:21:27.397 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T14:21:27.342+0800' WHERE (USERNAME = 'admin');
2020-08-10 14:21:27.419 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 14:21:27.425 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:21:27.429 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 14:21:27.436 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 14:21:27.443 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:21:27 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 14:21:28.975 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:28 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:21:28.993 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:21:29.000 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:21:29.007 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:21:29.013 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:21:29.018 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:21:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:22:00.093 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:22:00.113 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-10T14:22:00.093+0800');
2020-08-10 14:22:10.025 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:22:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:22:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:22:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:22:10.082 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-10 14:22:10.086 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-10T14:22:10.025+0800');
2020-08-10 14:22:21.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:23:00.137 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:23:00.143 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:23:00.137+0800');
2020-08-10 14:23:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:23:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:23:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:23:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:23:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:23:10.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 14:23:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T14:23:10.019+0800');
2020-08-10 14:23:21.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:24:00.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:24:00.037 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:24:00.029+0800');
2020-08-10 14:24:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:24:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:24:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:24:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:24:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:24:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T14:24:10.020+0800');
2020-08-10 14:24:21.748 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:25:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:25:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:25:00.021+0800');
2020-08-10 14:25:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:25:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:25:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:25:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:25:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:25:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T14:25:10.020+0800');
2020-08-10 14:25:21.748 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:26:00.028 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:26:00.033 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:26:00.028+0800');
2020-08-10 14:26:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:26:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:26:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:26:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:26:10.053 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 14:26:10.058 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T14:26:10.021+0800');
2020-08-10 14:26:21.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:27:00.029 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:27:00.035 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:27:00.029+0800');
2020-08-10 14:27:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:27:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:27:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:27:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:27:10.053 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:27:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T14:27:10.022+0800');
2020-08-10 14:27:21.753 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:28:00.027 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:28:00.032 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 14:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:28:00.027+0800');
2020-08-10 14:28:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:28:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:28:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:28:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:28:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 14:28:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 14:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T14:28:10.019+0800');
2020-08-10 14:28:21.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:29:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:29:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 14:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:29:00.021+0800');
2020-08-10 14:29:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:29:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:29:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:29:10.054 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 14:29:10.059 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 14:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T14:29:10.016+0800');
2020-08-10 14:29:21.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:29:41.606 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:29:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:29:46.922 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:29:46.927 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:29:46.936 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:29:46.940 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:29:46.944 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:29:46.948 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:29:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:29:59.776 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:29:59.848 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:29:59.855 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:29:59.861 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:29:59.868 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:29:59.875 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:29:59.879 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:29:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:30:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:30:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 14:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:30:00.020+0800');
2020-08-10 14:30:06.086 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:30:06.093 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:30:06.098 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:30:06.102 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:30:06.106 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:30:06.110 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:30:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:30:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:30:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:30:10.056 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 14:30:10.060 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T14:30:10.021+0800');
2020-08-10 14:30:10.630 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:30:10.634 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:30:10.638 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:30:10.643 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:30:10.647 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:30:10.650 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:30:21.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:30:55.600 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:30:55.674 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:30:55.680 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:30:55.689 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:30:55.695 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:30:55.700 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:30:55.706 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:31:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:31:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 14:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:31:00.020+0800');
2020-08-10 14:31:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:31:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:31:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:31:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:31:10.053 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 14:31:10.056 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 14:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T14:31:10.019+0800');
2020-08-10 14:31:21.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:31:26.841 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:31:26.920 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:31:26.926 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:31:26.933 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:31:26.938 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:31:26.945 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:31:26.950 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:31:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:31:29.864 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:31:29.869 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:31:29.875 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:31:29.882 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:31:29.885 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:31:29.889 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:31:32.912 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:31:32.916 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:31:32.920 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:31:32.924 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:31:32.930 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:31:32.935 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:31:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:32:00.015 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:32:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:32:00.015+0800');
2020-08-10 14:32:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:32:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:32:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:32:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:32:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 14:32:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-10T14:32:10.008+0800');
2020-08-10 14:32:21.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:33:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:33:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:33:00.024+0800');
2020-08-10 14:33:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:33:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:33:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 14:33:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T14:33:10.018+0800');
2020-08-10 14:33:21.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:34:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:34:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:34:00.021+0800');
2020-08-10 14:34:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:34:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:34:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 14:34:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T14:34:10.018+0800');
2020-08-10 14:34:21.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:35:00.049 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:35:00.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:35:00.049+0800');
2020-08-10 14:35:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:35:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:35:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:35:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:35:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 14:35:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T14:35:10.019+0800');
2020-08-10 14:35:21.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:36:00.053 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:36:00.057 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:36:00.053+0800');
2020-08-10 14:36:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:36:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:36:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:36:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:36:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T14:36:10.018+0800');
2020-08-10 14:36:21.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:36:36.004 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:36:36.072 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:36:36.077 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:36:36.082 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:36:36.088 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:36:36.094 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:36:36.098 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 14:36:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:37:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:37:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:37:00.018+0800');
2020-08-10 14:37:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:37:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:37:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:37:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:37:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 14:37:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T14:37:10.019+0800');
2020-08-10 14:37:21.813 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:38:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:38:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 14:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:38:00.020+0800');
2020-08-10 14:38:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:38:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:38:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 14:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T14:38:10.020+0800');
2020-08-10 14:38:21.815 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:38:51.380 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:38:51.462 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:38:51.467 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:38:51.473 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:38:51.480 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:38:51.486 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:38:51.491 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:38:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:38:58.924 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 14:38:58 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:38:58.986 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:38:58.990 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:38:58.996 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:38:59.001 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:38:59.006 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:38:59.010 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 14:38:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:39:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:39:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 14:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:39:00.022+0800');
2020-08-10 14:39:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:39:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:39:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:39:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:39:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 14:39:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 14:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T14:39:10.020+0800');
2020-08-10 14:39:21.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:40:00.013 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:40:00.018 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 14:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:40:00.013+0800');
2020-08-10 14:40:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:40:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:40:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:40:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:40:10.051 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 14:40:10.054 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 14:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T14:40:10.019+0800');
2020-08-10 14:40:21.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:41:00.013 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:41:00.018 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 14:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:41:00.013+0800');
2020-08-10 14:41:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:41:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:41:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:41:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:41:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:41:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 14:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T14:41:10.017+0800');
2020-08-10 14:41:21.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:42:00.009 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:42:00.020 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:42:00.009+0800');
2020-08-10 14:42:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:42:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:42:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:42:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:42:10.050 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 14:42:10.053 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T14:42:10.017+0800');
2020-08-10 14:42:21.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:42:26.565 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 14:42:26.632 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:42:26.637 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:42:26.642 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:42:26.649 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:42:26.653 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:42:26.657 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 14:42:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:43:00.012 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:43:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:43:00.012+0800');
2020-08-10 14:43:04.079 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 14:43:04.084 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 14:43:04.087 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 14:43:04.090 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 14:43:04.094 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 14:43:04.097 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 14:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 14:43:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:43:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:43:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 14:43:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T14:43:10.017+0800');
2020-08-10 14:43:21.833 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:44:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:44:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:44:00.023+0800');
2020-08-10 14:44:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:44:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:44:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:44:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:44:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T14:44:10.019+0800');
2020-08-10 14:44:21.831 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:45:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:45:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:45:00.021+0800');
2020-08-10 14:45:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:45:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:45:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 14:45:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T14:45:10.018+0800');
2020-08-10 14:45:21.834 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:46:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:46:00.017 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:46:00.011+0800');
2020-08-10 14:46:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:46:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:46:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:46:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:46:10.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T14:46:10.011+0800');
2020-08-10 14:46:21.837 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:47:00.054 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:47:00.058 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:47:00.054+0800');
2020-08-10 14:47:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:47:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:47:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:47:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:47:10.075 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:47:10.078 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T14:47:10.048+0800');
2020-08-10 14:47:21.840 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:48:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:48:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 14:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:48:00.021+0800');
2020-08-10 14:48:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:48:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:48:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:48:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:48:10.075 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 14:48:10.078 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 14:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T14:48:10.045+0800');
2020-08-10 14:48:21.845 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:49:00.051 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:49:00.055 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 14:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:49:00.051+0800');
2020-08-10 14:49:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:49:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:49:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:49:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:49:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 14:49:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 14:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T14:49:10.021+0800');
2020-08-10 14:49:21.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:50:00.051 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:50:00.054 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 14:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:50:00.051+0800');
2020-08-10 14:50:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:50:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:50:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:50:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:50:10.070 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 14:50:10.073 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 14:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T14:50:10.044+0800');
2020-08-10 14:50:21.848 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:51:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:51:00.034 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 14:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:51:00.025+0800');
2020-08-10 14:51:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:51:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:51:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:51:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:51:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:51:10.048 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 14:51:10.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 14:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T14:51:10.018+0800');
2020-08-10 14:51:21.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:52:00.027 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:52:00.031 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 14:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:52:00.027+0800');
2020-08-10 14:52:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:52:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:52:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:52:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:52:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:52:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 14:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T14:52:10.019+0800');
2020-08-10 14:52:21.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:53:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:53:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 14:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:53:00.026+0800');
2020-08-10 14:53:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:53:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:53:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:53:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:53:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:53:10.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 14:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T14:53:10.021+0800');
2020-08-10 14:53:21.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:54:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:54:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 14:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:54:00.025+0800');
2020-08-10 14:54:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:54:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:54:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:54:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:54:10.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 14:54:10.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 14:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T14:54:10.007+0800');
2020-08-10 14:54:21.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:55:00.051 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:55:00.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 14:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:55:00.051+0800');
2020-08-10 14:55:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:55:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:55:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:55:10.073 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:55:10.075 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 14:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T14:55:10.046+0800');
2020-08-10 14:55:21.859 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:56:00.053 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:56:00.057 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 14:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:56:00.053+0800');
2020-08-10 14:56:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:56:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:56:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 14:56:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 14:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T14:56:10.020+0800');
2020-08-10 14:56:21.860 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:57:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:57:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 14:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T14:57:00.020+0800');
2020-08-10 14:57:10.006 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:57:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:57:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:57:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:57:10.035 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 14:57:10.038 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 14:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T14:57:10.006+0800');
2020-08-10 14:57:21.864 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:58:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:58:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 14:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:58:00.026+0800');
2020-08-10 14:58:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:58:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:58:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 14:58:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 14:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T14:58:10.018+0800');
2020-08-10 14:58:21.866 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 14:59:00.047 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 14:59:00.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 14:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T14:59:00.047+0800');
2020-08-10 14:59:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 14:59:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 14:59:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 14:59:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 14:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 14:59:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 14:59:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 14:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T14:59:10.017+0800');
2020-08-10 14:59:21.867 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:00:00.043 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:00:00.046 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 15:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:00:00.043+0800');
2020-08-10 15:00:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:00:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:00:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 15:00:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 15:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T15:00:10.021+0800');
2020-08-10 15:00:21.870 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:01:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:01:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 15:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:01:00.022+0800');
2020-08-10 15:01:10.022 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:01:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:01:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:01:10.051 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 15:01:10.054 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 15:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T15:01:10.022+0800');
2020-08-10 15:01:21.874 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:01:52.719 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:01:52.833 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:01:52.838 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:01:52.844 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:01:52.849 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:01:52.855 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:01:52.859 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:01:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:02:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:02:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:02:00.021+0800');
2020-08-10 15:02:02.560 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:02:02.610 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:02:02.614 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:02:02.619 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:02:02.623 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:02:02.627 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:02:02.630 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:02:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:02:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:02:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:02:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:02:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:02:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:02:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T15:02:10.019+0800');
2020-08-10 15:02:21.877 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:03:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:03:00.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:03:00.045+0800');
2020-08-10 15:03:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:03:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:03:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:03:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:03:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:03:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T15:03:10.018+0800');
2020-08-10 15:03:21.880 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:04:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:04:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:04:00.023+0800');
2020-08-10 15:04:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:04:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:04:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:04:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:04:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T15:04:10.018+0800');
2020-08-10 15:04:21.882 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:05:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:05:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:05:00.022+0800');
2020-08-10 15:05:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:05:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:05:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:05:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:05:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T15:05:10.018+0800');
2020-08-10 15:05:21.885 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:06:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:06:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:06:00.021+0800');
2020-08-10 15:06:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:06:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:06:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:06:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:06:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 15:06:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T15:06:10.016+0800');
2020-08-10 15:06:21.885 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:07:00.105 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:07:00.115 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 15:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:07:00.105+0800');
2020-08-10 15:07:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:07:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:07:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:07:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 15:07:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 15:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T15:07:10.022+0800');
2020-08-10 15:07:21.897 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:07:50.456 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:07:50.524 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:07:50.528 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:07:50.533 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:07:50.537 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:07:50.542 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:07:50.546 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:07:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:08:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:08:00.017 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 15:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:08:00.013+0800');
2020-08-10 15:08:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:08:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:08:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:08:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:08:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:08:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 15:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T15:08:10.020+0800');
2020-08-10 15:08:21.899 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:09:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:09:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 15:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:09:00.022+0800');
2020-08-10 15:09:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:09:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:09:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 15:09:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 15:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T15:09:10.019+0800');
2020-08-10 15:09:21.903 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:10:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:10:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 15:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:10:00.023+0800');
2020-08-10 15:10:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:10:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:10:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:10:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:10:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 15:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T15:10:10.018+0800');
2020-08-10 15:10:21.905 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:11:00.065 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:11:00.070 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 15:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:11:00.065+0800');
2020-08-10 15:11:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:11:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:11:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:11:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:11:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 15:11:10.050 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 15:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T15:11:10.018+0800');
2020-08-10 15:11:14.131 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:11:14.195 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:11:14.198 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:11:14.203 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:11:14.208 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:11:14.212 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:11:14.216 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:11:21.906 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:12:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:12:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:12:00.023+0800');
2020-08-10 15:12:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:12:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:12:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:12:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:12:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T15:12:10.017+0800');
2020-08-10 15:12:19.719 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:12:19.778 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:12:19.781 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:12:19.786 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:12:19.792 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:12:19.795 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:12:19.799 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:12:21.911 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:12:41.219 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:12:41.287 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:12:41.293 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:12:41.298 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:12:41.302 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:12:41.308 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:12:41.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:12:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:12:46.992 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:12:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:12:47.056 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:12:47.060 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:12:47.063 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:12:47.068 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:12:47.073 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:12:47.078 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:12:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:13:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:13:00.016 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:13:00.011+0800');
2020-08-10 15:13:10.015 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:13:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:13:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:13:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:13:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 15:13:10.042 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T15:13:10.015+0800');
2020-08-10 15:13:21.929 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:14:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:14:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:14:00.020+0800');
2020-08-10 15:14:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:14:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:14:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:14:10.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 15:14:10.053 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T15:14:10.016+0800');
2020-08-10 15:14:21.931 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:15:00.013 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:15:00.019 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:15:00.013+0800');
2020-08-10 15:15:02.755 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:15:02.803 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:15:02.807 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:15:02.810 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:15:02.814 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:15:02.819 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:15:02.822 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:15:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:15:09.547 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:15:09.615 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:15:09.619 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:15:09.623 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:15:09.627 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:15:09.632 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:15:09.636 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:15:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:15:10.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:15:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:15:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:15:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:15:10.100 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：66 毫秒
2020-08-10 15:15:10.104 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 66, '2020-08-10T15:15:10.034+0800');
2020-08-10 15:15:21.952 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:15:23.146 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T15:15:23.143+0800' WHERE (USERNAME = 'admin');
2020-08-10 15:15:23.161 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 15:15:23.164 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:15:23.168 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:15:23.172 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 15:15:23.176 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:15:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 15:16:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:16:00.050 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:16:00.046+0800');
2020-08-10 15:16:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:16:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:16:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:16:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:16:10.031 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-10 15:16:10.034 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-10T15:16:10.008+0800');
2020-08-10 15:16:21.957 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:17:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:17:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 15:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:17:00.021+0800');
2020-08-10 15:17:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:17:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:17:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:17:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:17:10.071 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:17:10.074 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 15:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T15:17:10.044+0800');
2020-08-10 15:17:21.959 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:17:34.588 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:17:34.639 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:17:34.642 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:17:34.646 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:17:34.651 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:17:34.655 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:17:34.658 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:17:46.845 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:17:46.885 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:17:46.889 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:17:46.892 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:17:46.896 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:17:46.900 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:17:46.903 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:17:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:18:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:18:00.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 15:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:18:00.046+0800');
2020-08-10 15:18:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:18:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:18:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:18:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:18:10.035 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 15:18:10.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 15:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T15:18:10.009+0800');
2020-08-10 15:18:21.960 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:19:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:19:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 15:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:19:00.021+0800');
2020-08-10 15:19:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:19:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:19:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:19:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:19:10.034 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:19:10.036 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 15:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T15:19:10.009+0800');
2020-08-10 15:19:21.964 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:20:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:20:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 15:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:20:00.022+0800');
2020-08-10 15:20:10.013 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:20:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:20:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:20:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:20:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:20:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:20:10.055 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-10 15:20:10.059 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 15:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-10T15:20:10.013+0800');
2020-08-10 15:20:21.966 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:21:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:21:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 15:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:21:00.021+0800');
2020-08-10 15:21:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:21:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:21:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:21:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:21:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 15:21:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 15:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T15:21:10.009+0800');
2020-08-10 15:21:21.968 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:22:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:22:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:22:00.024+0800');
2020-08-10 15:22:10.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:22:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:22:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:22:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:22:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 15:22:10.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T15:22:10.009+0800');
2020-08-10 15:22:21.975 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:23:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:23:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:23:00.020+0800');
2020-08-10 15:23:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:23:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:23:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:23:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:23:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:23:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T15:23:10.019+0800');
2020-08-10 15:23:21.982 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:24:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:24:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:24:00.023+0800');
2020-08-10 15:24:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:24:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:24:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:24:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:24:10.032 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 15:24:10.034 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T15:24:10.007+0800');
2020-08-10 15:24:21.984 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:25:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:25:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:25:00.023+0800');
2020-08-10 15:25:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:25:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:25:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:25:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:25:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 15:25:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T15:25:10.020+0800');
2020-08-10 15:25:21.986 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:26:00.030 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:26:00.034 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:26:00.030+0800');
2020-08-10 15:26:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:26:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:26:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:26:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:26:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 15:26:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T15:26:10.018+0800');
2020-08-10 15:26:21.987 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:27:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:27:00.029 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 15:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:27:00.023+0800');
2020-08-10 15:27:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:27:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:27:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:27:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:27:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 15:27:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 15:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T15:27:10.019+0800');
2020-08-10 15:27:21.989 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:28:00.029 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:28:00.033 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 15:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:28:00.029+0800');
2020-08-10 15:28:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:28:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:28:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:28:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:28:10.051 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 15:28:10.054 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 15:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T15:28:10.021+0800');
2020-08-10 15:28:21.991 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597040476345_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:28:51.624 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040476345 paused.
2020-08-10 15:28:51.661 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 15:28:51.670 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 15:28:51.670 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040476345 shutting down.
2020-08-10 15:28:51.670 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040476345 paused.
2020-08-10 15:28:51.672 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597040476345 shutdown complete.
2020-08-10 15:28:51.680 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 15:28:51.680 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 15:28:51.689 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 15:29:01.842 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 10720 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 15:29:01.847 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 15:29:03.723 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 15:29:03.726 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 15:29:03.798 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-10 15:29:04.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a0f8a90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$376a383b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$1b62af6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d0180075] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fa0ee7e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.827 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f4eca327] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:04.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:29:05.290 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 15:29:05.307 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 15:29:05.317 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 15:29:05.318 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 15:29:05.326 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 15:29:05.448 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 15:29:05.448 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3517 ms
2020-08-10 15:29:05.880 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 15:29:05.891 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 15:29:06.426 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 15:29:06.427 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 15:29:06.427 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 15:29:06.427 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 15:29:07.130 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 15:29:10.005 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 15:29:10.052 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 15:29:10.070 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 15:29:10.070 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 15:29:10.075 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 15:29:10.078 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 15:29:10.079 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597044550053'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 15:29:10.079 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 15:29:10.079 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 15:29:10.081 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ec3689b
2020-08-10 15:29:10.221 febs [main] INFO  p6spy - 2020-08-10 15:29:10 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 15:29:13.926 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 15:29:14.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 15:29:14.685 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 15:29:14.685 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 15:29:14.685 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 15:29:14.686 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 15:29:14.687 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 15:29:14.688 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 15:29:14.688 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 15:29:14.688 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 15:29:14.688 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 15:29:14.688 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 15:29:14.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 15:29:14.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 15:29:14.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 15:29:14.907 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25d87313, org.springframework.security.web.context.SecurityContextPersistenceFilter@642b71d6, org.springframework.security.web.header.HeaderWriterFilter@53202b06, org.springframework.security.web.authentication.logout.LogoutFilter@7dbe858f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@64dfa1a3, org.springframework.security.web.session.ConcurrentSessionFilter@46f041cb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e916dc2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d398cfb, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7866ffa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c130cb2, org.springframework.security.web.session.SessionManagementFilter@53570fff, org.springframework.security.web.access.ExceptionTranslationFilter@4f2b1a2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5bbf3869]
2020-08-10 15:29:15.040 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 15:29:15.092 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 15:29:15.106 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 15:29:16.017 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 15:29:17.312 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 15:29:17.339 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 15:29:17.445 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 15:29:17.478 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 15:29:17.495 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 15:29:17.539 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 15:29:17.544 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 16.744 seconds (JVM running for 18.054)
2020-08-10 15:29:17.585 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 15:29:17.585 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 15:29:17.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 15:29:17.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 15:29:17.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 15:29:17.684 febs [http-nio-8099-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 15:29:17.684 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 15:29:17.700 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-10 15:29:17.764 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6D0E809CADF09D0D9575B9C0824A8EBD
2020-08-10 15:29:18.350 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-10 15:29:18 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 15:29:18.481 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 15:29:18.491 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 15:29:18.491 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597040476345"'s failed in-progress jobs.
2020-08-10 15:29:18.509 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597044550053 started.
2020-08-10 15:29:18.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 15:29:18.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:29:20.808 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:29:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 15:29:20.916 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:29:20 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 15:29:20.933 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:29:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 15:29:21.500 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:29:21.726 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T15:29:21.670+0800' WHERE (USERNAME = 'admin');
2020-08-10 15:29:21.747 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 15:29:21.751 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:29:21.756 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:29:21.764 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 15:29:21.768 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:29:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 15:29:23.580 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:29:23.597 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:29:23.605 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:29:23.611 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:29:23.616 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:29:23.621 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:29:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:29:33.787 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:29:33.847 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:29:33.853 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:29:33.860 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:29:33.868 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:29:33.872 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:29:33.876 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:29:36.675 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:29:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:29:36.681 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:29:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:30:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:30:00.066 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T15:30:00.049+0800');
2020-08-10 15:30:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:30:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:30:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:30:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:30:10.083 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-10 15:30:10.087 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-10T15:30:10.024+0800');
2020-08-10 15:30:18.587 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:31:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:31:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:31:00.024+0800');
2020-08-10 15:31:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:31:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:31:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:31:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:31:10.082 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 15:31:10.086 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-10T15:31:10.044+0800');
2020-08-10 15:31:18.590 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:32:00.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:32:00.035 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:32:00.029+0800');
2020-08-10 15:32:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:32:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:32:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:32:10.057 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 15:32:10.062 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T15:32:10.019+0800');
2020-08-10 15:32:18.590 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:32:20.634 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:32:20 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:32:27.260 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:27 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:32:28.348 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:32:29.117 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:32:29.600 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:32:37.969 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:32:37.976 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:32:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:32:58.510 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:32:58 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:33:01.330 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:33:01.832 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:33:01.834 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:01 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:33:02.202 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:33:02 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T15:33:01.832+0800');
2020-08-10 15:33:02.202 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:33:02.443 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:33:02.820 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:33:03.001 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:33:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:33:11.691 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:33:11.696 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:33:11 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:33:11.700 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:33:11 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:33:11.723 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:33:11 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:33:11.722 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:33:11 | 耗时 12 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:33:11.726 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 15:33:11.730 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:33:11 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T15:33:11.691+0800');
2020-08-10 15:33:33.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:33:33.417 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:33:33 | 耗时 15 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:37:57.999 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 15:37:58.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:37:58.015 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:37:58 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:37:58.009+0800');
2020-08-10 15:37:58.073 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:38:00.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:38:00.024 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:38:00.018+0800');
2020-08-10 15:38:10.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:38:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:38:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:38:10.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 15:38:10.055 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 15:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T15:38:10.018+0800');
2020-08-10 15:38:10.073 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:39:00.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:39:00.024 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 15:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:39:00.019+0800');
2020-08-10 15:39:10.016 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:39:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:39:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:39:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:39:10.047 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 15:39:10.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 15:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T15:39:10.016+0800');
2020-08-10 15:39:10.076 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:40:00.014 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:40:00.019 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 15:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:40:00.014+0800');
2020-08-10 15:40:10.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:40:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:40:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:40:10.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 15:40:10.052 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 15:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T15:40:10.017+0800');
2020-08-10 15:40:10.080 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:41:00.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:41:00.025 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 15:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:41:00.019+0800');
2020-08-10 15:41:10.026 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:41:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:41:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:41:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:41:10.087 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:41:10.106 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：80 毫秒
2020-08-10 15:41:10.114 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 15:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 80, '2020-08-10T15:41:10.026+0800');
2020-08-10 15:42:00.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:42:00.025 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 15:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:42:00.021+0800');
2020-08-10 15:42:10.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:42:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:42:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:42:10.048 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:42:10.050 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 15:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T15:42:10.021+0800');
2020-08-10 15:42:10.084 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:43:00.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:43:00.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 15:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:43:00.043+0800');
2020-08-10 15:43:10.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:43:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:43:10.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 15:43:10.051 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T15:43:10.020+0800');
2020-08-10 15:43:10.084 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597044550053_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:43:58.573 febs [Thread-37] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597044550053 paused.
2020-08-10 15:43:58.583 febs [Thread-37] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 15:43:58.587 febs [Thread-37] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 15:43:58.587 febs [Thread-37] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597044550053 shutting down.
2020-08-10 15:43:58.587 febs [Thread-37] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597044550053 paused.
2020-08-10 15:43:58.588 febs [Thread-37] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597044550053 shutdown complete.
2020-08-10 15:43:58.594 febs [Thread-37] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 15:43:58.595 febs [Thread-37] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 15:43:58.598 febs [Thread-37] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 15:44:06.463 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 22860 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 15:44:06.469 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 15:44:09.020 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 15:44:09.024 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 15:44:09.104 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-08-10 15:44:09.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9fba9d86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.050 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$362c2cb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$1a24a3e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ced9f4ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@379f9555' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f3ae97a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 15:44:10.661 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 15:44:10.677 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 15:44:10.687 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 15:44:10.687 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 15:44:10.695 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 15:44:10.833 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 15:44:10.833 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4255 ms
2020-08-10 15:44:11.339 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 15:44:11.351 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 15:44:11.868 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 15:44:11.869 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 15:44:11.869 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 15:44:11.869 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 15:44:12.475 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 15:44:14.749 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 15:44:14.790 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 15:44:14.804 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 15:44:14.805 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 15:44:14.809 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 15:44:14.811 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 15:44:14.812 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597045454791'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 15:44:14.812 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 15:44:14.812 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 15:44:14.814 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@55d8f6bb
2020-08-10 15:44:14.906 febs [main] INFO  p6spy - 2020-08-10 15:44:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 15:44:17.046 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 15:44:17.368 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 15:44:17.368 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 15:44:17.368 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 15:44:17.368 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 15:44:17.368 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 15:44:17.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 15:44:17.457 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26a004ed, org.springframework.security.web.context.SecurityContextPersistenceFilter@74159dc9, org.springframework.security.web.header.HeaderWriterFilter@27b84c9a, org.springframework.security.web.authentication.logout.LogoutFilter@1259b2a5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1013aa94, org.springframework.security.web.session.ConcurrentSessionFilter@706c2726, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@254210b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55a29589, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@85b9f9c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b6a4da7, org.springframework.security.web.session.SessionManagementFilter@6d514259, org.springframework.security.web.access.ExceptionTranslationFilter@222dc36c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69e8f7a5]
2020-08-10 15:44:17.521 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 15:44:17.539 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 15:44:17.541 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 15:44:18.030 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 15:44:18.917 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 15:44:18.936 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 15:44:19.016 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 15:44:19.045 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 15:44:19.060 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 15:44:19.098 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 15:44:19.103 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.922 seconds (JVM running for 15.161)
2020-08-10 15:44:19.133 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 15:44:19.133 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 15:44:19.133 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 15:44:19.133 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 15:44:19.133 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 15:44:19.602 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 15:44:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 15:44:19.902 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 15:44:19.902 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 15:44:19.929 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-08-10 15:44:20.046 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 15:44:20.068 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597045454791 started.
2020-08-10 15:44:20.075 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 15:44:20.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:44:35.070 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 15:44:35.070 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597044550053"'s failed in-progress jobs.
2020-08-10 15:44:39.411 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:07CBF7765464F16466A59E85A92ADB77
2020-08-10 15:44:43.884 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:68F5202EB173BAEB019084B42CAA391D
2020-08-10 15:44:46.819 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:44:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 15:44:46.959 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:44:46 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 15:44:46.976 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:44:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 15:44:47.727 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:44:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:44:47.992 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:47 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T15:44:47.915+0800' WHERE (USERNAME = 'admin');
2020-08-10 15:44:48.018 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 15:44:48.024 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:44:48.028 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 15:44:48.036 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 15:44:48.043 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:44:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 15:44:50.325 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:44:50.343 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:44:50.349 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:44:50.356 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:44:50.362 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:44:50.367 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:44:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:44:52.435 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:44:52.441 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:44:52.446 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:44:52.451 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:44:52.456 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:44:52.460 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:44:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:45:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:45:00.061 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T15:45:00.044+0800');
2020-08-10 15:45:07.941 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:45:07.946 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:45:07.952 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:45:07.958 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:45:07.963 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:45:07.969 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:45:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:45:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:45:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:45:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:45:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:45:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-10 15:45:10.085 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-10T15:45:10.022+0800');
2020-08-10 15:45:20.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:45:21.967 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:45:21 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:34.448 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:45:34 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 388, MENU_NAME = '污染项排名', URL = '/rank/myequipment/rank1', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T15:45:34.440+0800' WHERE MENU_ID = 393;
2020-08-10 15:45:34.483 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:45:34 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:34.496 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 15:45:34 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 22, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=393, parentId=388, menuName=污染项排名, url=/rank/myequipment/rank1, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 15:45:34 CST 2020)"', '192.168.1.113', '2020-08-10T15:45:34.477+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 15:45:39.383 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:39 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 388, MENU_NAME = '机构污染排名', URL = '/rank/myequipment/rank', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T15:45:39.380+0800' WHERE MENU_ID = 389;
2020-08-10 15:45:39.405 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-10 15:45:39 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 18, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=389, parentId=388, menuName=机构污染排名, url=/rank/myequipment/rank, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 15:45:39 CST 2020)"', '192.168.1.113', '2020-08-10T15:45:39.398+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 15:45:39.411 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:45:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:42.827 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:45:42.862 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:42 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:43.812 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:45:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:45:43.829 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:45:43 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:45.127 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:45:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:45:45.153 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:45:45 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:45:46.862 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:45:46.869 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:45:46.873 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:45:46.878 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:45:46.884 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:45:46.888 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:45:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:45:49.698 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:45:49.704 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:45:49.709 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:45:49.713 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:45:49.716 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:45:49.720 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:45:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:45:51.835 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:45:51.840 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:45:51.845 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:45:51.849 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:45:51.854 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:45:51.857 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:46:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:46:00.013+0800');
2020-08-10 15:46:00.067 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:00.072 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:00.078 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:00.082 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:00.086 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:00.091 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:46:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:01.827 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:01.832 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:01.837 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:01.843 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:01.848 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:01.851 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:46:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:46:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:46:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 15:46:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:46:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T15:46:10.011+0800');
2020-08-10 15:46:14.955 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:14.958 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:14.963 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:14.967 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:14.971 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:14.974 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:16.641 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:16.646 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:16.650 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:16.654 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:16.658 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:16.662 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:46:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:17.089 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:17.093 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:17.098 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:17.101 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:17.105 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:17.109 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:46:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:20.145 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:46:53.322 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:46:53.365 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:46:53.369 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:46:53.374 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:46:53.378 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:46:53.382 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:46:53.385 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:46:58.233 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:46:58 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:47:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:47:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T15:47:00.014+0800');
2020-08-10 15:47:02.549 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:47:02.590 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:02.594 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:02.598 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:02.601 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:02.605 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:02.608 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:05.247 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:05.252 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:05.256 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:05.261 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:05.264 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:05.268 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:47:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:06.727 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:06.732 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:06.736 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:06.741 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:06.745 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:06.748 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:07.159 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:07.162 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:07.167 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:07.171 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:07.175 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:07.178 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:47:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:09.202 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:09.205 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:09.209 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:09.213 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:09.217 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:09.220 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:09.680 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:09.684 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:09.687 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:09.691 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:09.693 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:09.697 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:47:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:47:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:47:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:47:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:47:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-10 15:47:10.074 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-10T15:47:10.021+0800');
2020-08-10 15:47:20.148 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:47:33.958 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:47:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:47:33.995 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:33.999 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:34.004 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:34.009 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:34.013 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:34.016 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:47:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:47:35.968 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:47:35.971 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:47:35.976 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:47:35.980 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:47:35.984 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:47:35.986 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:00.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:48:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:48:00.016+0800');
2020-08-10 15:48:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:48:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:48:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 15:48:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T15:48:10.020+0800');
2020-08-10 15:48:20.150 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:48:31.637 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:48:31.681 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:31.685 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:31.689 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:31.694 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:31.697 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:31.701 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:39.641 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:39.644 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:39.648 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:39.652 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:39.656 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:39.659 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:41.521 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:41.525 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:41.528 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:41.531 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:41.535 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:41.538 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:42.295 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:42.299 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:42.303 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:42.307 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:42.311 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:42.314 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:42.799 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:42.802 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:42.806 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:42.809 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:42.812 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:42.816 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:43.272 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:43.275 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:43.279 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:43.283 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:43.286 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:43.290 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:43.758 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:43.761 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:43.765 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:43.769 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:43.772 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:43.775 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:44.313 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:44.317 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:44.320 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:44.324 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:44.327 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:44.330 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:48.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:48.845 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:48.848 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:48.851 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:48.854 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:48.858 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:50.768 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:50.772 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:50.776 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:50.779 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:50.782 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:50.785 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:48:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:51.225 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:51.228 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:51.231 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:51.234 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:51.237 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:51.241 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:51.608 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:51.612 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:51.615 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:51.618 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:51.621 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:51.625 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:48:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:52.303 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:52.307 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:52.310 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:52.313 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:52.316 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:52.319 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:52.679 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:52.683 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:52.686 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:52.690 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:52.693 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:52.696 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:48:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:53.024 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:53.029 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:53.033 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:53.036 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:53.040 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:53.044 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:53.552 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:53.556 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:53.560 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:53.563 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:53.566 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:53.569 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:53.918 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:53.922 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:53.926 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:53.929 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:53.932 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:53.935 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:48:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:54.475 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:54.479 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:54.482 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:54.485 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:54.488 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:54.492 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:48:54.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:48:54.844 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:48:54.847 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:48:54.850 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:48:54.854 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:48:54.858 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:49:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:49:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:49:00.022+0800');
2020-08-10 15:49:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:49:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:49:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:49:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 15:49:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T15:49:10.021+0800');
2020-08-10 15:49:20.151 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:49:57.234 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:49:57.312 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:49:57.318 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:49:57.323 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:49:57.330 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:49:57.336 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:49:57.341 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:49:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:50:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:50:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 15:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:50:00.022+0800');
2020-08-10 15:50:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:50:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:50:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:50:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 15:50:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 15:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T15:50:10.021+0800');
2020-08-10 15:50:20.154 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:50:42.401 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:50:42.404 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:50:42.407 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:50:42.411 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:50:42.415 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:50:42.418 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:50:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:50:45.184 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:50:45.226 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:50:45.229 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:50:45.232 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:50:45.236 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:50:45.240 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:50:45.244 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:50:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:50:46.057 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:50:46.060 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:50:46.063 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:50:46.066 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:50:46.070 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:50:46.072 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:51:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:51:00.018 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 15:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:51:00.013+0800');
2020-08-10 15:51:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:51:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:51:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 15:51:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 15:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T15:51:10.017+0800');
2020-08-10 15:51:20.156 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:52:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:52:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 15:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:52:00.021+0800');
2020-08-10 15:52:07.203 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:52:07.306 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:52:07.311 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:52:07.316 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:52:07.323 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:52:07.328 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:52:07.334 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:52:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:52:10.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:52:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:52:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:52:10.064 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 15:52:10.068 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 15:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-10T15:52:10.023+0800');
2020-08-10 15:52:11.143 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:52:11.147 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:52:11.151 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:52:11.154 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:52:11.157 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:52:11.160 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:52:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:52:20.157 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:53:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:53:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 15:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:53:00.024+0800');
2020-08-10 15:53:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:53:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:53:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:53:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:53:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 15:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T15:53:10.021+0800');
2020-08-10 15:53:20.162 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:53:39.886 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:39.934 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:39.939 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:39.943 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:39.946 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:39.950 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:39.955 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:53:40.543 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:40.578 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:40.582 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:40.587 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:40.591 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:40.594 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:40.598 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:53:41.349 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:41.393 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:41.398 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:41.404 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:41.408 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:41.412 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:41.416 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:53:42.380 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:42.407 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:42.410 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:42.414 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:42.418 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:42.422 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:42.425 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:53:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:53:50.895 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:50.952 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:50.956 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:50.961 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:50.964 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:50.968 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:50.971 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:53:55.641 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:53:55 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 15:53:59.158 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:53:59.200 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:53:59.203 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:53:59.207 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:53:59.211 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:53:59.214 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:53:59.217 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:53:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:54:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:54:00.017 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:54:00.012+0800');
2020-08-10 15:54:00.599 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:54:00.604 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:54:00.607 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:54:00.611 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:54:00.613 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:54:00.616 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:54:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:54:03.992 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:54:03.995 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:54:03.999 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:54:04.002 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:54:04.005 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:54:04.008 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:54:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:54:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:54:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:54:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:54:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 15:54:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 15:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T15:54:10.018+0800');
2020-08-10 15:54:20.164 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:54:44.201 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:54:44.253 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:54:44.256 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:54:44.260 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:54:44.265 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:54:44.269 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:54:44.272 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:54:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:54:50.073 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:54:50.077 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:54:50.080 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:54:50.083 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:54:50.087 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:54:50.092 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:54:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:55:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 15:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:55:00.021+0800');
2020-08-10 15:55:05.200 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:05.203 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:05.206 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:05.209 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:05.213 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:05.216 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:55:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:55:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:55:10.057 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 15:55:10.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 15:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T15:55:10.023+0800');
2020-08-10 15:55:20.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:55:32.421 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:55:32.492 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:32.496 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:32.500 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:32.507 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:32.512 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:32.517 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:55:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:33.616 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:33.621 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:33.627 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:33.631 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:33.636 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:33.642 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:34.379 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:34.383 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:34.388 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:34.392 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:34.396 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:34.399 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:55:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:36.425 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:36.427 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:36.430 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:36.434 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:36.438 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:36.441 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 15:55:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:37.657 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:37.660 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:37.663 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:37.666 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:37.669 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:37.673 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:39.544 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:39.547 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:39.550 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:39.553 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:39.556 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:39.559 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 15:55:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:43.423 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:43.427 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:43.431 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:43.434 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:43.437 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:43.441 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:55:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:45.599 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:45.602 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:45.605 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:45.610 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:45.612 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:45.615 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 15:55:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:46.952 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:46.956 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:46.960 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:46.963 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:46.966 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:46.969 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 15:55:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:55:58.260 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:55:58.264 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:55:58.268 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:55:58.271 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:55:58.274 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:55:58.278 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:55:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:56:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:56:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 15:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:56:00.026+0800');
2020-08-10 15:56:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:56:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:56:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:56:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-10 15:56:10.062 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 15:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-10T15:56:10.020+0800');
2020-08-10 15:56:17.904 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:56:17.950 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:56:17.954 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:56:17.957 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:56:17.960 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:56:17.964 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:56:17.967 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:56:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:56:20.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:56:29.120 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:56:29.124 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:56:29.126 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:56:29.129 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:56:29.132 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:56:29.135 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 15:56:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:57:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:57:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 15:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:57:00.013+0800');
2020-08-10 15:57:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:57:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:57:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:57:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:57:10.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 15:57:10.043 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 15:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T15:57:10.009+0800');
2020-08-10 15:57:20.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:58:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:58:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 15:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T15:58:00.020+0800');
2020-08-10 15:58:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:58:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:58:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 15:58:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 15:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T15:58:10.019+0800');
2020-08-10 15:58:20.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:59:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 15:59:00.018 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 15:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T15:59:00.012+0800');
2020-08-10 15:59:03.181 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:59:03.228 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:59:03.231 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:59:03.236 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:59:03.239 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:59:03.243 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:59:03.247 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 15:59:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 15:59:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 15:59:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 15:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 15:59:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 15:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 15:59:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 15:59:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 15:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T15:59:10.016+0800');
2020-08-10 15:59:20.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 15:59:35.615 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 15:59:35.681 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 15:59:35.686 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 15:59:35.691 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 15:59:35.695 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 15:59:35.700 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 15:59:35.704 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 15:59:35 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:00:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:00:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 16:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:00:00.023+0800');
2020-08-10 16:00:02.869 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:00:02.938 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:00:02.943 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:00:02.949 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:00:02.954 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:00:02.958 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:00:02.963 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:00:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:00:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:00:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:00:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:00:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 16:00:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 16:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T16:00:10.019+0800');
2020-08-10 16:00:20.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:01:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:01:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 16:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:01:00.023+0800');
2020-08-10 16:01:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:01:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:01:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:01:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 16:01:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 16:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T16:01:10.019+0800');
2020-08-10 16:01:20.209 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:02:00.030 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:02:00.035 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 16:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:02:00.030+0800');
2020-08-10 16:02:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:02:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:02:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:02:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 16:02:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 16:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T16:02:10.020+0800');
2020-08-10 16:02:20.210 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:02:59.081 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:02:59.156 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:02:59.160 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:02:59.164 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:02:59.167 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:02:59.171 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:02:59.177 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:02:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:03:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:03:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 16:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:03:00.021+0800');
2020-08-10 16:03:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:03:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:03:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:03:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:03:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 16:03:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 16:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T16:03:10.018+0800');
2020-08-10 16:03:19.783 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:03:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:03:20.214 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:03:46.544 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:03:46.608 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:03:46.612 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:03:46.616 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:03:46.620 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:03:46.625 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:03:46.629 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:03:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:04:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:04:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 16:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:04:00.021+0800');
2020-08-10 16:04:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:04:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:04:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:04:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 16:04:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 16:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T16:04:10.016+0800');
2020-08-10 16:04:20.216 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:05:00.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:05:00.018 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:05:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:05:00.011+0800');
2020-08-10 16:05:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:05:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:05:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:05:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:05:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 16:05:10.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T16:05:10.007+0800');
2020-08-10 16:05:15.929 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:05:15.932 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:05:15.936 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:05:15.940 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:05:15.943 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:05:15.946 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:05:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:05:20.219 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:06:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:06:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:06:00.020+0800');
2020-08-10 16:06:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:06:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:06:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:06:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 16:06:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T16:06:10.019+0800');
2020-08-10 16:06:20.221 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:06:54.639 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:06:54.716 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:06:54.720 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:06:54.723 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:06:54.727 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:06:54.733 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:06:54.737 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:06:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:07:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:07:00.051 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:07:00.045+0800');
2020-08-10 16:07:10.078 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:07:10.088 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:07:10.093 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:07:10.192 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:07:10.197 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：119 毫秒
2020-08-10 16:07:10.201 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:07:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 119, '2020-08-10T16:07:10.078+0800');
2020-08-10 16:07:20.225 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:07:39.357 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:07:39.407 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:07:39.412 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:07:39.415 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:07:39.420 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:07:39.425 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:07:39.429 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:07:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:07:52.512 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:07:52.570 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:07:52.573 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:07:52.577 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:07:52.580 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:07:52.585 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:07:52.589 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:07:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:08:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:08:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 16:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:08:00.022+0800');
2020-08-10 16:08:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:08:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:08:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:08:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 16:08:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 16:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T16:08:10.018+0800');
2020-08-10 16:08:20.227 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:09:00.013 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:09:00.019 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 16:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:09:00.013+0800');
2020-08-10 16:09:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:09:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:09:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:09:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 16:09:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 16:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T16:09:10.018+0800');
2020-08-10 16:09:20.230 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:10:00.151 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:10:00.162 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 16:10:00 | 耗时 4 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T16:10:00.151+0800');
2020-08-10 16:10:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:10:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:10:10.092 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:10:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:10:10.178 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:10:10 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:10:10.182 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：165 毫秒
2020-08-10 16:10:10.188 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 16:10:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 165, '2020-08-10T16:10:10.017+0800');
2020-08-10 16:10:20.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:11:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:11:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 16:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:11:00.021+0800');
2020-08-10 16:11:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:11:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:11:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:11:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:11:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 16:11:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 16:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T16:11:10.019+0800');
2020-08-10 16:11:20.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:11:29.440 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:11:29.506 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:11:29.511 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:11:29.515 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:11:29.519 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:11:29.522 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:11:29.528 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:11:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:11:41.966 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:11:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:11:42.023 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:11:42.027 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:11:42.032 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:11:42.035 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:11:42.040 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:11:42.045 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:11:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:12:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:12:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 16:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:12:00.016+0800');
2020-08-10 16:12:05.177 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:12:05.239 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:12:05.243 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:12:05.247 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:12:05.251 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:12:05.256 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:12:05.262 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:12:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:12:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:12:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:12:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:12:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 16:12:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 16:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T16:12:10.019+0800');
2020-08-10 16:12:20.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:12:54.389 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:12:54.448 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:12:54.453 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:12:54.456 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:12:54.460 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:12:54.465 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:12:54.470 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:12:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:13:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 16:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:13:00.020+0800');
2020-08-10 16:13:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:13:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:13:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:13:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:13:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 16:13:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 16:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T16:13:10.017+0800');
2020-08-10 16:13:11.579 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:11.584 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:11.589 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:11.593 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:11.598 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:11.603 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:14.599 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:14.603 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:14.606 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:14.609 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:14.612 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:14.616 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:15.038 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:15.041 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:15.043 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:15.046 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:15.050 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:15.053 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:15.789 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:15.792 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:15.795 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:15.799 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:15.802 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:15.805 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:13:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:17.288 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:17.291 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:17.294 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:17.298 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:17.301 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:17.304 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:13:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:19.579 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:19.582 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:19.585 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:19.588 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:19.591 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:19.594 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:20.239 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:13:31.742 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:13:31.799 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:31.803 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:31.807 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:31.811 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:31.814 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:31.818 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:35.718 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:35.721 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:35.724 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:35.727 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:35.731 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:35.734 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:13:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:36.685 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:36.688 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:36.690 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:36.693 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:36.697 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:36.700 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:13:37.069 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:13:37.071 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:13:37.074 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:13:37.077 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:13:37.081 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:13:37.084 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:14:00.031 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 16:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:14:00.024+0800');
2020-08-10 16:14:02.719 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:14:02.775 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 2 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:02.780 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:02.785 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:02.789 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:02.796 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:02.799 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:04.296 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:04.300 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:04.303 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:04.307 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:04.311 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:04.315 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:04.959 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:04.963 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:04.966 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:04.970 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:04.973 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:04.976 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:05.605 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:05.609 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:05.613 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:05.616 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:05.620 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:05.623 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:14:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:14:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:14:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:14:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:14:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 16:14:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 16:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T16:14:10.017+0800');
2020-08-10 16:14:20.244 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:14:24.854 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:14:24.898 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:24.902 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:24.907 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:24.910 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:24.914 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:24.917 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:14:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:26.591 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:26.595 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:26.600 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:26.604 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:26.607 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:26.612 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:27.062 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:27.066 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:27.071 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:27.074 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:27.078 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:27.081 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:27.422 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:27.426 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:27.429 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:27.432 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:27.436 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:27.439 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:27.828 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:27.831 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:27.834 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:27.837 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:27.840 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:27.843 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:14:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:29.324 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:29.327 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:29.330 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:29.333 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:29.336 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:29.338 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:14:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:14:30.125 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:14:30.128 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:14:30.131 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:14:30.134 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:14:30.137 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:14:30.139 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:14:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:15:00.028 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:15:00.032 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:15:00.028+0800');
2020-08-10 16:15:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:15:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:15:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:15:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:15:10.041 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-10 16:15:10.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-10T16:15:10.018+0800');
2020-08-10 16:15:12.788 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:07CBF7765464F16466A59E85A92ADB77
2020-08-10 16:15:20.245 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:16:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:16:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:16:00.027+0800');
2020-08-10 16:16:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:16:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:16:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:16:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:16:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 16:16:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T16:16:10.019+0800');
2020-08-10 16:16:20.247 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:16:43.134 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:16:43.174 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:16:43.177 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:16:43.181 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:16:43.185 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:16:43.188 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:16:43.191 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:16:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:17:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:17:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:17:00.021+0800');
2020-08-10 16:17:04.811 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:17:04.865 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:17:04.868 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:17:04.873 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:17:04.878 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:17:04.883 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:17:04.887 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:17:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:17:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:17:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:17:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:17:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:17:10.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 16:17:10.050 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T16:17:10.021+0800');
2020-08-10 16:17:20.250 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:17:58.555 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:17:58 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-10 16:17:58.575 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:17:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-10 16:18:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:18:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 16:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:18:00.024+0800');
2020-08-10 16:18:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:18:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:18:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:18:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:18:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 16:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T16:18:10.019+0800');
2020-08-10 16:18:18.397 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:18:18.450 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:18:18.454 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:18:18.458 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:18:18.461 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:18:18.466 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:18:18.470 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:18:20.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:19:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:19:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 16:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:19:00.022+0800');
2020-08-10 16:19:03.887 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:19:03.943 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:19:03.947 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:19:03.951 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:19:03.955 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:19:03.958 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:19:03.961 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:19:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:19:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:19:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:19:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:19:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:19:10.035 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 16:19:10.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 16:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T16:19:10.007+0800');
2020-08-10 16:19:20.258 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:19:25.969 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:19:25 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:19:26.028 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:19:26.032 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:19:26.038 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:19:26.042 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:19:26.047 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:19:26.051 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:19:26.705 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:19:26.737 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 16:19:26.740 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 16:19:26.743 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 16:19:26.747 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 16:19:26.752 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 16:19:26.755 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:19:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 16:20:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:20:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 16:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:20:00.025+0800');
2020-08-10 16:20:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:20:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:20:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:20:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:20:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 16:20:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 16:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T16:20:10.017+0800');
2020-08-10 16:20:20.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:21:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:21:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 16:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:21:00.021+0800');
2020-08-10 16:21:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:21:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:21:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:21:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:21:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:21:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 16:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T16:21:10.018+0800');
2020-08-10 16:21:20.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:22:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:22:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 16:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:22:00.021+0800');
2020-08-10 16:22:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:22:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:22:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:22:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:22:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 16:22:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 16:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T16:22:10.016+0800');
2020-08-10 16:22:20.265 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:23:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:23:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 16:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:23:00.022+0800');
2020-08-10 16:23:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:23:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:23:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:23:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:23:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 16:23:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 16:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T16:23:10.016+0800');
2020-08-10 16:23:20.270 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:24:00.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:24:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 16:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:24:00.016+0800');
2020-08-10 16:24:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:24:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:24:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:24:10.050 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 16:24:10.053 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 16:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T16:24:10.018+0800');
2020-08-10 16:24:20.270 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:25:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:25:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:25:00.012+0800');
2020-08-10 16:25:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:25:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:25:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:25:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 16:25:10.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T16:25:10.007+0800');
2020-08-10 16:25:20.273 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:26:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:26:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:26:00.019+0800');
2020-08-10 16:26:10.027 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:26:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:26:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:26:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:26:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:26:10.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 16:26:10.067 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T16:26:10.027+0800');
2020-08-10 16:26:20.277 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:27:00.048 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:27:00.052 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:27:00.048+0800');
2020-08-10 16:27:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:27:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:27:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:27:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:27:10.043 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T16:27:10.017+0800');
2020-08-10 16:27:20.279 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:28:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:28:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 16:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:28:00.019+0800');
2020-08-10 16:28:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:28:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:28:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:28:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:28:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 16:28:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 16:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T16:28:10.017+0800');
2020-08-10 16:28:20.281 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:29:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:29:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 16:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:29:00.023+0800');
2020-08-10 16:29:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:29:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:29:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:29:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 16:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T16:29:10.018+0800');
2020-08-10 16:29:20.283 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:30:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:30:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 16:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:30:00.021+0800');
2020-08-10 16:30:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:30:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:30:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:30:10.054 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 16:30:10.058 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 16:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T16:30:10.021+0800');
2020-08-10 16:30:20.284 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:30:25.543 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:30:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:30:25.545 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:30:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:30:39.226 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:30:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 1;
2020-08-10 16:31:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:31:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 16:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:31:00.019+0800');
2020-08-10 16:31:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:31:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:31:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:31:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:31:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 16:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T16:31:10.019+0800');
2020-08-10 16:31:20.286 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:32:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:32:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 16:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:32:00.024+0800');
2020-08-10 16:32:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:32:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:32:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:32:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-10 16:32:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 16:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-10T16:32:10.020+0800');
2020-08-10 16:32:20.289 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:33:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:33:00.026 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 16:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:33:00.020+0800');
2020-08-10 16:33:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:33:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:33:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:33:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:33:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 16:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-10T16:33:10.017+0800');
2020-08-10 16:33:20.293 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:34:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:34:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 16:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:34:00.019+0800');
2020-08-10 16:34:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:34:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:34:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:34:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:34:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-10 16:34:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 16:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-10T16:34:10.021+0800');
2020-08-10 16:34:20.295 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:35:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:35:00.053 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:35:00.049+0800');
2020-08-10 16:35:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:35:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:35:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:35:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:35:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 16:35:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T16:35:10.019+0800');
2020-08-10 16:35:20.300 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:36:00.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:36:00.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:36:00.043+0800');
2020-08-10 16:36:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:36:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:36:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:36:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:36:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 16:36:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T16:36:10.018+0800');
2020-08-10 16:36:20.299 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597045454791_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:37:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:37:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:37:00.018+0800');
2020-08-10 16:37:02.050 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597045454791 paused.
2020-08-10 16:37:02.064 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:37:02.069 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:37:02.069 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597045454791 shutting down.
2020-08-10 16:37:02.069 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597045454791 paused.
2020-08-10 16:37:02.070 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597045454791 shutdown complete.
2020-08-10 16:37:02.076 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:37:02.077 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:37:02.081 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:37:10.535 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6100 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:37:10.539 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:37:13.121 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:37:13.124 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:37:13.239 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 97ms. Found 0 repository interfaces.
2020-08-10 16:37:14.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$70f96df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76afd23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$eb637452] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a018c55d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.615 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1f26b992' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c4ed680f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:14.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:37:15.134 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:37:15.150 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:37:15.160 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:37:15.160 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:37:15.168 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:37:15.313 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:37:15.313 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4681 ms
2020-08-10 16:37:15.789 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:37:15.820 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:37:16.350 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:37:16.351 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:37:16.351 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:37:16.351 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:37:16.977 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:37:19.417 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:37:19.460 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:37:19.479 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:37:19.479 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:37:19.485 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:37:19.487 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:37:19.488 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597048639462'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:37:19.489 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:37:19.489 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:37:19.492 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@24749ad3
2020-08-10 16:37:19.622 febs [main] INFO  p6spy - 2020-08-10 16:37:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:37:21.853 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:37:22.150 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:37:22.151 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:37:22.152 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:37:22.152 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:37:22.152 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:37:22.152 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:37:22.236 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18c432ed, org.springframework.security.web.context.SecurityContextPersistenceFilter@62eb918, org.springframework.security.web.header.HeaderWriterFilter@69e23e94, org.springframework.security.web.authentication.logout.LogoutFilter@514c6ca0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@c22cf4d, org.springframework.security.web.session.ConcurrentSessionFilter@3a388769, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37e28b20, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4446a191, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@399acce3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@206de1f, org.springframework.security.web.session.SessionManagementFilter@25134e01, org.springframework.security.web.access.ExceptionTranslationFilter@158cb50a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@570ede3b]
2020-08-10 16:37:22.302 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:37:22.331 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:37:22.334 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:37:22.971 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:37:24.580 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:37:24.601 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:37:24.683 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:37:24.709 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:37:24.724 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:37:24.761 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:37:24.766 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.507 seconds (JVM running for 17.185)
2020-08-10 16:37:24.802 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:37:24.802 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:37:24.802 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:37:24.802 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:37:24.802 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:37:25.153 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:37:25.154 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:37:25.174 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 16:37:25 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:37:25.177 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-10 16:37:25.711 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:37:25.722 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:37:25.722 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597045454791"'s failed in-progress jobs.
2020-08-10 16:37:25.739 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597048639462 started.
2020-08-10 16:37:25.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:37:32.120 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:02867C055FA7B2DF0470E894ADA5069B
2020-08-10 16:37:34.981 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:37:34 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:37:35.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:37:35.098 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:37:35.528 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:37:35.704 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:37:35.651+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:37:35.726 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:37:35.732 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:37:35.737 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:37:35.747 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:37:35.752 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:37:35 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:37:37.548 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:37:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:37:37.564 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:37:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:37:39.232 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:37:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:38:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:38:00.059 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T16:38:00.042+0800');
2020-08-10 16:38:08.121 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:38:08 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '市级设备列表', URL = '/amyequipment/myequipment/index', PERMS = '', ICON = 'layui-icon-appstore', TYPE = '0', ORDER_NUM = 1, MODIFY_TIME = '2020-08-10T16:38:08.113+0800' WHERE MENU_ID = 369;
2020-08-10 16:38:08.165 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:38:08 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:38:08.175 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 16:38:08 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 23, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=369, parentId=358, menuName=市级设备列表, url=/amyequipment/myequipment/index, perms=, icon=layui-icon-appstore, type=0, orderNum=1, createTime=null, modifyTime=Mon Aug 10 16:38:08 CST 2020)"', '192.168.1.113', '2020-08-10T16:38:08.155+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:38:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:38:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:38:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:38:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:38:10.083 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-08-10 16:38:10.088 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 62, '2020-08-10T16:38:10.021+0800');
2020-08-10 16:38:13.745 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:38:44.718 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:38:44 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, CREATE_TIME) VALUES (358, '县级设备列表', '/amyequipment/myequipment/county/index', '', '', '0', '2020-08-10T16:38:44.709+0800');
2020-08-10 16:38:44.742 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-10 16:38:44 | 耗时 6 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 23, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=399, parentId=358, menuName=县级设备列表, url=/amyequipment/myequipment/county/index, perms=, icon=, type=0, orderNum=null, createTime=Mon Aug 10 16:38:44 CST 2020, modifyTime=null)"', '192.168.1.113', '2020-08-10T16:38:44.732+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:38:44.749 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:38:44 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:39:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:39:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:39:00.025+0800');
2020-08-10 16:39:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:39:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:39:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:39:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:39:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 16:39:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T16:39:10.022+0800');
2020-08-10 16:39:13.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:39:21.689 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:39:21 | 耗时 10 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, CREATE_TIME) VALUES (358, '乡级设备列表', '/amyequipment/myequipment/township/index', '', '', '0', '2020-08-10T16:39:21.676+0800');
2020-08-10 16:39:21.709 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-10 16:39:21 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 18, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=400, parentId=358, menuName=乡级设备列表, url=/amyequipment/myequipment/township/index, perms=, icon=, type=0, orderNum=null, createTime=Mon Aug 10 16:39:21 CST 2020, modifyTime=null)"', '192.168.1.113', '2020-08-10T16:39:21.694+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:39:21.713 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:39:21 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:39:45.032 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:39:45 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, CREATE_TIME) VALUES (358, '村级设备列表', '/amyequipment/myequipment//village/index', '', '', '0', '2020-08-10T16:39:45.029+0800');
2020-08-10 16:39:45.055 febs [aps-Async-Thread4] INFO  p6spy - 2020-08-10 16:39:45 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 18, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=401, parentId=358, menuName=村级设备列表, url=/amyequipment/myequipment//village/index, perms=, icon=, type=0, orderNum=null, createTime=Mon Aug 10 16:39:45 CST 2020, modifyTime=null)"', '192.168.1.113', '2020-08-10T16:39:45.047+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:39:45.063 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:39:45 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:39:47.050 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:39:47 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:39:47.055 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:39:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:39:47.061 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:39:47 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:39:53.490 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-10T16:39:53.485+0800' WHERE ROLE_ID = 82;
2020-08-10 16:39:53.502 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-10 16:39:53.538 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:39:53.542 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:39:53.548 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:39:53.562 febs [aps-Async-Thread5] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 69, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Mon Aug 10 16:39:53 CST 2020, menuIds=1,11,12,13,4,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,365,366,367,368,358,399,400,401,369,370,371,372,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-10T16:39:53.555+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:39:53.593 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:39:53.597 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:39:53 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:39:55.190 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:39:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:39:55.235 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:39:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:39:55.237 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:39:55 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:39:55.240 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:39:55 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:40:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:40:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:40:00.022+0800');
2020-08-10 16:40:00.135 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:40:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:40:00.137 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:40:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:40:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:40:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:40:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:40:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:40:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 16:40:10.055 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T16:40:10.018+0800');
2020-08-10 16:40:13.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:40:39.213 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:40:39 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:41:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:41:00.032 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 16:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:41:00.024+0800');
2020-08-10 16:41:10.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:41:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:41:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:41:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:41:10.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 16:41:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 16:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T16:41:10.011+0800');
2020-08-10 16:41:13.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:41:52.043 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:41:52 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '村级设备列表', URL = '/amyequipment/myequipment/village/index', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T16:41:52.040+0800' WHERE MENU_ID = 401;
2020-08-10 16:41:52.065 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 16:41:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 17, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=401, parentId=358, menuName=村级设备列表, url=/amyequipment/myequipment/village/index, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 16:41:52 CST 2020)"', '192.168.1.113', '2020-08-10T16:41:52.057+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:41:52.072 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:41:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:42:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:42:00.018 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 16:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:42:00.012+0800');
2020-08-10 16:42:02.981 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:02 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-10T16:42:02.978+0800' WHERE ROLE_ID = 82;
2020-08-10 16:42:02.985 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:02 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-10 16:42:03.010 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:42:03.015 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:42:03.020 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:42:03.031 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 47, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Mon Aug 10 16:42:02 CST 2020, menuIds=1,11,12,13,4,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,365,366,367,368,358,399,400,401,369,370,371,372,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-10T16:42:03.025+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:42:03.066 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:42:03.071 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:42:03 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:42:04.710 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:42:04.760 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:42:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:42:04.764 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:42:04 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:42:04.765 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:42:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:42:05.163 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:42:05.200 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:42:05.203 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:42:05.204 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:42:05.571 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:42:05.601 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:42:05.603 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:42:05.604 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:42:05 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:42:06.412 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:42:06 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:42:06.475 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:42:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-10 16:42:06.475 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:42:06 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:42:06.478 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:42:06 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-10 16:42:08.807 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:42:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:42:08.810 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:42:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:42:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:42:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:42:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:42:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:42:10.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 16:42:10.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 16:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T16:42:10.008+0800');
2020-08-10 16:42:13.753 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:42:23.990 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:42:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:42:24.050 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:42:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:42:24.054 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:42:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:43:07.934 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:43:07.939 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 16:43:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:43:07.934+0800');
2020-08-10 16:43:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:43:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:43:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 16:43:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 16:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T16:43:10.018+0800');
2020-08-10 16:43:16.176 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:44:00.049 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:44:00.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 16:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:44:00.049+0800');
2020-08-10 16:44:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:44:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:44:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:44:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:44:10.059 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-10 16:44:10.063 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 16:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-10T16:44:10.021+0800');
2020-08-10 16:44:16.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:45:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:45:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 16:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:45:00.021+0800');
2020-08-10 16:45:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:45:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:45:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:45:10.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 16:45:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 16:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T16:45:10.019+0800');
2020-08-10 16:45:16.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597048639462_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:45:16.698 febs [Thread-36] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597048639462 paused.
2020-08-10 16:45:16.708 febs [Thread-36] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:45:16.712 febs [Thread-36] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:45:16.712 febs [Thread-36] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597048639462 shutting down.
2020-08-10 16:45:16.712 febs [Thread-36] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597048639462 paused.
2020-08-10 16:45:16.713 febs [Thread-36] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597048639462 shutdown complete.
2020-08-10 16:45:16.718 febs [Thread-36] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:45:16.718 febs [Thread-36] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:45:16.723 febs [Thread-36] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:45:24.552 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 2548 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:45:24.557 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:45:26.383 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:45:26.386 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:45:26.464 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-08-10 16:45:27.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c4d89fdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5b4a2f0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3f42a639] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f3f7f744] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5d84e363' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$18cc99f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:45:27.948 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:45:27.965 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:45:27.976 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:45:27.976 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:45:27.983 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:45:28.108 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:45:28.108 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3466 ms
2020-08-10 16:45:28.544 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:45:28.555 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:45:29.146 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:45:29.147 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:45:29.147 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:45:29.147 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:45:29.785 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:45:32.233 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:45:32.276 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:45:32.292 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:45:32.292 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:45:32.297 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:45:32.299 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:45:32.300 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049132277'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:45:32.300 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:45:32.300 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:45:32.302 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@219a2203
2020-08-10 16:45:32.398 febs [main] INFO  p6spy - 2020-08-10 16:45:32 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:45:34.579 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:45:34.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:45:34.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:45:34.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:45:34.912 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:45:34.997 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22e650e, org.springframework.security.web.context.SecurityContextPersistenceFilter@d8a2b1b, org.springframework.security.web.header.HeaderWriterFilter@1bcdd302, org.springframework.security.web.authentication.logout.LogoutFilter@493489dd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@51ac72f7, org.springframework.security.web.session.ConcurrentSessionFilter@8bd9d08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3328db4f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44ba9f25, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7b9f7087, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30a79476, org.springframework.security.web.session.SessionManagementFilter@30ce78e3, org.springframework.security.web.access.ExceptionTranslationFilter@1f596988, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@35599228]
2020-08-10 16:45:35.062 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:45:35.083 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:45:35.085 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:45:35.581 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:45:36.441 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:45:36.458 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:45:36.541 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:45:36.566 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:45:36.581 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:45:36.617 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:45:36.622 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.11 seconds (JVM running for 14.328)
2020-08-10 16:45:36.651 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:45:36.651 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:45:36.651 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:45:36.651 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:45:36.651 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:45:37.244 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:45:37.244 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:45:37.265 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 16:45:37 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:45:37.266 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-10 16:45:37.567 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:45:37.580 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049132277 started.
2020-08-10 16:45:37.587 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:45:41.738 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B491003B0B5F2B28D1886D2529193BDD
2020-08-10 16:45:44.819 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:45:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:45:44.922 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:45:44 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:45:44.937 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:45:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:45:45.466 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:45:45.687 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:45:45.630+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:45:45.702 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:45:45.707 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:45:45.712 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:45:45.719 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:45:45.724 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:45:45 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:45:52.582 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:45:52.582 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597048639462"'s failed in-progress jobs.
2020-08-10 16:46:00.050 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:46:00.064 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:46:00.050+0800');
2020-08-10 16:46:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:46:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:46:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:46:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:46:10.086 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-08-10 16:46:10.092 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 62, '2020-08-10T16:46:10.024+0800');
2020-08-10 16:46:13.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:47:00.054 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:47:00.060 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:47:00.054+0800');
2020-08-10 16:47:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:47:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:47:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:47:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 16:47:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T16:47:10.021+0800');
2020-08-10 16:47:13.588 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:47:37.333 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:47:37 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:47:50.984 febs [http-nio-8099-exec-9] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:405682DEB2B75E51A9F97EC502057CBE
2020-08-10 16:47:53.608 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:47:53 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:47:53.616 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:47:53 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:47:53.622 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:47:53 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:47:54.562 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:47:54.684 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:47:54.679+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:47:54.689 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:47:54.692 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:47:54.697 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:47:54.701 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:47:54.706 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:47:54 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:48:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:48:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:48:00.023+0800');
2020-08-10 16:48:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:48:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:48:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:48:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:48:10.062 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-10 16:48:10.067 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-10T16:48:10.019+0800');
2020-08-10 16:48:13.588 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:49:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:49:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 16:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:49:00.021+0800');
2020-08-10 16:49:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:49:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:49:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:49:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:49:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 16:49:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 16:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T16:49:10.019+0800');
2020-08-10 16:49:13.591 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:49:25.438 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:49:25 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:49:40.508 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:49:40 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '县级设备列表', URL = '/amyequipment/myequipment/index_county', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T16:49:40.498+0800' WHERE MENU_ID = 399;
2020-08-10 16:49:40.546 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:49:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:49:40.558 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 16:49:40 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 25, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=399, parentId=358, menuName=县级设备列表, url=/amyequipment/myequipment/index_county, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 16:49:40 CST 2020)"', '192.168.1.113', '2020-08-10T16:49:40.538+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:49:42.734 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 16:49:42 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:49:42.789 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:49:42 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:49:43.539 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 16:49:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:49:43.588 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:49:43 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:50:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:50:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 16:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:50:00.023+0800');
2020-08-10 16:50:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:50:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:50:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:50:10.054 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 16:50:10.059 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 16:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-10T16:50:10.020+0800');
2020-08-10 16:50:13.644 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049132277_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:50:34.160 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049132277 paused.
2020-08-10 16:50:34.169 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:50:34.173 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:50:34.173 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049132277 shutting down.
2020-08-10 16:50:34.173 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049132277 paused.
2020-08-10 16:50:34.174 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049132277 shutdown complete.
2020-08-10 16:50:34.180 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:50:34.180 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:50:34.186 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:50:44.534 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17964 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:50:44.537 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:50:46.256 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:50:46.260 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:50:46.349 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74ms. Found 0 repository interfaces.
2020-08-10 16:50:47.554 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d0fe104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3817033] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$8779e762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3c2f386d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2bf3ec4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:47.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6103db1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:48.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:50:48.628 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:50:48.657 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:50:48.671 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:50:48.671 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:50:48.683 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:50:48.863 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:50:48.863 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4247 ms
2020-08-10 16:50:49.502 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:50:49.518 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:50:50.221 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:50:50.221 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:50:50.221 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:50:50.221 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:50:50.967 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:50:53.863 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:50:53.902 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:50:53.917 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:50:53.918 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:50:53.922 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:50:53.924 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:50:53.925 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049453903'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:50:53.925 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:50:53.925 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:50:53.927 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@396c1228
2020-08-10 16:50:54.022 febs [main] INFO  p6spy - 2020-08-10 16:50:54 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:50:56.083 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:50:56.083 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049453903 shutting down.
2020-08-10 16:50:56.083 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049453903 paused.
2020-08-10 16:50:56.084 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049453903 shutdown complete.
2020-08-10 16:50:56.088 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:50:56.089 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:50:56.096 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:50:56.099 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-10 16:50:56.118 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-10 16:52:07.317 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6212 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:52:07.321 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:52:09.056 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:52:09.058 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:52:09.136 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-08-10 16:52:09.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:09.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9f270a2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3598995b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$1991108a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ce466195] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@432c0f1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.134 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f31b0447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:52:10.582 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:52:10.599 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:52:10.612 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:52:10.612 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:52:10.620 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:52:10.754 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:52:10.754 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3350 ms
2020-08-10 16:52:11.247 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:52:11.256 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:52:11.807 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:52:11.808 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:52:11.808 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:52:11.808 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:52:12.412 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:52:14.693 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:52:14.732 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:52:14.747 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:52:14.747 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:52:14.751 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:52:14.754 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:52:14.755 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049534733'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:52:14.755 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:52:14.755 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:52:14.756 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4724b2c1
2020-08-10 16:52:14.842 febs [main] INFO  p6spy - 2020-08-10 16:52:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:52:16.982 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:52:17.298 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:52:17.299 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:52:17.300 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:52:17.300 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:52:17.389 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@640028f2, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d94c50e, org.springframework.security.web.header.HeaderWriterFilter@5a5024eb, org.springframework.security.web.authentication.logout.LogoutFilter@20040c6e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ac0cb64, org.springframework.security.web.session.ConcurrentSessionFilter@18c432ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@230e163b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a9a6a0c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@247d44b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48b744fd, org.springframework.security.web.session.SessionManagementFilter@797ca322, org.springframework.security.web.access.ExceptionTranslationFilter@4d0e6424, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6915351c]
2020-08-10 16:52:17.454 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:52:17.474 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:52:17.476 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:52:17.963 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:52:18.799 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:52:18.816 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:52:18.895 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:52:18.921 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:52:18.935 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:52:18.970 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:52:18.975 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.583 seconds (JVM running for 13.843)
2020-08-10 16:52:19.002 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:52:19.003 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:52:19.003 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:52:19.003 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:52:19.003 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:52:19.472 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:52:19.472 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:52:19.493 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-10 16:52:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:52:19.494 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-10 16:52:19.922 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:52:19.932 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:52:19.932 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597049132277"'s failed in-progress jobs.
2020-08-10 16:52:19.947 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049534733 started.
2020-08-10 16:52:19.956 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049534733_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 16:52:20.025 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049534733_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:52:25.498 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:11FC4D46244507825EE144842ED0D971
2020-08-10 16:52:28.683 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:52:28 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:52:28.792 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:52:28 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:52:28.807 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:52:28 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:52:29.342 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:52:29.587 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:52:29.529+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:52:29.600 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:52:29.607 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:52:29.611 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:52:29.618 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:52:29.623 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:52:29 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:52:31.233 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:52:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:52:31.253 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:52:31 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:52:55.541 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049534733 paused.
2020-08-10 16:52:55.555 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:52:55.559 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:52:55.559 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049534733 shutting down.
2020-08-10 16:52:55.559 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049534733 paused.
2020-08-10 16:52:55.560 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049534733 shutdown complete.
2020-08-10 16:52:55.566 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:52:55.567 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:52:55.573 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:53:02.835 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9032 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:53:02.839 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:53:04.544 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:53:04.547 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:53:04.618 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-10 16:53:05.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1e2ca69a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b49e35c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.588 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$9896acf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4d4bfe03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@60816371' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7220a0b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:05.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:06.172 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:53:06.193 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:53:06.203 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:53:06.204 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:53:06.211 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:53:06.362 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:53:06.363 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3445 ms
2020-08-10 16:53:06.878 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:53:06.888 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:53:07.444 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:53:07.444 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:53:07.444 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:53:07.444 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:53:08.064 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:53:10.397 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:53:10.437 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:53:10.452 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:53:10.452 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:53:10.457 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:53:10.459 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:53:10.460 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049590438'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:53:10.460 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:53:10.460 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:53:10.462 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@236f3885
2020-08-10 16:53:10.551 febs [main] INFO  p6spy - 2020-08-10 16:53:10 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:53:12.737 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:53:13.041 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:53:13.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:53:13.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:53:13.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:53:13.042 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:53:13.125 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46ae897c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d086485, org.springframework.security.web.header.HeaderWriterFilter@54da736e, org.springframework.security.web.authentication.logout.LogoutFilter@44cab872, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2284058a, org.springframework.security.web.session.ConcurrentSessionFilter@643fed50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b171fbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ced1d14, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5cf39df6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44846c76, org.springframework.security.web.session.SessionManagementFilter@23307c6c, org.springframework.security.web.access.ExceptionTranslationFilter@59172d2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3705a85c]
2020-08-10 16:53:13.185 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:53:13.205 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:53:13.207 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:53:13.678 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:53:14.526 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:53:14.544 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:53:14.617 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:53:14.642 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:53:14.657 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:53:14.692 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:53:14.696 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.783 seconds (JVM running for 13.986)
2020-08-10 16:53:14.725 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:53:14.725 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:53:14.725 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:53:14.725 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:53:14.725 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:53:15.058 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:53:15.058 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:53:15.077 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 16:53:15 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:53:15.082 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-08-10 16:53:15.644 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:53:15.655 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:53:15.655 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597049534733"'s failed in-progress jobs.
2020-08-10 16:53:15.660 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049590438 started.
2020-08-10 16:53:15.666 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049590438_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 16:53:15.732 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049590438_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:53:17.831 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B1DB6A6AE4F08F1032F942923F45A914
2020-08-10 16:53:20.391 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:53:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:53:20.508 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:53:20 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:53:20.526 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:53:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:53:21.081 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:53:21.305 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:53:21.247+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:53:21.331 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:53:21.336 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:53:21.340 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:53:21.348 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:53:21.353 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:53:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:53:22.732 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:53:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:53:22.750 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:53:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:53:47.969 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049590438 paused.
2020-08-10 16:53:47.983 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:53:47.986 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:53:47.987 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049590438 shutting down.
2020-08-10 16:53:47.987 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049590438 paused.
2020-08-10 16:53:47.988 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049590438 shutdown complete.
2020-08-10 16:53:47.993 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:53:47.994 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:53:48.000 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:53:55.178 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11892 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:53:55.183 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:53:56.966 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:53:56.969 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:53:57.035 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-10 16:53:57.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:57.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e7d552d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:57.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:57.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:57.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4eee45c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:57.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b8e75b8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6d9cac96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1109730f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$92714f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:53:58.453 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:53:58.470 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:53:58.480 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:53:58.480 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:53:58.488 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:53:58.608 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:53:58.609 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3345 ms
2020-08-10 16:53:59.032 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:53:59.043 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:53:59.586 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:53:59.586 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:53:59.586 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:53:59.586 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:54:00.182 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:54:02.446 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:54:02.486 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:54:02.500 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:54:02.501 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:54:02.505 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:54:02.507 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:54:02.508 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049642487'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:54:02.508 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:54:02.508 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:54:02.509 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@87f1201
2020-08-10 16:54:02.618 febs [main] INFO  p6spy - 2020-08-10 16:54:02 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:54:04.792 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:54:05.121 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:54:05.122 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:54:05.123 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:54:05.208 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59172d2, org.springframework.security.web.context.SecurityContextPersistenceFilter@5fb0a09e, org.springframework.security.web.header.HeaderWriterFilter@4ef0bc5b, org.springframework.security.web.authentication.logout.LogoutFilter@58a0f75b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3ae91bcc, org.springframework.security.web.session.ConcurrentSessionFilter@26d02dc6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@684eb4a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25b87e1b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5625e7e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77d42ed7, org.springframework.security.web.session.SessionManagementFilter@67b2c8bb, org.springframework.security.web.access.ExceptionTranslationFilter@1f3f0d25, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f63909f]
2020-08-10 16:54:05.270 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:54:05.289 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:54:05.291 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:54:05.771 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:54:06.653 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:54:06.671 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:54:06.744 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:54:06.771 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:54:06.786 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:54:06.822 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:54:06.827 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.575 seconds (JVM running for 13.836)
2020-08-10 16:54:06.857 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:54:06.857 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:54:06.857 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:54:06.857 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:54:06.858 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:54:07.289 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:54:07.290 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:54:07.311 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 16:54:07 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:54:07.311 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-10 16:54:07.773 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:54:07.795 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049642487 started.
2020-08-10 16:54:07.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049642487_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:54:07.841 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:54:07.895 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:54:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T16:54:07.841+0800');
2020-08-10 16:54:09.662 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:430D5DE7385BEAD88090B854BE890231
2020-08-10 16:54:10.014 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:54:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:54:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:54:10.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:54:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:54:10.142 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:54:10.145 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：131 毫秒
2020-08-10 16:54:10.150 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 131, '2020-08-10T16:54:10.014+0800');
2020-08-10 16:54:12.894 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:54:12 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:54:12.991 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:54:12 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:54:13.006 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:54:13.506 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:54:13.680 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:54:13.667+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:54:13.703 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:54:13.707 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:54:13.713 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:54:13.720 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:54:13.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:54:13 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:54:15.486 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:54:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:54:15.507 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:54:15 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:54:19.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049642487_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:54:22.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049642487_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:54:22.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049642487_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597049590438"'s failed in-progress jobs.
2020-08-10 16:55:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:55:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:55:00.024+0800');
2020-08-10 16:55:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:55:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:55:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:55:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-10 16:55:10.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-10T16:55:10.011+0800');
2020-08-10 16:55:19.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049642487_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:55:26.666 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:55:26 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:55:39.087 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:55:39 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '乡级设备列表', URL = '/amyequipment/myequipment/index_township', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T16:55:39.079+0800' WHERE MENU_ID = 400;
2020-08-10 16:55:39.115 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 16:55:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:55:39.125 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-10 16:55:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 15, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=400, parentId=358, menuName=乡级设备列表, url=/amyequipment/myequipment/index_township, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 16:55:39 CST 2020)"', '192.168.1.113', '2020-08-10T16:55:39.106+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:55:49.358 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:55:49 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '村级设备列表', URL = '/amyequipment/myequipment/index_village', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-10T16:55:49.354+0800' WHERE MENU_ID = 401;
2020-08-10 16:55:49.384 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-10 16:55:49 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 19, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=401, parentId=358, menuName=村级设备列表, url=/amyequipment/myequipment/index_village, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Mon Aug 10 16:55:49 CST 2020)"', '192.168.1.113', '2020-08-10T16:55:49.376+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-10 16:55:49.396 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-10 16:55:49 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-10 16:55:58.972 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049642487 paused.
2020-08-10 16:55:58.986 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:55:58.990 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 16:55:58.991 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049642487 shutting down.
2020-08-10 16:55:58.991 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049642487 paused.
2020-08-10 16:55:58.991 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049642487 shutdown complete.
2020-08-10 16:55:58.997 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 16:55:58.997 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 16:55:59.003 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 16:56:04.029 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 21672 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 16:56:04.033 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 16:56:05.933 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 16:56:05.935 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 16:56:06.008 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-10 16:56:06.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:06.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1c793f2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:06.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:06.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.013 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2eace5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$96e3458d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4b989698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@138a85d3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$706d394a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 16:56:07.661 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 16:56:07.680 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 16:56:07.699 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 16:56:07.699 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 16:56:07.710 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 16:56:07.853 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 16:56:07.853 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3747 ms
2020-08-10 16:56:08.336 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 16:56:08.347 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 16:56:08.884 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 16:56:08.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 16:56:08.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 16:56:08.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 16:56:09.521 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 16:56:11.935 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 16:56:11.974 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 16:56:11.988 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 16:56:11.988 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 16:56:11.992 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 16:56:11.995 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 16:56:11.996 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597049771975'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 16:56:11.996 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 16:56:11.996 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 16:56:11.997 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@16c1d11
2020-08-10 16:56:12.088 febs [main] INFO  p6spy - 2020-08-10 16:56:12 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 16:56:14.266 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 16:56:14.582 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 16:56:14.583 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 16:56:14.672 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c2dab10, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e0600a4, org.springframework.security.web.header.HeaderWriterFilter@14764fdd, org.springframework.security.web.authentication.logout.LogoutFilter@44bd7f24, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6600d07d, org.springframework.security.web.session.ConcurrentSessionFilter@2b6a4da7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1773faf8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75c30a4f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@439b0198, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c4e11d0, org.springframework.security.web.session.SessionManagementFilter@69e8f7a5, org.springframework.security.web.access.ExceptionTranslationFilter@1c96bf1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4d204b30]
2020-08-10 16:56:14.733 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 16:56:14.755 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 16:56:14.756 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 16:56:15.245 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 16:56:16.103 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 16:56:16.121 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 16:56:16.198 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 16:56:16.223 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 16:56:16.238 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 16:56:16.274 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 16:56:16.279 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.147 seconds (JVM running for 14.327)
2020-08-10 16:56:16.309 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 16:56:16.309 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 16:56:16.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 16:56:16.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 16:56:16.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 16:56:16.701 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 16:56:16.701 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 16:56:16.718 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-10 16:56:16 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 16:56:16.722 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-10 16:56:17.278 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 16:56:17.294 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 16:56:17.295 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597049642487"'s failed in-progress jobs.
2020-08-10 16:56:17.311 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049771975 started.
2020-08-10 16:56:17.318 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-10 16:56:17.389 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:56:26.367 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A4E9D05D1C6791E529C888E5C4D98B6F
2020-08-10 16:56:29.308 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:56:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 16:56:29.416 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:56:29 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 16:56:29.444 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 16:56:29 | 耗时 11 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 16:56:29.962 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:56:29 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 16:56:30.190 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T16:56:30.131+0800' WHERE (USERNAME = 'admin');
2020-08-10 16:56:30.213 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 16:56:30.217 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:56:30.222 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 16:56:30.231 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 16:56:30.235 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 16:56:30 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 16:56:31.791 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:56:31 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:56:31.808 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 16:56:31 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:56:32.605 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:56:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:56:32.609 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 16:56:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:56:33.297 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:56:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:56:33.300 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 16:56:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:56:34.648 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:56:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 16:56:34.653 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 16:56:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 16:57:00.072 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:57:00.093 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 16:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-10T16:57:00.072+0800');
2020-08-10 16:57:10.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:57:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:57:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:57:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:57:10.080 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：66 毫秒
2020-08-10 16:57:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 16:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 66, '2020-08-10T16:57:10.014+0800');
2020-08-10 16:57:17.391 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:58:00.032 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:58:00.037 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 16:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T16:58:00.032+0800');
2020-08-10 16:58:10.121 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:58:10.134 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:58:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:58:10.141 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:58:10.176 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:58:10.179 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-10 16:58:10.184 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 16:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-10T16:58:10.121+0800');
2020-08-10 16:58:17.393 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 16:59:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 16:59:00.034 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 16:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T16:59:00.027+0800');
2020-08-10 16:59:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 16:59:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 16:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 16:59:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 16:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 16:59:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-10 16:59:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 16:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-10T16:59:10.011+0800');
2020-08-10 16:59:17.394 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:00:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:00:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:00:00.024+0800');
2020-08-10 17:00:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:00:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:00:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:00:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:00:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 17:00:10.044 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T17:00:10.008+0800');
2020-08-10 17:00:17.397 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:01:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:01:00.051 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:01:00.046+0800');
2020-08-10 17:01:10.100 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:01:10.110 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:01:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:01:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:01:10.147 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:01:10.153 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-10 17:01:10.158 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 51, '2020-08-10T17:01:10.100+0800');
2020-08-10 17:01:17.400 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:02:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:02:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:02:00.021+0800');
2020-08-10 17:02:10.015 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:02:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:02:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:02:10.055 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-10 17:02:10.059 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-10T17:02:10.015+0800');
2020-08-10 17:02:17.403 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:02:52.414 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:02:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:02:52.417 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:02:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:03:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:03:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T17:03:00.023+0800');
2020-08-10 17:03:10.011 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:03:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:03:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:03:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:03:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 17:03:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-10T17:03:10.011+0800');
2020-08-10 17:03:17.405 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:04:00.030 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:04:00.036 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:04:00.030+0800');
2020-08-10 17:04:10.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:04:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:04:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:04:10.064 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 17:04:10.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:04:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-10T17:04:10.023+0800');
2020-08-10 17:04:17.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:05:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:05:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:05:00.024+0800');
2020-08-10 17:05:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:05:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:05:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:05:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:05:10.055 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-10 17:05:10.058 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-10T17:05:10.021+0800');
2020-08-10 17:05:17.409 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:06:00.052 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:06:00.057 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 17:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:06:00.052+0800');
2020-08-10 17:06:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:06:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:06:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:06:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:06:10.037 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 17:06:10.041 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 17:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T17:06:10.007+0800');
2020-08-10 17:06:17.413 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:07:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:07:00.054 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:07:00.049+0800');
2020-08-10 17:07:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:07:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:07:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:07:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:07:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 17:07:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T17:07:10.008+0800');
2020-08-10 17:07:17.420 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:08:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:08:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:08:00.021+0800');
2020-08-10 17:08:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:08:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:08:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:08:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T17:08:10.018+0800');
2020-08-10 17:08:17.423 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:09:00.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:09:00.054 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:09:00.049+0800');
2020-08-10 17:09:10.209 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:09:10.238 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:09:10.244 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:09:10.269 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:09:10.273 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-08-10 17:09:10.279 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-08-10T17:09:10.209+0800');
2020-08-10 17:09:17.426 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:10:00.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:10:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:10:00.045+0800');
2020-08-10 17:10:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:10:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:10:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:10:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:10:10.036 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:10:10.039 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T17:10:10.010+0800');
2020-08-10 17:10:17.428 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:11:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:11:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:11:00.020+0800');
2020-08-10 17:11:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:11:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:11:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:11:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:11:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 17:11:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-10T17:11:10.008+0800');
2020-08-10 17:11:17.430 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:12:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:12:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:12:00.021+0800');
2020-08-10 17:12:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:12:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:12:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:12:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:12:10.036 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 17:12:10.039 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T17:12:10.008+0800');
2020-08-10 17:12:17.432 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:13:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:13:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:13:00.022+0800');
2020-08-10 17:13:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:13:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:13:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:13:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:13:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:13:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:13:10.020+0800');
2020-08-10 17:13:17.434 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:14:00.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:14:00.050 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:14:00.045+0800');
2020-08-10 17:14:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:14:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:14:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 17:14:10.052 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:14:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-10T17:14:10.017+0800');
2020-08-10 17:14:17.437 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:15:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:15:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:15:00.020+0800');
2020-08-10 17:15:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:15:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:15:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:15:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:15:10.086 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 17:15:10.090 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-10T17:15:10.045+0800');
2020-08-10 17:15:17.450 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:16:00.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:16:00.051 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 17:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:16:00.045+0800');
2020-08-10 17:16:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:16:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:16:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:16:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:16:10.032 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 17:16:10.034 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 17:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-10T17:16:10.007+0800');
2020-08-10 17:16:17.454 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:17:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:17:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:17:00.021+0800');
2020-08-10 17:17:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:17:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:17:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:17:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:17:10.040 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-10 17:17:10.043 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-10T17:17:10.010+0800');
2020-08-10 17:17:17.455 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:18:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:18:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:18:00.026+0800');
2020-08-10 17:18:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:18:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:18:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:18:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:18:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T17:18:10.017+0800');
2020-08-10 17:18:17.457 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:19:00.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:19:00.034 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:19:00.029+0800');
2020-08-10 17:19:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:19:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:19:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:19:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:19:10.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-10 17:19:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:19:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-10T17:19:10.011+0800');
2020-08-10 17:19:17.459 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:20:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:20:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:20:00.021+0800');
2020-08-10 17:20:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:20:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:20:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 17:20:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-10T17:20:10.018+0800');
2020-08-10 17:20:17.495 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:21:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:21:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:21:00.021+0800');
2020-08-10 17:21:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:21:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:21:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:21:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:21:10.036 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:21:10.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:21:10.009+0800');
2020-08-10 17:21:17.496 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:22:00.105 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:22:00.109 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:22:00.105+0800');
2020-08-10 17:22:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:22:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:22:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:22:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:22:10.036 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:22:10.039 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T17:22:10.010+0800');
2020-08-10 17:22:17.500 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:23:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:23:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:23:00.023+0800');
2020-08-10 17:23:10.006 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:23:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:23:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:23:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:23:10.037 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 17:23:10.040 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-10T17:23:10.006+0800');
2020-08-10 17:23:17.514 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:24:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:24:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:24:00.022+0800');
2020-08-10 17:24:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:24:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:24:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 17:24:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T17:24:10.018+0800');
2020-08-10 17:24:17.517 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:25:00.049 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:25:00.055 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:25:00.049+0800');
2020-08-10 17:25:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:25:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:25:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:25:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:25:10.035 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:25:10.037 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:25:10.008+0800');
2020-08-10 17:25:17.521 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:26:00.048 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:26:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 17:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:26:00.048+0800');
2020-08-10 17:26:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:26:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:26:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:26:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:26:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:26:10.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 17:26:10.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 17:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T17:26:10.041+0800');
2020-08-10 17:26:17.529 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:27:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:27:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:27:00.021+0800');
2020-08-10 17:27:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:27:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:27:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:27:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:27:10.072 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 17:27:10.075 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T17:27:10.044+0800');
2020-08-10 17:27:17.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:28:00.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:28:00.050 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:28:00.046+0800');
2020-08-10 17:28:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:28:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:28:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:28:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:28:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:28:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T17:28:10.019+0800');
2020-08-10 17:28:17.530 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:29:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:29:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:29:00.022+0800');
2020-08-10 17:29:10.006 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:29:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:29:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:29:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:29:10.032 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:29:10.035 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T17:29:10.006+0800');
2020-08-10 17:29:17.532 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:30:00.046 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:30:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:30:00.046+0800');
2020-08-10 17:30:10.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:30:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:30:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:30:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:30:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:30:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T17:30:10.016+0800');
2020-08-10 17:30:17.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:31:00.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:31:00.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:31:00.044+0800');
2020-08-10 17:31:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:31:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:31:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:31:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:31:10.070 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:31:10.073 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:31:10.043+0800');
2020-08-10 17:31:17.536 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:32:00.028 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:32:00.032 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:32:00.028+0800');
2020-08-10 17:32:10.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:32:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:32:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:32:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:32:10.034 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:32:10.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T17:32:10.007+0800');
2020-08-10 17:32:17.540 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:33:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:33:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:33:00.021+0800');
2020-08-10 17:33:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:33:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:33:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:33:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:33:10.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:33:10.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-10T17:33:10.008+0800');
2020-08-10 17:33:10.212 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:6943F463D87465021AB1C90DBDC33C07
2020-08-10 17:33:17.543 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:33:50.217 febs [http-nio-8099-exec-9] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9D9F872E17E7D6B599C0DB8321385B43
2020-08-10 17:34:00.029 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:34:00.035 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:34:00.029+0800');
2020-08-10 17:34:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:34:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:34:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:34:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 17:34:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T17:34:10.017+0800');
2020-08-10 17:34:17.546 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:35:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:35:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:35:00.022+0800');
2020-08-10 17:35:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:35:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:35:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:35:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-10 17:35:10.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-10T17:35:10.019+0800');
2020-08-10 17:35:17.560 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:36:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:36:00.031 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 17:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:36:00.025+0800');
2020-08-10 17:36:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:36:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:36:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:36:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:36:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-10 17:36:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 17:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-10T17:36:10.016+0800');
2020-08-10 17:36:17.561 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:37:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:37:00.028 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:37:00.023+0800');
2020-08-10 17:37:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:37:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:37:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:37:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:37:10.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:37:10.017+0800');
2020-08-10 17:37:17.563 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:38:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:38:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:38:00.023+0800');
2020-08-10 17:38:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:38:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:38:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:38:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:38:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T17:38:10.017+0800');
2020-08-10 17:38:17.565 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:39:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:39:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:39:00.023+0800');
2020-08-10 17:39:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:39:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:39:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:39:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:39:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-10 17:39:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-10T17:39:10.016+0800');
2020-08-10 17:39:17.566 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:40:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:40:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:40:00.022+0800');
2020-08-10 17:40:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:40:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:40:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:40:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 17:40:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T17:40:10.018+0800');
2020-08-10 17:40:17.578 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:41:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:41:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:41:00.022+0800');
2020-08-10 17:41:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:41:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:41:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:41:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:41:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 17:41:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-10T17:41:10.018+0800');
2020-08-10 17:41:17.580 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:42:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:42:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:42:00.019+0800');
2020-08-10 17:42:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:42:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:42:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:42:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-10T17:42:10.017+0800');
2020-08-10 17:42:17.583 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:43:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:43:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:43:00.018+0800');
2020-08-10 17:43:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:43:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:43:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:43:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-10 17:43:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-10T17:43:10.010+0800');
2020-08-10 17:43:17.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:44:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:44:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:44:00.016+0800');
2020-08-10 17:44:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:44:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:44:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:44:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:44:10.036 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 17:44:10.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-10T17:44:10.007+0800');
2020-08-10 17:44:17.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597049771975_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:45:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:45:00.018 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:45:00.012+0800');
2020-08-10 17:45:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:45:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:45:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-10 17:45:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-10T17:45:10.018+0800');
2020-08-10 17:45:17.270 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049771975 paused.
2020-08-10 17:45:17.286 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 17:45:17.289 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 17:45:17.289 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049771975 shutting down.
2020-08-10 17:45:17.289 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049771975 paused.
2020-08-10 17:45:17.291 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597049771975 shutdown complete.
2020-08-10 17:45:17.297 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 17:45:17.298 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 17:45:17.302 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 17:45:24.880 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11252 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 17:45:24.883 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 17:45:26.747 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 17:45:26.749 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 17:45:26.827 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-08-10 17:45:27.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f2ee75c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$896004f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.890 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6d587c20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$220dcd2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.957 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@416a4275' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$46e26fdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:27.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:45:28.434 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 17:45:28.451 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 17:45:28.462 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 17:45:28.462 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 17:45:28.470 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 17:45:28.608 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 17:45:28.608 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3651 ms
2020-08-10 17:45:29.119 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 17:45:29.131 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 17:45:29.703 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 17:45:29.703 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 17:45:29.704 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 17:45:29.704 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 17:45:30.366 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 17:45:32.847 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 17:45:32.885 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 17:45:32.901 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 17:45:32.901 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 17:45:32.906 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 17:45:32.908 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 17:45:32.910 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597052732886'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 17:45:32.910 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 17:45:32.910 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 17:45:32.912 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@122ea8dc
2020-08-10 17:45:33.003 febs [main] INFO  p6spy - 2020-08-10 17:45:33 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 17:45:35.249 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 17:45:35.567 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 17:45:35.568 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 17:45:35.569 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 17:45:35.569 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 17:45:35.569 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 17:45:35.569 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 17:45:35.655 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7be9e9fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2cbae0f1, org.springframework.security.web.header.HeaderWriterFilter@3f2feab7, org.springframework.security.web.authentication.logout.LogoutFilter@3af6d7a7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e7563f6, org.springframework.security.web.session.ConcurrentSessionFilter@7a25f8ee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d8cece4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d50e7f6, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1c3400df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e864fa4, org.springframework.security.web.session.SessionManagementFilter@2738a1fc, org.springframework.security.web.access.ExceptionTranslationFilter@1a5c0b8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2cf97875]
2020-08-10 17:45:35.721 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 17:45:35.749 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 17:45:35.751 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 17:45:36.261 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 17:45:37.168 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 17:45:37.189 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 17:45:37.284 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 17:45:37.316 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 17:45:37.334 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 17:45:37.372 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 17:45:37.378 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.571 seconds (JVM running for 14.89)
2020-08-10 17:45:37.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 17:45:37.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 17:45:37.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 17:45:37.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 17:45:37.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 17:45:37.803 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 17:45:37.804 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 17:45:37.822 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-10 17:45:38.228 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-10 17:45:38 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 17:45:38.318 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 17:45:38.328 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 17:45:38.329 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597049771975"'s failed in-progress jobs.
2020-08-10 17:45:38.345 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597052732886 started.
2020-08-10 17:45:38.350 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:45:41.633 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9316670796E41AEEB07C599C8EEFC715
2020-08-10 17:45:44.640 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:45:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 17:45:44.748 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:45:44 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 17:45:44.764 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:45:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 17:45:45.288 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:45:45.508 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T17:45:45.454+0800' WHERE (USERNAME = 'admin');
2020-08-10 17:45:45.532 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 17:45:45.537 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 17:45:45.542 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 17:45:45.550 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 17:45:45.555 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:45:45 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 17:45:50.444 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:45:50 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '1');
2020-08-10 17:45:50.466 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:45:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (4));
2020-08-10 17:45:50.482 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:45:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (4)) ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:46:00.058 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:46:00.075 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T17:46:00.058+0800');
2020-08-10 17:46:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:46:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:46:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:46:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:46:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-10 17:46:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 61, '2020-08-10T17:46:10.020+0800');
2020-08-10 17:46:14.350 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:47:00.053 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:47:00.058 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:47:00.053+0800');
2020-08-10 17:47:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:47:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:47:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:47:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 17:47:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T17:47:10.020+0800');
2020-08-10 17:47:14.352 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:48:00.026 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:48:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:48:00.026+0800');
2020-08-10 17:48:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:48:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:48:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:48:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:48:10.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 17:48:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-10T17:48:10.020+0800');
2020-08-10 17:48:14.353 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:49:00.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:49:00.056 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-10 17:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:49:00.050+0800');
2020-08-10 17:49:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:49:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:49:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 17:49:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-10 17:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T17:49:10.017+0800');
2020-08-10 17:49:14.355 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:50:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:50:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-10 17:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:50:00.023+0800');
2020-08-10 17:50:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:50:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:50:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:50:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-10 17:50:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-10 17:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-10T17:50:10.017+0800');
2020-08-10 17:50:14.356 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:50:19.224 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 17:50:19.233 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 17:50:19.241 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 17:50:19.250 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 17:50:19.257 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 17:50:19.261 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:50:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 17:51:00.015 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:51:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-10 17:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-10T17:51:00.014+0800');
2020-08-10 17:51:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:51:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:51:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:51:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:51:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-10 17:51:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-10 17:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-10T17:51:10.008+0800');
2020-08-10 17:51:14.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:52:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:52:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-10 17:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:52:00.021+0800');
2020-08-10 17:52:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:52:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:52:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:52:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:52:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-10 17:52:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-10 17:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-10T17:52:10.018+0800');
2020-08-10 17:52:14.362 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:53:00.023 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:53:00.030 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-10 17:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:53:00.023+0800');
2020-08-10 17:53:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:53:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:53:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:53:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:53:10.064 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-10 17:53:10.068 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-10 17:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-10T17:53:10.020+0800');
2020-08-10 17:53:14.364 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:53:21.822 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:53:21.889 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-10 17:53:21.895 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-10 17:53:21.900 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-10 17:53:21.904 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-10 17:53:21.910 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-10 17:53:21.916 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-10 17:53:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-10 17:53:23.214 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:53:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '1');
2020-08-10 17:53:23.221 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:53:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (4));
2020-08-10 17:53:23.224 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:53:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (4)) ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:53:40.955 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:53:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:53:41.075 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:53:41 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-10 17:53:41.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:53:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-10 17:53:41.086 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:53:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:53:49.185 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:53:49 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:53:49.296 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 17:53:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-10 17:53:49.304 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 17:53:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-10 17:53:49.309 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 17:53:49 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:53:57.017 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-10 17:53:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:53:57.124 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 17:53:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-10 17:53:57.132 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 17:53:57 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:53:57.135 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 17:53:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:54:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:54:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-10 17:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:54:00.022+0800');
2020-08-10 17:54:10.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:54:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:54:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:54:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:54:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:54:10.081 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-10 17:54:10.085 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-10 17:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-10T17:54:10.023+0800');
2020-08-10 17:54:14.369 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:55:00.027 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:55:00.056 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-10 17:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T17:55:00.027+0800');
2020-08-10 17:55:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:55:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:55:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:55:10.056 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-10 17:55:10.059 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-10 17:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-10T17:55:10.017+0800');
2020-08-10 17:55:14.371 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:55:55.438 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:55:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:55:55.544 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 17:55:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-10 17:56:08.136 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:56:08.146 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:56:08 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-10T17:56:08.136+0800');
2020-08-10 17:56:08.163 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 17:56:08 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:56:08.196 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 17:56:08 | 耗时 16 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:56:32.285 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:56:32.302 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:56:32 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:56:32.314 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:56:32 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:56:32.341 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:56:32 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:56:32.344 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-10 17:56:32.349 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:56:32 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-10T17:56:32.285+0800');
2020-08-10 17:56:44.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:57:00.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:57:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 17:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:57:00.017+0800');
2020-08-10 17:57:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:57:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:57:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:57:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-10 17:57:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 17:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-10T17:57:10.018+0800');
2020-08-10 17:57:18.788 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:57:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:57:37.057 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:57:37.125 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:57:37 | 耗时 13 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-10 17:57:58.339 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:57:58 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:57:58.370 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-10 17:57:58 | 耗时 15 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:58:02.367 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:58:02.372 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 17:58:02 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-10T17:58:02.367+0800');
2020-08-10 17:58:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:58:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:58:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:58:10.065 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-10 17:58:10.070 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 17:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 55, '2020-08-10T17:58:10.010+0800');
2020-08-10 17:58:16.550 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597052732886_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:58:40.627 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597052732886 paused.
2020-08-10 17:58:40.639 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 17:58:40.643 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 17:58:40.643 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597052732886 shutting down.
2020-08-10 17:58:40.643 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597052732886 paused.
2020-08-10 17:58:40.644 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597052732886 shutdown complete.
2020-08-10 17:58:40.650 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 17:58:40.651 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 17:58:40.654 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-10 17:58:50.866 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 2680 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-10 17:58:50.871 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-10 17:58:52.686 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-10 17:58:52.688 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-10 17:58:52.756 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-10 17:58:53.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$33e8d5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca5a64d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$ae52dc02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$63082d0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.782 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@22686ddb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$87dccfbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:53.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-10 17:58:54.253 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-10 17:58:54.272 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-10 17:58:54.283 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-10 17:58:54.283 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-10 17:58:54.291 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-10 17:58:54.420 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-10 17:58:54.421 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3457 ms
2020-08-10 17:58:54.860 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-10 17:58:54.870 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-10 17:58:55.393 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-10 17:58:55.393 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-10 17:58:55.393 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-10 17:58:55.393 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-10 17:58:55.990 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-10 17:58:58.343 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-10 17:58:58.382 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-10 17:58:58.398 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-10 17:58:58.398 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-10 17:58:58.403 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-10 17:58:58.405 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-10 17:58:58.406 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597053538384'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-10 17:58:58.406 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-10 17:58:58.406 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-10 17:58:58.407 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7fe0ca60
2020-08-10 17:58:58.494 febs [main] INFO  p6spy - 2020-08-10 17:58:58 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-10 17:59:00.707 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-10 17:59:01.015 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-10 17:59:01.015 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-10 17:59:01.016 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-10 17:59:01.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e0600a4, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d1da00b, org.springframework.security.web.header.HeaderWriterFilter@ab5dde4, org.springframework.security.web.authentication.logout.LogoutFilter@6abaa14b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21457b14, org.springframework.security.web.session.ConcurrentSessionFilter@53086bdc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cef5fc9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d26c6a2, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7e1ae693, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@341141ab, org.springframework.security.web.session.SessionManagementFilter@255482cb, org.springframework.security.web.access.ExceptionTranslationFilter@12d8e6b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75b6bd41]
2020-08-10 17:59:01.163 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-10 17:59:01.184 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-10 17:59:01.185 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-10 17:59:01.669 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-10 17:59:02.484 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-10 17:59:02.501 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-10 17:59:02.576 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-10 17:59:02.601 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-10 17:59:02.616 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-10 17:59:02.652 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-10 17:59:02.656 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.693 seconds (JVM running for 14.075)
2020-08-10 17:59:02.685 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-10 17:59:02.685 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-10 17:59:02.685 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-10 17:59:02.685 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-10 17:59:02.685 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-10 17:59:03.193 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-10 17:59:03.193 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-10 17:59:03.212 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-10 17:59:03 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-10 17:59:03.216 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-10 17:59:03.603 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-10 17:59:03.614 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-10 17:59:03.615 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597052732886"'s failed in-progress jobs.
2020-08-10 17:59:03.632 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597053538384 started.
2020-08-10 17:59:03.637 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597053538384_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:59:03.680 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 17:59:03.740 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-10 17:59:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-10T17:59:03.680+0800');
2020-08-10 17:59:06.164 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B3EE03F6D76466ADAC02596FD0C8A7EA
2020-08-10 17:59:09.397 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:59:09 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-10 17:59:09.523 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:59:09 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-10 17:59:09.541 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-10 17:59:09 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-10 17:59:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 17:59:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 17:59:10.103 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 17:59:10.152 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 17:59:10.157 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：141 毫秒
2020-08-10 17:59:10.163 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 141, '2020-08-10T17:59:10.016+0800');
2020-08-10 17:59:10.184 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-10 17:59:10.380 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-10T17:59:10.364+0800' WHERE (USERNAME = 'admin');
2020-08-10 17:59:10.395 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-10 17:59:10.399 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 17:59:10.405 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-10 17:59:10.412 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-10 17:59:10.419 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-10 17:59:10 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-10 17:59:13.102 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-10 17:59:13 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-10 17:59:15.636 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597053538384_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 17:59:20.128 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 17:59:20 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:59:20.149 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-10 17:59:20 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 17:59:23.577 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 17:59:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-10 17:59:23.582 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-10 17:59:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-10 18:00:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 18:00:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-10 18:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T18:00:00.025+0800');
2020-08-10 18:00:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 18:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 18:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 18:00:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 18:00:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-10 18:00:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-10 18:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-10T18:00:10.020+0800');
2020-08-10 18:00:15.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597053538384_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 18:01:00.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-10 18:01:00.035 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-10 18:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-10T18:01:00.029+0800');
2020-08-10 18:01:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-10 18:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-10 18:01:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-10 18:01:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-10 18:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-10 18:01:10.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-10 18:01:10.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-10 18:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-10T18:01:10.019+0800');
2020-08-10 18:01:15.661 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597053538384_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-10 18:01:19.832 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597053538384 paused.
2020-08-10 18:01:19.844 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-10 18:01:19.849 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-10 18:01:19.849 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597053538384 shutting down.
2020-08-10 18:01:19.849 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597053538384 paused.
2020-08-10 18:01:19.850 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597053538384 shutdown complete.
2020-08-10 18:01:19.857 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-10 18:01:19.858 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-10 18:01:19.864 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
