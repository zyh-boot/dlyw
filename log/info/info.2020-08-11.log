2020-08-11 09:01:39.303 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14764 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 09:01:39.306 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 09:01:41.059 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:01:41.062 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 09:01:41.127 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-11 09:01:41.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d809328] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.777 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3f22257] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.902 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$87ea9986] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3c9fea91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@c2cf597' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$61748d43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:41.973 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:01:42.368 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 09:01:42.385 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 09:01:42.394 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 09:01:42.395 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 09:01:42.401 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 09:01:42.507 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 09:01:42.507 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3138 ms
2020-08-11 09:01:42.862 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 09:01:42.872 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 09:01:43.420 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 09:01:43.421 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 09:01:43.421 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 09:01:43.421 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 09:01:43.974 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 09:01:46.059 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 09:01:46.093 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 09:01:46.107 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 09:01:46.107 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 09:01:46.111 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 09:01:46.112 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 09:01:46.114 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597107706095'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 09:01:46.114 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 09:01:46.114 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 09:01:46.115 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@30ef32eb
2020-08-11 09:01:46.190 febs [main] INFO  p6spy - 2020-08-11 09:01:46 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 09:01:48.146 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 09:01:48.404 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 09:01:48.476 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2435c6ae, org.springframework.security.web.context.SecurityContextPersistenceFilter@12f3fcd, org.springframework.security.web.header.HeaderWriterFilter@903c13, org.springframework.security.web.authentication.logout.LogoutFilter@2e030cc1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40db6136, org.springframework.security.web.session.ConcurrentSessionFilter@56a9b662, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12ebfb2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79ee779c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@70aa03c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@574f9e36, org.springframework.security.web.session.SessionManagementFilter@36ab69d9, org.springframework.security.web.access.ExceptionTranslationFilter@178ba69f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5d98364c]
2020-08-11 09:01:48.528 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 09:01:48.542 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 09:01:48.543 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 09:01:48.946 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 09:01:49.589 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 09:01:49.606 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 09:01:49.664 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 09:01:49.684 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 09:01:49.699 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 09:01:49.727 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 09:01:49.730 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.308 seconds (JVM running for 12.766)
2020-08-11 09:01:49.753 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 09:01:49.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 09:01:49.755 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 09:01:49.755 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 09:01:49.755 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 09:01:49.875 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 09:01:49.875 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 09:01:49.892 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-11 09:01:50.257 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 09:01:50 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-11 09:01:50.685 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 09:01:50.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 09:01:50.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597053538384"'s failed in-progress jobs.
2020-08-11 09:01:50.706 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597107706095 started.
2020-08-11 09:01:50.712 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 09:01:50.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:01:53.809 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6132E423437472C44C24D1CFAFC6870D
2020-08-11 09:02:00.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:02:00.098 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T09:02:00.053+0800');
2020-08-11 09:02:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:02:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:02:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:02:10.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:02:10.106 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：86 毫秒
2020-08-11 09:02:10.110 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 86, '2020-08-11T09:02:10.020+0800');
2020-08-11 09:02:14.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:02:40.658 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:02:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 09:02:40.744 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:02:40 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 09:02:40.757 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:02:40 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 09:02:41.274 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:02:41.411 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T09:02:41.399+0800' WHERE (USERNAME = 'admin');
2020-08-11 09:02:41.426 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 09:02:41.432 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:02:41.435 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:02:41.441 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 09:02:41.447 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:02:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 09:03:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:03:00.032 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:03:00.026+0800');
2020-08-11 09:03:10.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:03:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:03:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:03:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:03:10.058 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 09:03:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T09:03:10.025+0800');
2020-08-11 09:03:14.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:03:18.507 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:03:18.521 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:03:18.525 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:03:18.530 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:03:18.536 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:03:18.540 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:03:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:03:25.311 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:03:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '1');
2020-08-11 09:03:25.320 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:03:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (4));
2020-08-11 09:03:25.333 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:03:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (4)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:03:26.495 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:03:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 09:03:26.498 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:03:29.631 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:03:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 09:03:29.633 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:03:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:03:32.290 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:03:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 09:03:32.293 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:03:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:04:00.028 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:04:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:04:00.028+0800');
2020-08-11 09:04:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:04:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:04:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:04:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 09:04:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T09:04:10.023+0800');
2020-08-11 09:04:14.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:05:00.027 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:05:00.032 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:05:00.027+0800');
2020-08-11 09:05:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:05:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:05:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:05:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:05:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:05:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T09:05:10.022+0800');
2020-08-11 09:05:14.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:06:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:06:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:06:00.022+0800');
2020-08-11 09:06:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:06:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:06:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:06:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:06:10.053 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 09:06:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T09:06:10.021+0800');
2020-08-11 09:06:14.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:07:00.028 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:07:00.033 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 09:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:07:00.028+0800');
2020-08-11 09:07:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:07:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:07:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:07:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:07:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:07:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 09:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T09:07:10.022+0800');
2020-08-11 09:07:14.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:08:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:08:00.029 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 09:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:08:00.025+0800');
2020-08-11 09:08:10.058 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:08:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:08:10 | 耗时 6 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:08:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:08:10.224 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:08:10 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:08:10.239 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：180 毫秒
2020-08-11 09:08:10.259 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 09:08:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 180, '2020-08-11T09:08:10.058+0800');
2020-08-11 09:08:14.792 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:09:00.026 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:09:00.030 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 09:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:09:00.026+0800');
2020-08-11 09:09:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:09:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:09:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:09:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:09:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 09:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T09:09:10.017+0800');
2020-08-11 09:09:14.794 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:09:47.898 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 09:09:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:09:47.933 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:09:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 09:09:47.935 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:09:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:09:49.348 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:09:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 09:09:49.352 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:09:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 09:09:49.355 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:09:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:09:51.067 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:09:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 09:09:51.071 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:09:51 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 09:09:51.073 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:09:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:09:52.345 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:09:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 09:10:00.025 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:10:00.030 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 09:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:10:00.025+0800');
2020-08-11 09:10:10.024 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:10:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:10:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:10:10.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:10:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 09:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T09:10:10.024+0800');
2020-08-11 09:10:14.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:11:00.049 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:11:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 09:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:11:00.049+0800');
2020-08-11 09:11:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:11:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:11:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:11:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:11:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:11:10.037 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 09:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T09:11:10.008+0800');
2020-08-11 09:11:14.798 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:11:38.543 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:11:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 09:11:38.545 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:11:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:11:38.550 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:11:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 09:11:38.551 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:11:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:11:41.128 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:11:41.132 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:11:41.136 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:11:41.141 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:11:41.144 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:11:41.147 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:11:45.090 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:11:45.093 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:11:45.097 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:11:45.102 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:11:45.105 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:11:45.108 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:11:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:12:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:12:00.039 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 10, '2020-08-11T09:12:00.024+0800');
2020-08-11 09:12:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:12:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:12:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:12:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:12:10.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:12:10.055 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T09:12:10.021+0800');
2020-08-11 09:12:14.803 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:12:55.684 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:12:55.728 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:12:55.732 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:12:55.737 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:12:55.741 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:12:55.745 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:12:55.749 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:12:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:13:00.012 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 09:13:00.014 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:00 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:13:00.019 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 09:13:00.021 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:13:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:13:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:13:00.021+0800');
2020-08-11 09:13:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:13:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:13:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:13:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:13:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T09:13:10.018+0800');
2020-08-11 09:13:11.878 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:13:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 09:13:11.880 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:13:14.457 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:13:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 1;
2020-08-11 09:13:14.803 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:13:36.208 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 09:13:36.841 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 09:13:36.845 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 09:13:36.847 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:13:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:13:37.301 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 09:13:37.304 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:13:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 09:13:37.306 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:13:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 09:13:39.877 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:13:39 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:13:51.561 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:13:51 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '县级设备列表', URL = '/amyequipment/myequipment/index_county', PERMS = '', ICON = '', TYPE = '0', ORDER_NUM = 4, MODIFY_TIME = '2020-08-11T09:13:51.557+0800' WHERE MENU_ID = 399;
2020-08-11 09:13:51.584 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:13:51 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:13:51.592 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-11 09:13:51 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 8, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=399, parentId=358, menuName=县级设备列表, url=/amyequipment/myequipment/index_county, perms=, icon=, type=0, orderNum=4, createTime=null, modifyTime=Tue Aug 11 09:13:51 CST 2020)"', '192.168.1.113', '2020-08-11T09:13:51.578+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-11 09:13:57.254 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:13:57 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '乡级设备列表', URL = '/amyequipment/myequipment/index_township', PERMS = '', ICON = '', TYPE = '0', ORDER_NUM = 5, MODIFY_TIME = '2020-08-11T09:13:57.252+0800' WHERE MENU_ID = 400;
2020-08-11 09:13:57.262 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-11 09:13:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=400, parentId=358, menuName=乡级设备列表, url=/amyequipment/myequipment/index_township, perms=, icon=, type=0, orderNum=5, createTime=null, modifyTime=Tue Aug 11 09:13:57 CST 2020)"', '192.168.1.113', '2020-08-11T09:13:57.258+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-11 09:13:57.269 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 09:13:57 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:14:00.026 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:14:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:14:00.026+0800');
2020-08-11 09:14:02.293 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:14:02 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 358, MENU_NAME = '村级设备列表', URL = '/amyequipment/myequipment/index_village', PERMS = '', ICON = '', TYPE = '0', ORDER_NUM = 6, MODIFY_TIME = '2020-08-11T09:14:02.290+0800' WHERE MENU_ID = 401;
2020-08-11 09:14:02.312 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-11 09:14:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 17, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=401, parentId=358, menuName=村级设备列表, url=/amyequipment/myequipment/index_village, perms=, icon=, type=0, orderNum=6, createTime=null, modifyTime=Tue Aug 11 09:14:02 CST 2020)"', '192.168.1.113', '2020-08-11T09:14:02.307+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-11 09:14:02.318 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:14:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:14:05.925 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:14:05 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:14:05.966 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:14:05 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:14:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:14:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:14:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:14:10.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:14:10.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T09:14:10.020+0800');
2020-08-11 09:14:14.806 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:15:00.025 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:15:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:15:00.025+0800');
2020-08-11 09:15:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:15:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:15:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:15:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:15:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T09:15:10.017+0800');
2020-08-11 09:15:14.810 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:16:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:16:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:16:00.022+0800');
2020-08-11 09:16:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:16:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:16:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:16:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:16:10.039 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 09:16:10.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T09:16:10.009+0800');
2020-08-11 09:16:14.812 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:17:00.013 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:17:00.018 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 09:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:17:00.012+0800');
2020-08-11 09:17:10.006 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:17:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:17:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:17:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:17:10.034 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:17:10.037 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 09:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T09:17:10.006+0800');
2020-08-11 09:17:13.930 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:17:13.934 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:17:13.937 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:17:13.941 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:17:13.944 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:17:13.947 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:17:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:17:14.812 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:18:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:18:00.029 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 09:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:18:00.026+0800');
2020-08-11 09:18:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:18:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:18:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:18:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:18:10.037 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 09:18:10.039 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 09:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T09:18:10.010+0800');
2020-08-11 09:18:14.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:19:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:19:00.017 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 09:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:19:00.012+0800');
2020-08-11 09:19:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:19:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:19:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:19:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:19:10.035 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:19:10.037 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 09:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T09:19:10.009+0800');
2020-08-11 09:19:14.820 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:20:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:20:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 09:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:20:00.019+0800');
2020-08-11 09:20:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:20:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:20:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:20:10.055 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 09:20:10.057 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 09:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T09:20:10.018+0800');
2020-08-11 09:20:14.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:21:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:21:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 09:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:21:00.024+0800');
2020-08-11 09:21:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:21:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:21:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:21:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:21:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 09:21:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 09:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T09:21:10.018+0800');
2020-08-11 09:21:14.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:22:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:22:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:22:00.025+0800');
2020-08-11 09:22:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:22:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:22:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:22:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:22:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T09:22:10.022+0800');
2020-08-11 09:22:14.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:23:00.033 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:23:00.039 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:23:00.033+0800');
2020-08-11 09:23:10.007 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:23:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:23:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:23:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:23:10.033 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:23:10.035 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T09:23:10.007+0800');
2020-08-11 09:23:14.830 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:24:00.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:24:00.057 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:24:00.054+0800');
2020-08-11 09:24:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:24:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:24:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:24:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:24:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T09:24:10.018+0800');
2020-08-11 09:24:14.831 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:25:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:25:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:25:00.021+0800');
2020-08-11 09:25:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:25:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:25:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:25:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 09:25:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T09:25:10.020+0800');
2020-08-11 09:25:14.834 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597107706095_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:25:52.192 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20388 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 09:25:52.194 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 09:25:53.746 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:25:53.748 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 09:25:53.825 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-08-11 09:25:54.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bda8a232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$541a3161] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.636 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3812a890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ecc7f99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5234b61a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$119c9c4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:54.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:25:55.112 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 09:25:55.126 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 09:25:55.135 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 09:25:55.135 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 09:25:55.141 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 09:25:55.248 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 09:25:55.248 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2996 ms
2020-08-11 09:25:55.585 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 09:25:55.593 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 09:25:56.055 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 09:25:56.055 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 09:25:56.055 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 09:25:56.055 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 09:25:56.543 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 09:25:58.545 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 09:25:58.575 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 09:25:58.587 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 09:25:58.587 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 09:25:58.590 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 09:25:58.592 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 09:25:58.593 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597109158576'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 09:25:58.593 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 09:25:58.593 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 09:25:58.594 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@12421766
2020-08-11 09:25:58.667 febs [main] INFO  p6spy - 2020-08-11 09:25:58 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 09:26:00.610 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 09:26:00.853 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 09:26:00.854 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 09:26:00.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@129c322f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6fc6f68f, org.springframework.security.web.header.HeaderWriterFilter@1fd35a92, org.springframework.security.web.authentication.logout.LogoutFilter@441016d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1aca6dc3, org.springframework.security.web.session.ConcurrentSessionFilter@44da745f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30437e9c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@438c0aaf, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@bc4a9b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1bbef3c7, org.springframework.security.web.session.SessionManagementFilter@5ced0537, org.springframework.security.web.access.ExceptionTranslationFilter@cea67b1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2051a0ec]
2020-08-11 09:26:00.972 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 09:26:00.986 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 09:26:00.987 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 09:26:01.376 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 09:26:02.018 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 09:26:02.033 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 09:26:02.097 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 09:26:02.118 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 09:26:02.133 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 09:26:02.162 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 09:26:02.166 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.775 seconds (JVM running for 11.788)
2020-08-11 09:26:02.189 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 09:26:02.189 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 09:26:02.189 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 09:26:02.189 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 09:26:02.189 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 09:26:02.374 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 09:26:02.374 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 09:26:02.390 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 09:26:02 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 09:26:02.393 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-11 09:26:03.119 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 09:26:03.129 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 09:26:03.129 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597107706095"'s failed in-progress jobs.
2020-08-11 09:26:03.134 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-11 09:26:03.145 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597109158576 started.
2020-08-11 09:26:03.150 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:26:03.183 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:26:03.222 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:26:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-11T09:26:03.183+0800');
2020-08-11 09:26:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:26:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:26:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:26:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:26:10.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:26:10.110 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：88 毫秒
2020-08-11 09:26:10.114 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 88, '2020-08-11T09:26:10.022+0800');
2020-08-11 09:26:13.368 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:3AFFA4AADD49970F379D5678AED9C5BB
2020-08-11 09:26:15.152 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:26:15.750 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:26:15 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 09:26:15.831 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:26:15 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 09:26:15.843 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:26:15 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 09:26:16.271 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:26:16.385 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T09:26:16.377+0800' WHERE (USERNAME = 'admin');
2020-08-11 09:26:16.396 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 09:26:16.400 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:26:16.403 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:26:16.409 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 09:26:16.415 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:26:16 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 09:26:23.119 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:26:23 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:26:36.202 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:26:36 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 388, MENU_NAME = '污染项排名', URL = '/rank/myequipment/pollution', PERMS = '', ICON = '', TYPE = '0', MODIFY_TIME = '2020-08-11T09:26:36.197+0800' WHERE MENU_ID = 393;
2020-08-11 09:26:36.231 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 09:26:36 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:26:36.236 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-11 09:26:36 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 11, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=393, parentId=388, menuName=污染项排名, url=/rank/myequipment/pollution, perms=, icon=, type=0, orderNum=null, createTime=null, modifyTime=Tue Aug 11 09:26:36 CST 2020)"', '192.168.1.113', '2020-08-11T09:26:36.221+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-11 09:26:38.162 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:26:38 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:26:38.207 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:26:38 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 09:26:39.615 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:26:39.629 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:26:39.634 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:26:39.638 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:26:39.643 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:26:39.648 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:26:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:27:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:27:00.037 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:27:00.030+0800');
2020-08-11 09:27:10.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:27:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:27:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:27:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:27:10.085 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 09:27:10.088 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T09:27:10.053+0800');
2020-08-11 09:27:15.156 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:28:00.026 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:28:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:28:00.026+0800');
2020-08-11 09:28:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:28:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:28:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:28:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 09:28:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T09:28:10.021+0800');
2020-08-11 09:28:15.070 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:28:15.127 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:28:15.133 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:28:15.138 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:28:15.146 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:28:15.151 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:28:15.155 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:28:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:28:15.156 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:29:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:29:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:29:00.021+0800');
2020-08-11 09:29:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:29:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:29:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:29:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:29:10.056 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 09:29:10.059 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T09:29:10.023+0800');
2020-08-11 09:29:15.161 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:30:00.026 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:30:00.032 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:30:00.026+0800');
2020-08-11 09:30:03.893 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:30:03.953 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:30:03.959 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:30:03.965 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:30:03.969 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:30:03.974 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:30:03.979 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:30:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:30:10.023 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:30:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:30:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:30:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:30:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:30:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T09:30:10.023+0800');
2020-08-11 09:30:15.162 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:31:00.027 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:31:00.032 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 09:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:31:00.027+0800');
2020-08-11 09:31:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:31:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:31:10.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 09:31:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 09:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T09:31:10.020+0800');
2020-08-11 09:31:15.164 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:32:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:32:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 09:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:32:00.026+0800');
2020-08-11 09:32:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:32:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:32:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:32:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 09:32:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 09:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T09:32:10.020+0800');
2020-08-11 09:32:15.166 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:32:48.572 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:32:48.577 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:32:48.581 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:32:48.585 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:32:48.589 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:32:48.592 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:32:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:33:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:33:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 09:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:33:00.024+0800');
2020-08-11 09:33:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:33:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:33:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:33:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 09:33:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 09:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T09:33:10.019+0800');
2020-08-11 09:33:15.170 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:33:33.574 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 09:33:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:34:00.015 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:34:00.020 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 09:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:34:00.015+0800');
2020-08-11 09:34:02.837 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 09:34:02.840 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 09:34:02.843 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 09:34:02.846 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 09:34:02.849 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 09:34:02.853 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:34:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 09:34:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:34:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:34:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 09:34:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 09:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T09:34:10.018+0800');
2020-08-11 09:34:15.170 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:35:00.051 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:35:00.055 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 09:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:35:00.051+0800');
2020-08-11 09:35:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:35:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:35:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:35:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:35:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:35:10.052 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 09:35:10.055 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 09:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T09:35:10.018+0800');
2020-08-11 09:35:15.174 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:36:00.028 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:36:00.034 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T09:36:00.028+0800');
2020-08-11 09:36:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:36:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:36:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:36:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:36:10.076 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:36:10.079 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T09:36:10.045+0800');
2020-08-11 09:36:15.177 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:37:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:37:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:37:00.014+0800');
2020-08-11 09:37:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:37:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:37:10.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 09:37:10.054 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T09:37:10.018+0800');
2020-08-11 09:37:15.189 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:38:00.142 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:38:00.146 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:38:00.142+0800');
2020-08-11 09:38:10.026 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:38:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:38:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:38:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:38:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:38:10.081 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-11 09:38:10.086 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 55, '2020-08-11T09:38:10.026+0800');
2020-08-11 09:38:15.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:39:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:39:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:39:00.017+0800');
2020-08-11 09:39:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:39:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:39:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:39:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:39:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T09:39:10.018+0800');
2020-08-11 09:39:15.197 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:40:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:40:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:40:00.024+0800');
2020-08-11 09:40:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:40:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:40:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:40:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:40:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:40:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T09:40:10.019+0800');
2020-08-11 09:40:15.201 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:41:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:41:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 09:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:41:00.020+0800');
2020-08-11 09:41:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:41:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:41:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:41:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:41:10.035 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 09:41:10.038 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 09:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T09:41:10.008+0800');
2020-08-11 09:41:15.201 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:42:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:42:00.030 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 09:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:42:00.025+0800');
2020-08-11 09:42:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:42:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:42:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 09:42:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 09:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T09:42:10.018+0800');
2020-08-11 09:42:15.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:43:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:43:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 09:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:43:00.024+0800');
2020-08-11 09:43:10.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:43:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:43:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:43:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:43:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 09:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T09:43:10.022+0800');
2020-08-11 09:43:15.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:44:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:44:00.026 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 09:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T09:44:00.020+0800');
2020-08-11 09:44:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:44:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:44:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:44:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:44:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:44:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 09:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T09:44:10.017+0800');
2020-08-11 09:44:15.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:45:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:45:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 09:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:45:00.022+0800');
2020-08-11 09:45:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:45:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:45:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 09:45:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 09:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T09:45:10.017+0800');
2020-08-11 09:45:15.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:46:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:46:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:46:00.024+0800');
2020-08-11 09:46:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:46:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:46:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:46:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T09:46:10.018+0800');
2020-08-11 09:46:15.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:47:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:47:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:47:00.020+0800');
2020-08-11 09:47:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:47:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:47:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:47:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:47:10.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 09:47:10.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T09:47:10.021+0800');
2020-08-11 09:47:15.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:48:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:48:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:48:00.027+0800');
2020-08-11 09:48:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:48:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:48:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:48:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T09:48:10.021+0800');
2020-08-11 09:48:15.215 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:49:00.049 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:49:00.052 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:49:00.049+0800');
2020-08-11 09:49:10.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:49:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:49:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:49:10.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 09:49:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T09:49:10.016+0800');
2020-08-11 09:49:15.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:50:00.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:50:00.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:50:00.044+0800');
2020-08-11 09:50:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:50:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:50:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:50:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 09:50:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T09:50:10.021+0800');
2020-08-11 09:50:15.218 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597109158576_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:50:23.196 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 21264 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 09:50:23.199 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 09:50:24.647 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:50:24.649 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 09:50:24.711 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-11 09:50:25.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6051ca0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f6c3593c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$dabbd06b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8f712176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@217235f5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b445c428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:50:25.872 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 09:50:25.886 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 09:50:25.894 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 09:50:25.895 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 09:50:25.901 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 09:50:26.004 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 09:50:26.004 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2740 ms
2020-08-11 09:50:26.342 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 09:50:26.350 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 09:50:26.825 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 09:50:26.825 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 09:50:26.825 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 09:50:26.825 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 09:50:27.307 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 09:50:29.303 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 09:50:29.334 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 09:50:29.345 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 09:50:29.345 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 09:50:29.348 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 09:50:29.350 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 09:50:29.351 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597110629335'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 09:50:29.351 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 09:50:29.351 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 09:50:29.352 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5cd71ee2
2020-08-11 09:50:29.425 febs [main] INFO  p6spy - 2020-08-11 09:50:29 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 09:50:31.306 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 09:50:31.540 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 09:50:31.540 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 09:50:31.540 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:50:31.540 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 09:50:31.540 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 09:50:31.541 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 09:50:31.542 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 09:50:31.615 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c0930c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@20f99c18, org.springframework.security.web.header.HeaderWriterFilter@391e5ffa, org.springframework.security.web.authentication.logout.LogoutFilter@5ffdd510, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ed84be9, org.springframework.security.web.session.ConcurrentSessionFilter@1f6d7e7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76e2a621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ba402b5, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6fbcc078, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75c0cd39, org.springframework.security.web.session.SessionManagementFilter@470b5213, org.springframework.security.web.access.ExceptionTranslationFilter@2e030cc1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@522f0bb8]
2020-08-11 09:50:31.666 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 09:50:31.682 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 09:50:31.684 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 09:50:32.097 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 09:50:32.752 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 09:50:32.767 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 09:50:32.833 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 09:50:32.879 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 09:50:32.892 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 09:50:32.922 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 09:50:32.926 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.417 seconds (JVM running for 11.834)
2020-08-11 09:50:32.947 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 09:50:32.947 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 09:50:32.947 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 09:50:32.947 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 09:50:32.947 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 09:50:33.739 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 09:50:33.739 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 09:50:33.751 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-11 09:50:33 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 09:50:33.754 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-11 09:50:33.880 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 09:50:33.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 09:50:33.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597109158576"'s failed in-progress jobs.
2020-08-11 09:50:33.971 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110629335 started.
2020-08-11 09:50:33.981 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:50:56.443 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6C224958F788E30F9DF263B08DB517F1
2020-08-11 09:51:00.051 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:51:00.093 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T09:51:00.051+0800');
2020-08-11 09:51:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:51:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:51:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:51:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:51:10.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:51:10.109 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：86 毫秒
2020-08-11 09:51:10.113 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 86, '2020-08-11T09:51:10.023+0800');
2020-08-11 09:51:21.978 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:52:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:52:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:52:00.025+0800');
2020-08-11 09:52:09.407 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9AB50CDEDB99E0B9C278268CE4E58D28
2020-08-11 09:52:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:52:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:52:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:52:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:52:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:52:10.064 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-11 09:52:10.068 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-11T09:52:10.019+0800');
2020-08-11 09:52:11.873 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:52:11 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 09:52:11.958 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:52:11 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 09:52:11.969 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:52:11 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 09:52:12.513 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:52:12.657 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T09:52:12.648+0800' WHERE (USERNAME = 'admin');
2020-08-11 09:52:12.680 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 09:52:12.684 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:52:12.687 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:52:12.693 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 09:52:12.696 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:52:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 09:52:14.654 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:52:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 09:52:21.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:53:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:53:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 09:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:53:00.027+0800');
2020-08-11 09:53:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:53:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:53:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:53:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:53:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:53:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:53:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 09:53:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 09:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T09:53:10.020+0800');
2020-08-11 09:53:21.981 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:54:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:54:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 09:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:54:00.022+0800');
2020-08-11 09:54:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:54:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:54:10.048 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 09:54:10.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 09:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T09:54:10.017+0800');
2020-08-11 09:54:21.983 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:55:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:55:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 09:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T09:55:00.023+0800');
2020-08-11 09:55:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:55:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:55:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:55:10.057 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 09:55:10.062 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 09:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-11T09:55:10.019+0800');
2020-08-11 09:55:21.985 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110629335_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:55:30.414 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16300 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 09:55:30.418 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 09:55:31.961 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:55:31.963 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 09:55:32.027 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-11 09:55:32.539 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7ade013b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$114f906a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$f5480799] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a9fd58a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29f3c438' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.796 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ced1fb56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:32.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:55:33.155 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 09:55:33.169 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 09:55:33.177 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 09:55:33.177 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 09:55:33.183 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 09:55:33.291 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 09:55:33.291 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2801 ms
2020-08-11 09:55:33.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 09:55:33.657 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 09:55:34.130 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 09:55:34.130 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 09:55:34.131 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 09:55:34.131 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 09:55:34.616 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 09:55:36.605 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 09:55:36.636 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 09:55:36.648 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 09:55:36.648 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 09:55:36.651 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 09:55:36.653 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 09:55:36.653 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597110936637'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 09:55:36.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 09:55:36.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 09:55:36.655 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@75959b0c
2020-08-11 09:55:36.737 febs [main] INFO  p6spy - 2020-08-11 09:55:36 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 09:55:38.675 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 09:55:38.914 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 09:55:38.915 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 09:55:38.915 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 09:55:38.915 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 09:55:38.915 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 09:55:38.989 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@141a10bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@29ee8174, org.springframework.security.web.header.HeaderWriterFilter@6dc2e473, org.springframework.security.web.authentication.logout.LogoutFilter@4c9d833, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30437e9c, org.springframework.security.web.session.ConcurrentSessionFilter@33837bd4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6549ce71, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64887fbc, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1bf10539, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4dffa400, org.springframework.security.web.session.SessionManagementFilter@1abf951a, org.springframework.security.web.access.ExceptionTranslationFilter@4177d422, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@41abee65]
2020-08-11 09:55:39.040 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 09:55:39.057 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 09:55:39.058 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 09:55:39.438 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 09:55:40.078 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 09:55:40.093 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 09:55:40.178 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 09:55:40.197 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 09:55:40.211 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 09:55:40.240 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 09:55:40.245 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.57 seconds (JVM running for 11.611)
2020-08-11 09:55:40.266 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 09:55:40.266 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 09:55:40.266 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 09:55:40.266 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 09:55:40.266 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 09:55:40.908 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 09:55:40.908 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 09:55:40.921 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 09:55:40 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 09:55:40.921 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-08-11 09:55:41.199 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 09:55:41.222 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110936637 started.
2020-08-11 09:55:41.228 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110936637_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:55:46.847 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B2988A059A92C09D849F0F5AD9BAC591
2020-08-11 09:55:49.625 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:55:49 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 09:55:49.711 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:55:49 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 09:55:49.724 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 09:55:49 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 09:55:50.243 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:55:50.416 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T09:55:50.375+0800' WHERE (USERNAME = 'admin');
2020-08-11 09:55:50.439 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 09:55:50.444 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:55:50.449 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:55:50.455 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 09:55:50.458 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 09:55:50 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 09:55:52.012 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:55:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 09:55:56.225 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110936637_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 09:55:56.225 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110936637_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597110629335"'s failed in-progress jobs.
2020-08-11 09:56:00.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:56:00.057 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T09:56:00.043+0800');
2020-08-11 09:56:10.032 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:56:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:56:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:56:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:56:10.084 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:56:10.086 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-11 09:56:10.090 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 54, '2020-08-11T09:56:10.032+0800');
2020-08-11 09:56:17.227 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110936637_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:56:23.158 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7124 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 09:56:23.161 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 09:56:24.932 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 09:56:24.935 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 09:56:25.019 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66ms. Found 0 repository interfaces.
2020-08-11 09:56:25.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9f71636a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$35e2f299] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$19db69c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ce90bad3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29147c12' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f3655d85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 09:56:26.809 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 09:56:26.832 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 09:56:26.844 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 09:56:26.844 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 09:56:26.853 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 09:56:26.998 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 09:56:26.998 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3775 ms
2020-08-11 09:56:27.434 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 09:56:27.445 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 09:56:28.125 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 09:56:28.125 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 09:56:28.125 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 09:56:28.126 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 09:56:28.780 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 09:56:31.269 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 09:56:31.311 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 09:56:31.326 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 09:56:31.326 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 09:56:31.331 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 09:56:31.333 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 09:56:31.334 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597110991313'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 09:56:31.335 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 09:56:31.335 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 09:56:31.337 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ca3acad
2020-08-11 09:56:31.437 febs [main] INFO  p6spy - 2020-08-11 09:56:31 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 09:56:33.746 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 09:56:34.066 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 09:56:34.067 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 09:56:34.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 09:56:34.068 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 09:56:34.155 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@363d29dd, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c7787a7, org.springframework.security.web.header.HeaderWriterFilter@4f9e9c21, org.springframework.security.web.authentication.logout.LogoutFilter@2d398cfb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3203a4ae, org.springframework.security.web.session.ConcurrentSessionFilter@6c2a33af, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4767be27, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@258291de, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@25fc2b8f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19b4dd60, org.springframework.security.web.session.SessionManagementFilter@7bf2e475, org.springframework.security.web.access.ExceptionTranslationFilter@2709e075, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b370ca9]
2020-08-11 09:56:34.218 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 09:56:34.238 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 09:56:34.240 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 09:56:34.765 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 09:56:35.784 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 09:56:35.817 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 09:56:35.959 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 09:56:36.012 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 09:56:36.073 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 09:56:36.167 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 09:56:36.176 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.759 seconds (JVM running for 15.821)
2020-08-11 09:56:36.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 09:56:36.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 09:56:36.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 09:56:36.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 09:56:36.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 09:56:36.878 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-11 09:56:36 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 09:56:36.973 febs [http-nio-8099-exec-6] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 09:56:36.974 febs [http-nio-8099-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 09:56:37.019 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 09:56:37.051 febs [http-nio-8099-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 77 ms
2020-08-11 09:56:37.059 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 09:56:37.060 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597110936637"'s failed in-progress jobs.
2020-08-11 09:56:37.079 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110991313 started.
2020-08-11 09:56:37.095 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:56:37.201 febs [http-nio-8099-exec-6] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D168925F783ED302B55D9FE95F9346DB
2020-08-11 09:56:43.152 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:56:43 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 09:56:43.282 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:56:43 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 09:56:43.300 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 09:56:43 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 09:56:43.890 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 09:56:43 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:56:44.105 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T09:56:44.042+0800' WHERE (USERNAME = 'admin');
2020-08-11 09:56:44.119 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 09:56:44.123 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:56:44.127 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 09:56:44.135 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 09:56:44.141 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 09:56:44 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 09:56:45.210 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:56:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 09:57:00.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:57:00.075 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 09:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T09:57:00.053+0800');
2020-08-11 09:57:04.067 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 09:57:04 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 09:57:04.184 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 09:57:04 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 09:58:46.630 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:58:46.632 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:58:46.654 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:58:46 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:58:46.679 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:58:46 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:58:46.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:58:46.718 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:58:46 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:58:46.720 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：90 毫秒
2020-08-11 09:58:46.725 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 09:58:46 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 90, '2020-08-11T09:58:46.630+0800');
2020-08-11 09:59:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 09:59:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 09:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T09:59:00.025+0800');
2020-08-11 09:59:01.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 09:59:10.027 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 09:59:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 09:59:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 09:59:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 09:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 09:59:10.062 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 09:59:10.066 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 09:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T09:59:10.027+0800');
2020-08-11 09:59:13.713 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:00:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:00:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:00:00.024+0800');
2020-08-11 10:00:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:00:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:00:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:00:10.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 10:00:10.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T10:00:10.024+0800');
2020-08-11 10:00:13.716 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:01:00.052 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:01:00.058 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:01:00.052+0800');
2020-08-11 10:01:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:01:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:01:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:01:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 10:01:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 10:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T10:01:10.019+0800');
2020-08-11 10:01:13.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597110991313_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:01:18.679 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110991313 paused.
2020-08-11 10:01:18.724 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:01:18.727 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:01:18.727 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110991313 shutting down.
2020-08-11 10:01:18.727 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110991313 paused.
2020-08-11 10:01:18.728 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597110991313 shutdown complete.
2020-08-11 10:01:18.733 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:01:18.733 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:01:18.739 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:01:25.563 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 5456 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:01:25.567 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:01:27.252 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:01:27.254 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:01:27.323 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-08-11 10:01:27.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ea006f23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8071fe52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$646a7581] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$191fc68c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5aa6da2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3df4693e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:01:28.719 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:01:28.735 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:01:28.745 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:01:28.745 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:01:28.752 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:01:28.878 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:01:28.879 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3228 ms
2020-08-11 10:01:29.304 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:01:29.313 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:01:29.806 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:01:29.806 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:01:29.806 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:01:29.806 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:01:30.379 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:01:32.597 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:01:32.634 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:01:32.646 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:01:32.647 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:01:32.651 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:01:32.653 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:01:32.654 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597111292635'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:01:32.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:01:32.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:01:32.656 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@68af8288
2020-08-11 10:01:32.744 febs [main] INFO  p6spy - 2020-08-11 10:01:32 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:01:35.062 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:01:35.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:01:35.371 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:01:35.453 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3705a85c, org.springframework.security.web.context.SecurityContextPersistenceFilter@65b07b9, org.springframework.security.web.header.HeaderWriterFilter@679886ad, org.springframework.security.web.authentication.logout.LogoutFilter@95958d9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52a8f789, org.springframework.security.web.session.ConcurrentSessionFilter@75c45c4b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@387ef6a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62cf873a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@55ba4bff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2284058a, org.springframework.security.web.session.SessionManagementFilter@59172d2, org.springframework.security.web.access.ExceptionTranslationFilter@4f63909f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@237824b0]
2020-08-11 10:01:35.513 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:01:35.531 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:01:35.533 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:01:35.994 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:01:36.806 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:01:36.825 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:01:36.898 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:01:36.924 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:01:36.941 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:01:36.977 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:01:36.982 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.314 seconds (JVM running for 13.566)
2020-08-11 10:01:37.011 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:01:37.011 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:01:37.011 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:01:37.011 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:01:37.011 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:01:37.446 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:01:37.447 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:01:37.467 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 10:01:37 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:01:37.471 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-08-11 10:01:37.926 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:01:37.948 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597111292635 started.
2020-08-11 10:01:37.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:01:46.829 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6C25E10C20FDF528A406DF24A6C9B51A
2020-08-11 10:01:49.789 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:01:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:01:49.888 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:01:49 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:01:49.903 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:01:49 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:01:50.432 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:01:50.631 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:01:50.580+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:01:50.653 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:01:50.658 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:01:50.662 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:01:50.669 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:01:50.674 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:01:50 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:01:52.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:01:52.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597110991313"'s failed in-progress jobs.
2020-08-11 10:01:55.010 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 10:01:55 | 耗时 10 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:03:23.730 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:03:23.747 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:03:23.760 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:03:23 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:03:23.747+0800');
2020-08-11 10:03:29.807 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:04:00.028 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:04:00.036 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:04:00.028+0800');
2020-08-11 10:04:10.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:04:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:04:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:04:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:04:10.081 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：68 毫秒
2020-08-11 10:04:10.085 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 68, '2020-08-11T10:04:10.013+0800');
2020-08-11 10:04:11.290 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 10:04:11 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:04:11.360 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:04:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:04:19.957 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:05:02.801 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:05:02.807 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:05:02 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:05:02.801+0800');
2020-08-11 10:05:10.029 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:05:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:05:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:05:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:05:10.065 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 10:05:10.068 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T10:05:10.029+0800');
2020-08-11 10:05:13.431 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:06:00.029 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:06:00.039 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:06:00.029+0800');
2020-08-11 10:06:10.061 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:06:10.133 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:06:10.139 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:06:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:06:10.231 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:06:10.234 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：173 毫秒
2020-08-11 10:06:10.239 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 173, '2020-08-11T10:06:10.061+0800');
2020-08-11 10:06:13.432 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:07:00.013 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:07:00.018 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 10:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:07:00.013+0800');
2020-08-11 10:07:10.010 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:07:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:07:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:07:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:07:10.045 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 10:07:10.048 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 10:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T10:07:10.010+0800');
2020-08-11 10:07:13.435 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:08:00.028 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:08:00.033 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 10:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:08:00.028+0800');
2020-08-11 10:08:10.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:08:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:08:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:08:10.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 10:08:10.054 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 10:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T10:08:10.019+0800');
2020-08-11 10:08:13.437 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:09:00.026 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:09:00.033 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 10:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:09:00.026+0800');
2020-08-11 10:09:10.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:09:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:09:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:09:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:09:10.054 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 10:09:10.058 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 10:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T10:09:10.019+0800');
2020-08-11 10:09:13.437 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:10:00.025 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:10:00.030 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 10:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:10:00.025+0800');
2020-08-11 10:10:10.010 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:10:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:10:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:10:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:10:10.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 10:10:10.050 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 10:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T10:10:10.010+0800');
2020-08-11 10:10:13.438 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:11:00.026 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:11:00.032 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 10:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:11:00.024+0800');
2020-08-11 10:11:10.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:11:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:11:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:11:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:11:10.052 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 10:11:10.055 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 10:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T10:11:10.019+0800');
2020-08-11 10:11:13.438 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:12:00.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:12:00.028 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 10:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:12:00.023+0800');
2020-08-11 10:12:10.026 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:12:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:12:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:12:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:12:10.055 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 10:12:10.058 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 10:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T10:12:10.026+0800');
2020-08-11 10:12:13.443 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:13:00.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:13:00.026 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 10:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:13:00.020+0800');
2020-08-11 10:13:10.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:13:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:13:10.051 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 10:13:10.055 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T10:13:10.017+0800');
2020-08-11 10:13:13.445 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:14:00.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:14:00.028 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:14:00.024+0800');
2020-08-11 10:14:10.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:14:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:14:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:14:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:14:10.071 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 10:14:10.074 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T10:14:10.043+0800');
2020-08-11 10:14:13.449 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597111292635_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:15:00.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:15:00.027 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:15:00.021+0800');
2020-08-11 10:15:02.590 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597111292635 paused.
2020-08-11 10:15:02.604 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:15:02.608 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:15:02.608 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597111292635 shutting down.
2020-08-11 10:15:02.608 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597111292635 paused.
2020-08-11 10:15:02.609 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597111292635 shutdown complete.
2020-08-11 10:15:02.614 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:15:02.614 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:15:02.618 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:15:10.141 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19448 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:15:10.143 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:15:11.804 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:15:11.807 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:15:11.892 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-11 10:15:12.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2fdce08d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c64e6fbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$aa46e6eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5efc37f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2f3928ac' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$83d0daa8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:12.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:15:13.081 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:15:13.096 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:15:13.105 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:15:13.105 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:15:13.111 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:15:13.228 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:15:13.228 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3017 ms
2020-08-11 10:15:13.575 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:15:13.584 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:15:14.100 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:15:14.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:15:14.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:15:14.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:15:14.600 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:15:16.655 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:15:16.685 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:15:16.696 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:15:16.696 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:15:16.700 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:15:16.701 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:15:16.702 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597112116686'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:15:16.703 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:15:16.703 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:15:16.704 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@199806aa
2020-08-11 10:15:16.777 febs [main] INFO  p6spy - 2020-08-11 10:15:16 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:15:18.686 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:15:18.928 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:15:18.929 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:15:18.930 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:15:18.930 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:15:19.001 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@438c0aaf, org.springframework.security.web.context.SecurityContextPersistenceFilter@733bd6f3, org.springframework.security.web.header.HeaderWriterFilter@629600d7, org.springframework.security.web.authentication.logout.LogoutFilter@3c20e9d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30ed2a26, org.springframework.security.web.session.ConcurrentSessionFilter@511bfbb0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f2ef402, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20518250, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4dffa400, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7577589, org.springframework.security.web.session.SessionManagementFilter@55f23335, org.springframework.security.web.access.ExceptionTranslationFilter@6dc2e473, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30437e9c]
2020-08-11 10:15:19.051 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:15:19.067 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:15:19.068 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:15:19.448 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:15:20.078 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:15:20.092 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:15:20.158 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:15:20.179 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:15:20.193 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:15:20.223 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:15:20.227 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.82 seconds (JVM running for 12.157)
2020-08-11 10:15:20.251 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:15:20.251 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:15:20.251 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:15:20.251 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:15:20.251 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:15:20.529 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 10:15:20 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:15:20.843 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:15:20.844 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:15:20.865 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-11 10:15:21.181 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:15:21.191 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:15:21.191 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597111292635"'s failed in-progress jobs.
2020-08-11 10:15:21.197 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597112116686 started.
2020-08-11 10:15:21.203 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112116686_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:15:43.101 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:692044CB5EC309278F48B4D87510C7F0
2020-08-11 10:15:56.558 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:08155C39B56EA1D46C7463CC53347F2A
2020-08-11 10:15:59.046 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:15:59.133 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:15:59.146 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:15:59.691 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:15:59.865 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:15:59.825+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:15:59.888 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:15:59.892 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:15:59.898 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:15:59.907 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:15:59.913 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:15:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:16:00.033 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:16:00.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T10:16:00.032+0800');
2020-08-11 10:16:05.053 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 10:16:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:16:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:16:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:16:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:16:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:16:10.076 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-11 10:16:10.079 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-11T10:16:10.022+0800');
2020-08-11 10:16:21.204 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112116686_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:16:40.037 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 10:16:40 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:16:40.100 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:16:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:16:49.692 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14560 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:16:49.697 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:16:51.850 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:16:51.857 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:16:52.069 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 142ms. Found 0 repository interfaces.
2020-08-11 10:16:52.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$abd644ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4247d3e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$26404b18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$daf59c23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@71139e77' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ffca3ed5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:16:53.978 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:16:54.035 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:16:54.061 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:16:54.061 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:16:54.074 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:16:54.307 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:16:54.308 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4540 ms
2020-08-11 10:16:54.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:16:54.793 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:16:55.501 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:16:55.501 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:16:55.501 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:16:55.501 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:16:56.145 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:16:58.403 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:16:58.440 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:16:58.455 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:16:58.455 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:16:58.459 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:16:58.462 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:16:58.463 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597112218442'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:16:58.463 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:16:58.463 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:16:58.466 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b2ade46
2020-08-11 10:16:58.555 febs [main] INFO  p6spy - 2020-08-11 10:16:58 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:17:00.805 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:17:01.137 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:17:01.138 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:17:01.224 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39f3285d, org.springframework.security.web.context.SecurityContextPersistenceFilter@247d44b4, org.springframework.security.web.header.HeaderWriterFilter@73d7e7aa, org.springframework.security.web.authentication.logout.LogoutFilter@7364073b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@e5d9fa7, org.springframework.security.web.session.ConcurrentSessionFilter@62966c9f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48b744fd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4917992b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@24be6e34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b312863, org.springframework.security.web.session.SessionManagementFilter@5c3e7128, org.springframework.security.web.access.ExceptionTranslationFilter@118f39f3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c3627c]
2020-08-11 10:17:01.285 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:17:01.305 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:17:01.307 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:17:01.911 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:17:03.014 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:17:03.046 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:17:03.157 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:17:03.198 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:17:03.220 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:17:03.267 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:17:03.277 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.458 seconds (JVM running for 15.979)
2020-08-11 10:17:03.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:17:03.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:17:03.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:17:03.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:17:03.310 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:17:03.776 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:17:03.776 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:17:03.794 febs [RMI TCP Connection(8)-192.168.1.113] INFO  p6spy - 2020-08-11 10:17:03 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:17:03.796 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-08-11 10:17:04.200 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:17:04.214 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:17:04.214 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597112116686"'s failed in-progress jobs.
2020-08-11 10:17:04.230 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597112218442 started.
2020-08-11 10:17:04.235 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:17:04.289 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:17:04.396 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:17:04 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-11T10:17:04.288+0800');
2020-08-11 10:17:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:17:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:17:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:17:10.092 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:17:10.126 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:17:10.129 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：108 毫秒
2020-08-11 10:17:10.133 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 108, '2020-08-11T10:17:10.021+0800');
2020-08-11 10:17:16.239 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:17:26.859 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:8C50E8D0B307399B112B6AC99BBB1D8A
2020-08-11 10:18:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:18:00.034 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:18:00.027+0800');
2020-08-11 10:18:10.027 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:18:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:18:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:18:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:18:10.064 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 10:18:10.068 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T10:18:10.027+0800');
2020-08-11 10:18:16.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:18:18.485 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:3EEE70DE2D333F3A4206449C3C84B6BB
2020-08-11 10:18:20.869 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:18:20 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:18:20.973 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:18:20 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:18:20.989 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:18:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:18:21.493 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:18:21.662 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:18:21.645+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:18:21.686 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:18:21.689 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:18:21.693 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:18:21.700 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:18:21.706 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:18:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:18:23.150 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 10:18:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:27:00.845 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:27:09.920 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:27:09.927 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:27:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:27:09.919+0800');
2020-08-11 10:27:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:27:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:27:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:27:10.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-11 10:27:10.062 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-11T10:27:10.010+0800');
2020-08-11 10:27:10.353 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:27:10.423 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:27:15.825 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 10:27:36.131 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:28:00.027 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:28:00.032 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:28:00.027+0800');
2020-08-11 10:28:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:28:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:28:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:28:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:28:10.056 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 10:28:10.060 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 10:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T10:28:10.023+0800');
2020-08-11 10:28:21.043 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:29:00.025 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:29:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 10:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:29:00.025+0800');
2020-08-11 10:29:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:29:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:29:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:29:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:29:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 10:29:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 10:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T10:29:10.018+0800');
2020-08-11 10:29:21.047 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:29:30.394 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:29:30 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:29:30.466 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:29:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:30:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:30:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 10:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:30:00.018+0800');
2020-08-11 10:30:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:30:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:30:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:30:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:30:10.063 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-11 10:30:10.067 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 10:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-11T10:30:10.022+0800');
2020-08-11 10:30:11.282 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:30:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:30:11.359 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:30:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:30:14.157 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597112218442_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:30:43.041 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14580 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:30:43.046 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:30:44.749 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:30:44.752 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:30:44.816 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-11 10:30:45.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9473f6f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.667 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2ae58626] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$eddfd55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c3934e60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2e3cd732' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e867f112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:45.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:30:46.212 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:30:46.229 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:30:46.239 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:30:46.239 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:30:46.247 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:30:46.364 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:30:46.365 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3234 ms
2020-08-11 10:30:46.784 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:30:46.792 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:30:47.330 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:30:47.331 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:30:47.331 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:30:47.331 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:30:47.977 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:30:50.180 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:30:50.220 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:30:50.236 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:30:50.236 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:30:50.240 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:30:50.243 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:30:50.244 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597113050222'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:30:50.244 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:30:50.244 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:30:50.245 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@18301763
2020-08-11 10:30:50.331 febs [main] INFO  p6spy - 2020-08-11 10:30:50 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:30:52.426 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:30:52.725 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:30:52.726 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:30:52.727 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:30:52.810 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c38f4de, org.springframework.security.web.context.SecurityContextPersistenceFilter@d8751de, org.springframework.security.web.header.HeaderWriterFilter@7e484bd, org.springframework.security.web.authentication.logout.LogoutFilter@1df8e685, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@36a25457, org.springframework.security.web.session.ConcurrentSessionFilter@edb8f0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75c30a4f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55b78dad, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@48590849, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@489c15e2, org.springframework.security.web.session.SessionManagementFilter@3e0600a4, org.springframework.security.web.access.ExceptionTranslationFilter@75b6bd41, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22c0c0bc]
2020-08-11 10:30:52.869 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:30:52.888 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:30:52.889 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:30:53.350 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:30:54.177 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:30:54.195 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:30:54.264 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:30:54.288 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:30:54.301 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:30:54.335 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:30:54.340 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.261 seconds (JVM running for 13.468)
2020-08-11 10:30:54.365 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:30:54.365 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:30:54.365 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:30:54.366 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:30:54.366 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:30:54.750 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:30:54.750 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:30:54.769 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-11 10:30:54 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:30:54.771 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-11 10:30:55.289 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:30:55.299 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:30:55.299 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597112218442"'s failed in-progress jobs.
2020-08-11 10:30:55.314 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113050222 started.
2020-08-11 10:30:55.320 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113050222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:31:00.050 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:31:00.103 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-11T10:31:00.050+0800');
2020-08-11 10:31:07.036 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F829758EBD67210102DE10C0667E5880
2020-08-11 10:31:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:31:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:31:10.093 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:31:10.129 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:31:10.132 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：110 毫秒
2020-08-11 10:31:10.136 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 110, '2020-08-11T10:31:10.022+0800');
2020-08-11 10:31:10.472 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:31:10.574 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:31:10.589 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:31:10 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:31:11.093 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:31:11.264 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:31:11.250+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:31:11.277 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:31:11.280 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:31:11.284 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:31:11.292 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:31:11.298 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:31:11 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:31:12.835 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 10:31:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:31:19.321 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113050222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:31:21.658 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:31:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:31:21.712 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:31:21 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:34:00.199 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113050222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 10:34:00.267 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:34:00.274 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:34:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:34:00.267+0800');
2020-08-11 10:34:00.278 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113050222 paused.
2020-08-11 10:34:00.296 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:34:00.300 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:34:00.300 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113050222 shutting down.
2020-08-11 10:34:00.300 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113050222 paused.
2020-08-11 10:34:00.302 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113050222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 10:34:00.315 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113050222 shutdown complete.
2020-08-11 10:34:00.321 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:34:00.321 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:34:00.491 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:34:07.381 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9360 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:34:07.386 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:34:09.102 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:34:09.104 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:34:09.174 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-11 10:34:09.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:09.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c6e87be2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d5a0b11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$41528240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f607d34b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6e46891d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1adc75fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:34:10.562 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:34:10.579 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:34:10.589 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:34:10.589 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:34:10.596 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:34:10.715 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:34:10.715 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3247 ms
2020-08-11 10:34:11.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:34:11.125 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:34:11.659 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:34:11.660 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:34:11.660 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:34:11.660 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:34:12.233 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:34:14.580 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:34:14.618 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:34:14.631 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:34:14.632 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:34:14.636 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:34:14.638 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:34:14.639 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597113254619'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:34:14.639 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:34:14.639 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:34:14.641 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@75a6bd06
2020-08-11 10:34:14.729 febs [main] INFO  p6spy - 2020-08-11 10:34:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:34:16.912 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:34:17.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:34:17.233 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:34:17.317 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@202ba60a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fb42efa, org.springframework.security.web.header.HeaderWriterFilter@452a32f2, org.springframework.security.web.authentication.logout.LogoutFilter@363d29dd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5f1dadf4, org.springframework.security.web.session.ConcurrentSessionFilter@5d10e2b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51ac72f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1067bc4c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@45dfb6a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12ebcdf6, org.springframework.security.web.session.SessionManagementFilter@1f2d0ca2, org.springframework.security.web.access.ExceptionTranslationFilter@796a7c9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a5df98c]
2020-08-11 10:34:17.376 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:34:17.395 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:34:17.397 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:34:17.868 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:34:18.686 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:34:18.703 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:34:18.772 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:34:18.796 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:34:18.810 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:34:18.843 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:34:18.848 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.353 seconds (JVM running for 13.562)
2020-08-11 10:34:18.874 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:34:18.874 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:34:18.874 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:34:18.874 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:34:18.874 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:34:19.238 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 10:34:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:34:19.494 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:34:19.495 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:34:19.572 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 77 ms
2020-08-11 10:34:19.799 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:34:19.822 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113254619 started.
2020-08-11 10:34:19.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113254619_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 10:34:19.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113254619_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:34:28.771 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:8BBA72A3AA93CE59AC0D9334E9601675
2020-08-11 10:34:31.435 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:34:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:34:31.537 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:34:31 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:34:31.554 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:34:31 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:34:32.110 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:34:32.350 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:34:32.267+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:34:32.374 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:34:32.380 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:34:32.385 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:34:32.394 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:34:32.402 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 10:34:32 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:34:34.829 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113254619_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:34:34.829 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113254619_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597113050222"'s failed in-progress jobs.
2020-08-11 10:34:36.959 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 10:34:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:37:08.551 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113254619_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:37:08.607 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:37:08.624 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:37:08 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:37:08.607+0800');
2020-08-11 10:37:10.029 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:37:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:37:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:37:10.085 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:37:10.087 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-11 10:37:10.091 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-11T10:37:10.029+0800');
2020-08-11 10:37:12.702 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113254619 paused.
2020-08-11 10:37:12.712 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:37:12.715 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:37:12.715 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113254619 shutting down.
2020-08-11 10:37:12.715 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113254619 paused.
2020-08-11 10:37:12.716 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113254619 shutdown complete.
2020-08-11 10:37:12.722 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:37:12.722 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:37:12.728 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:37:19.482 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8836 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:37:19.485 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:37:21.179 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:37:21.181 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:37:21.246 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-11 10:37:21.902 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6ca6add1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3183d00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e710b42f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9bc6053a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@38d42ab7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c09aa7ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:37:22.635 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:37:22.660 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:37:22.671 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:37:22.672 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:37:22.681 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:37:22.817 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:37:22.818 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3258 ms
2020-08-11 10:37:23.236 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:37:23.246 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:37:23.775 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:37:23.775 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:37:23.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:37:23.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:37:24.349 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:37:26.698 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:37:26.746 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:37:26.763 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:37:26.763 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:37:26.767 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:37:26.770 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:37:26.771 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597113446747'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:37:26.771 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:37:26.771 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:37:26.773 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@575cfec1
2020-08-11 10:37:26.886 febs [main] INFO  p6spy - 2020-08-11 10:37:26 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:37:29.135 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:37:29.445 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:37:29.446 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:37:29.545 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@481f698f, org.springframework.security.web.context.SecurityContextPersistenceFilter@471d6571, org.springframework.security.web.header.HeaderWriterFilter@25fc2b8f, org.springframework.security.web.authentication.logout.LogoutFilter@46ae897c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d0697da, org.springframework.security.web.session.ConcurrentSessionFilter@1f5a1ad4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5692863, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@237824b0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@723081a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41ae9f11, org.springframework.security.web.session.SessionManagementFilter@19b4dd60, org.springframework.security.web.access.ExceptionTranslationFilter@3203a4ae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@538d2308]
2020-08-11 10:37:29.608 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:37:29.636 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:37:29.638 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:37:30.097 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:37:30.914 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:37:30.936 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:37:31.013 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:37:31.037 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:37:31.051 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:37:31.085 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:37:31.090 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.498 seconds (JVM running for 13.657)
2020-08-11 10:37:31.119 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:37:31.119 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:37:31.119 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:37:31.119 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:37:31.119 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:37:31.682 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-11 10:37:31 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:37:31.975 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:37:31.975 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:37:32.043 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:37:32.045 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 70 ms
2020-08-11 10:37:32.058 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:37:32.058 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597113254619"'s failed in-progress jobs.
2020-08-11 10:37:32.075 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113446747 started.
2020-08-11 10:37:32.084 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113446747_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 10:37:32.152 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113446747_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:37:50.578 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D3E64F1505CDAD69950E8E9FA72F62B6
2020-08-11 10:37:53.433 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:37:53.536 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:37:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:37:53.550 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:37:54.078 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:37:54.286 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:37:54.230+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:37:54.308 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:37:54.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:37:54.318 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:37:54.325 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:37:54.330 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:37:54 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:37:55.603 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:37:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:39:59.616 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113446747_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:39:59.647 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:39:59.670 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:39:59 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:39:59.647+0800');
2020-08-11 10:39:59.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113446747_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:40:00.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:40:00.029 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:40:00.022+0800');
2020-08-11 10:40:01.350 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113446747 paused.
2020-08-11 10:40:01.361 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:40:01.365 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:40:01.365 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113446747 shutting down.
2020-08-11 10:40:01.365 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113446747 paused.
2020-08-11 10:40:01.366 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113446747 shutdown complete.
2020-08-11 10:40:01.371 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:40:01.372 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:40:01.377 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:40:08.028 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7280 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:40:08.032 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:40:09.718 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:40:09.721 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:40:09.790 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-08-11 10:40:10.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d45fe3b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.650 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ad172e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4ec9ea16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$37f3b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@606b53a3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2853ddd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:10.760 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:40:11.196 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:40:11.213 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:40:11.225 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:40:11.225 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:40:11.233 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:40:11.348 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:40:11.348 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3231 ms
2020-08-11 10:40:11.767 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:40:11.776 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:40:12.273 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:40:12.273 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:40:12.273 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:40:12.273 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:40:12.844 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:40:15.101 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:40:15.141 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:40:15.155 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:40:15.155 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:40:15.159 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:40:15.161 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:40:15.162 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597113615142'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:40:15.162 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:40:15.162 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:40:15.164 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ec06e97
2020-08-11 10:40:15.256 febs [main] INFO  p6spy - 2020-08-11 10:40:15 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:40:17.365 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:40:17.676 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:40:17.677 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:40:17.776 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@640028f2, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d94c50e, org.springframework.security.web.header.HeaderWriterFilter@5a5024eb, org.springframework.security.web.authentication.logout.LogoutFilter@20040c6e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ac0cb64, org.springframework.security.web.session.ConcurrentSessionFilter@18c432ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@230e163b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a9a6a0c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@247d44b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48b744fd, org.springframework.security.web.session.SessionManagementFilter@797ca322, org.springframework.security.web.access.ExceptionTranslationFilter@4d0e6424, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6915351c]
2020-08-11 10:40:17.839 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:40:17.857 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:40:17.858 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:40:18.317 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:40:19.158 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:40:19.176 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:40:19.249 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:40:19.274 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:40:19.288 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:40:19.323 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:40:19.327 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.202 seconds (JVM running for 13.388)
2020-08-11 10:40:19.352 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:40:19.352 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:40:19.352 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:40:19.352 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:40:19.352 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:40:20.276 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:40:20.304 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113615142 started.
2020-08-11 10:40:20.318 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:40:20.558 febs [RMI TCP Connection(8)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:40:20.558 febs [RMI TCP Connection(8)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:40:20.574 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-11 10:40:20 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-11 10:40:20.577 febs [RMI TCP Connection(8)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-11 10:40:20.993 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:752F255AB531BCDBD71024A983A76A35
2020-08-11 10:40:23.792 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:40:23 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:40:23.895 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:40:23 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:40:23.911 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:40:23 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:40:24.436 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:40:24.639 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:40:24.589+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:40:24.654 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:40:24.658 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:40:24.662 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:40:24.671 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:40:24.675 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:40:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:40:25.975 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:40:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:40:35.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:40:35.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597113446747"'s failed in-progress jobs.
2020-08-11 10:41:00.106 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:41:00.126 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-11T10:41:00.106+0800');
2020-08-11 10:41:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:41:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:41:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:41:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:41:10.083 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-11 10:41:10.087 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 59, '2020-08-11T10:41:10.024+0800');
2020-08-11 10:41:20.314 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:42:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:42:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:42:00.016+0800');
2020-08-11 10:42:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:42:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:42:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:42:10.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-11 10:42:10.067 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-11T10:42:10.020+0800');
2020-08-11 10:42:20.316 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:42:25.242 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:42:25 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:42:25.310 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 10:42:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:43:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:43:00.019 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:43:00.014+0800');
2020-08-11 10:43:07.098 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 10:43:07 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:43:07.172 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:43:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:43:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:43:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:43:10.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 10:43:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T10:43:10.018+0800');
2020-08-11 10:43:20.320 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113615142_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:43:30.165 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 10:43:30 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:43:30.231 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 10:43:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:43:44.563 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 10:43:44 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:43:44.636 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:43:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:44:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:44:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:44:00.022+0800');
2020-08-11 10:44:07.560 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113615142 paused.
2020-08-11 10:44:07.570 febs [Thread-29] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:44:07.574 febs [Thread-29] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 10:44:07.574 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113615142 shutting down.
2020-08-11 10:44:07.574 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113615142 paused.
2020-08-11 10:44:07.575 febs [Thread-29] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113615142 shutdown complete.
2020-08-11 10:44:07.579 febs [Thread-29] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 10:44:07.580 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 10:44:07.584 febs [Thread-29] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 10:44:16.077 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 984 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 10:44:16.082 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 10:44:18.299 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 10:44:18.302 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 10:44:18.421 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100ms. Found 0 repository interfaces.
2020-08-11 10:44:19.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:19.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8950857] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:19.764 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:19.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:19.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9f069786] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:19.903 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$82ff0eb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:20.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$37b45fc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:20.048 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:20.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@34beadce' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:20.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5c890272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:20.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 10:44:21.055 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 10:44:21.114 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 10:44:21.134 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 10:44:21.135 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 10:44:21.148 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 10:44:21.419 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 10:44:21.420 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5236 ms
2020-08-11 10:44:22.266 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 10:44:22.352 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 10:44:23.204 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 10:44:23.204 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 10:44:23.205 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 10:44:23.205 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 10:44:24.044 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 10:44:27.117 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 10:44:27.208 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 10:44:27.224 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 10:44:27.224 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 10:44:27.231 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 10:44:27.234 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 10:44:27.235 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597113867210'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 10:44:27.236 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 10:44:27.236 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 10:44:27.238 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7298c2d9
2020-08-11 10:44:27.353 febs [main] INFO  p6spy - 2020-08-11 10:44:27 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 10:44:29.599 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 10:44:29.910 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 10:44:29.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 10:44:29.996 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fc6cac6, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f5a1ad4, org.springframework.security.web.header.HeaderWriterFilter@5de6c7d7, org.springframework.security.web.authentication.logout.LogoutFilter@55ba4bff, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@352d3749, org.springframework.security.web.session.ConcurrentSessionFilter@19b4dd60, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25d87313, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1188e08b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5935eb9c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@538d2308, org.springframework.security.web.session.SessionManagementFilter@2b370ca9, org.springframework.security.web.access.ExceptionTranslationFilter@1067bc4c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61a17f3]
2020-08-11 10:44:30.061 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 10:44:30.081 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 10:44:30.083 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 10:44:30.549 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 10:44:31.389 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 10:44:31.406 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 10:44:31.481 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 10:44:31.506 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 10:44:31.520 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 10:44:31.576 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 10:44:31.583 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 16.689 seconds (JVM running for 18.544)
2020-08-11 10:44:31.650 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 10:44:31.650 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 10:44:31.650 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 10:44:31.650 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 10:44:31.650 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 10:44:31.927 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 10:44:31.928 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 10:44:31.948 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 10:44:31 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 10:44:31.951 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-11 10:44:32.507 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 10:44:32.519 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 10:44:32.519 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597113615142"'s failed in-progress jobs.
2020-08-11 10:44:32.526 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113867210 started.
2020-08-11 10:44:32.535 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:44:34.237 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6A7E01DB25FE0CBDD21A074F2497246C
2020-08-11 10:44:37.125 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 10:44:37.224 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:37 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 10:44:37.239 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:37 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 10:44:37.746 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 10:44:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 10:44:37.983 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T10:44:37.926+0800' WHERE (USERNAME = 'admin');
2020-08-11 10:44:38.005 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:38 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 10:44:38.011 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:38 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:44:38.015 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:38 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 10:44:38.023 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:38 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 10:44:38.029 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 10:44:38 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 10:44:39.527 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 10:44:39 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 10:45:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:45:00.067 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T10:45:00.049+0800');
2020-08-11 10:45:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:45:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:45:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:45:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:45:10.083 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-08-11 10:45:10.087 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 60, '2020-08-11T10:45:10.023+0800');
2020-08-11 10:45:20.538 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:46:00.028 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:46:00.032 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:46:00.028+0800');
2020-08-11 10:46:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:46:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:46:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:46:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 10:46:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T10:46:10.020+0800');
2020-08-11 10:46:20.535 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:47:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:47:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:47:00.023+0800');
2020-08-11 10:47:10.026 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:47:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:47:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:47:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:47:10.075 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-11 10:47:10.083 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-11T10:47:10.026+0800');
2020-08-11 10:47:20.572 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:48:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:48:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:48:00.019+0800');
2020-08-11 10:48:10.024 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:48:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:48:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:48:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:48:10.056 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 10:48:10.060 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 10:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T10:48:10.024+0800');
2020-08-11 10:48:20.574 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:49:00.025 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:49:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 10:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:49:00.025+0800');
2020-08-11 10:49:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:49:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:49:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:49:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:49:10.054 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 10:49:10.057 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 10:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T10:49:10.020+0800');
2020-08-11 10:49:20.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:50:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:50:00.029 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 10:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:50:00.025+0800');
2020-08-11 10:50:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:50:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:50:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:50:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:50:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 10:50:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 10:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T10:50:10.019+0800');
2020-08-11 10:50:20.617 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:51:00.028 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:51:00.074 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 10:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:51:00.028+0800');
2020-08-11 10:51:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:51:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:51:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:51:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:51:10.069 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-11 10:51:10.073 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 10:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-11T10:51:10.019+0800');
2020-08-11 10:51:20.619 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:52:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:52:00.031 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 10:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:52:00.024+0800');
2020-08-11 10:52:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:52:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:52:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:52:10.058 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 10:52:10.063 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 10:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-11T10:52:10.019+0800');
2020-08-11 10:52:20.617 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:53:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:53:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 10:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:53:00.023+0800');
2020-08-11 10:53:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:53:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:53:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:53:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 10:53:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 10:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T10:53:10.019+0800');
2020-08-11 10:53:20.628 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:54:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:54:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 10:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:54:00.021+0800');
2020-08-11 10:54:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:54:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:54:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:54:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:54:10.050 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 10:54:10.054 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 10:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T10:54:10.021+0800');
2020-08-11 10:54:20.633 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:55:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:55:00.031 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 10:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:55:00.025+0800');
2020-08-11 10:55:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:55:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:55:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:55:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:55:10.057 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 10:55:10.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 10:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T10:55:10.020+0800');
2020-08-11 10:55:20.637 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:56:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:56:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 10:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T10:56:00.025+0800');
2020-08-11 10:56:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:56:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:56:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:56:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:56:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 10:56:10.042 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 10:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T10:56:10.007+0800');
2020-08-11 10:56:20.649 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:57:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:57:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 10:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:57:00.025+0800');
2020-08-11 10:57:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:57:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:57:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:57:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:57:10.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 10:57:10.060 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 10:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T10:57:10.020+0800');
2020-08-11 10:57:20.652 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:58:00.032 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:58:00.037 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 10:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T10:58:00.032+0800');
2020-08-11 10:58:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:58:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:58:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:58:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:58:10.038 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 10:58:10.041 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 10:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T10:58:10.008+0800');
2020-08-11 10:58:20.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 10:59:00.026 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 10:59:00.032 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 10:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T10:59:00.026+0800');
2020-08-11 10:59:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 10:59:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 10:59:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 10:59:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 10:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 10:59:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 10:59:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 10:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T10:59:10.016+0800');
2020-08-11 10:59:20.658 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:00:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:00:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:00:00.021+0800');
2020-08-11 11:00:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:00:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:00:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:00:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:00:10.071 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 11:00:10.074 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T11:00:10.045+0800');
2020-08-11 11:00:20.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597113867210_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:01:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:01:00.030 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:01:00.024+0800');
2020-08-11 11:01:08.848 febs [Thread-38] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113867210 paused.
2020-08-11 11:01:08.859 febs [Thread-38] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:01:08.863 febs [Thread-38] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 11:01:08.863 febs [Thread-38] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113867210 shutting down.
2020-08-11 11:01:08.863 febs [Thread-38] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113867210 paused.
2020-08-11 11:01:08.864 febs [Thread-38] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597113867210 shutdown complete.
2020-08-11 11:01:08.869 febs [Thread-38] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 11:01:08.869 febs [Thread-38] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 11:01:08.875 febs [Thread-38] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 11:01:15.725 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 23036 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 11:01:15.729 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 11:01:17.351 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:01:17.354 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 11:01:17.418 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-11 11:01:18.061 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$49b2090f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e023983e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$c41c0f6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$78d16078] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@47c96f2c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9da6032a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:01:18.778 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 11:01:18.795 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:01:18.804 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 11:01:18.805 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 11:01:18.813 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 11:01:18.944 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 11:01:18.945 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3133 ms
2020-08-11 11:01:19.366 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 11:01:19.376 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 11:01:19.921 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 11:01:19.921 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 11:01:19.921 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 11:01:19.921 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 11:01:20.516 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 11:01:22.812 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 11:01:22.856 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 11:01:22.870 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 11:01:22.870 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 11:01:22.874 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 11:01:22.876 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 11:01:22.877 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597114882857'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 11:01:22.877 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 11:01:22.877 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 11:01:22.879 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@44df834c
2020-08-11 11:01:22.961 febs [main] INFO  p6spy - 2020-08-11 11:01:22 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 11:01:25.071 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 11:01:25.383 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 11:01:25.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 11:01:25.480 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64dfa1a3, org.springframework.security.web.context.SecurityContextPersistenceFilter@493489dd, org.springframework.security.web.header.HeaderWriterFilter@23169374, org.springframework.security.web.authentication.logout.LogoutFilter@33cec966, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40f77135, org.springframework.security.web.session.ConcurrentSessionFilter@3c7787a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77e261e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@59172d2, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5bbf3869, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f5a1ad4, org.springframework.security.web.session.SessionManagementFilter@6c2a33af, org.springframework.security.web.access.ExceptionTranslationFilter@e75bae7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19b4dd60]
2020-08-11 11:01:25.551 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 11:01:25.579 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 11:01:25.580 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:01:26.106 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 11:01:26.914 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 11:01:26.933 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 11:01:27.012 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 11:01:27.045 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 11:01:27.061 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 11:01:27.101 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 11:01:27.107 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.273 seconds (JVM running for 13.488)
2020-08-11 11:01:27.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 11:01:27.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 11:01:27.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 11:01:27.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 11:01:27.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 11:01:27.622 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 11:01:27 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 11:01:27.876 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 11:01:27.876 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 11:01:27.953 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 77 ms
2020-08-11 11:01:28.047 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 11:01:28.059 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 11:01:28.059 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597113867210"'s failed in-progress jobs.
2020-08-11 11:01:28.066 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597114882857 started.
2020-08-11 11:01:28.073 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:01:35.686 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:59AB2341C7BD66FA653695F1C3A6B7CA
2020-08-11 11:01:38.627 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:01:38 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 11:01:38.735 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:01:38 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 11:01:38.751 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:01:38 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 11:01:39.263 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:01:39.457 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T11:01:39.405+0800' WHERE (USERNAME = 'admin');
2020-08-11 11:01:39.481 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 11:01:39.485 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 11:01:39.490 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 11:01:39.498 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 11:01:39.502 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:01:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 11:01:44.379 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:01:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:02:00.052 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:02:00.068 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:02:00.052+0800');
2020-08-11 11:02:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:02:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:02:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:02:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:02:10.085 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-08-11 11:02:10.089 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 62, '2020-08-11T11:02:10.023+0800');
2020-08-11 11:02:16.077 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:03:00.031 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:03:00.043 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:03:00.031+0800');
2020-08-11 11:03:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:03:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:03:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:03:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:03:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:03:10.068 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-11 11:03:10.072 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-11T11:03:10.023+0800');
2020-08-11 11:03:16.075 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:04:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:04:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:04:00.025+0800');
2020-08-11 11:04:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:04:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:04:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:04:10.055 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T11:04:10.019+0800');
2020-08-11 11:04:16.085 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:05:00.071 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:05:00.091 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:05:00.071+0800');
2020-08-11 11:05:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:05:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:05:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:05:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:05:10.078 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 11:05:10.082 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T11:05:10.043+0800');
2020-08-11 11:05:16.087 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:06:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:06:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:06:00.022+0800');
2020-08-11 11:06:10.024 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:06:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:06:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:06:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:06:10.058 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:06:10.063 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:06:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T11:06:10.024+0800');
2020-08-11 11:06:16.102 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:07:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:07:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:07:00.022+0800');
2020-08-11 11:07:10.024 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:07:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:07:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:07:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:07:10.057 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 11:07:10.062 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T11:07:10.024+0800');
2020-08-11 11:07:16.105 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:08:00.016 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:08:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:08:00.016+0800');
2020-08-11 11:08:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:08:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:08:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:08:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:08:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-11 11:08:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 11:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-11T11:08:10.009+0800');
2020-08-11 11:08:16.108 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:09:00.015 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:09:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 11:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:09:00.015+0800');
2020-08-11 11:09:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:09:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:09:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:09:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:09:10.053 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:09:10.056 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 11:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T11:09:10.019+0800');
2020-08-11 11:09:16.109 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:10:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:10:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 11:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:10:00.023+0800');
2020-08-11 11:10:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:10:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:10:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:10:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:10:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 11:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T11:10:10.017+0800');
2020-08-11 11:10:16.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:11:00.027 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:11:00.033 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 11:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:11:00.027+0800');
2020-08-11 11:11:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:11:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:11:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:11:10.050 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:11:10.053 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 11:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T11:11:10.020+0800');
2020-08-11 11:11:16.116 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:12:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:12:00.031 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:12:00.025+0800');
2020-08-11 11:12:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:12:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:12:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:12:10.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:12:10.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T11:12:10.018+0800');
2020-08-11 11:12:16.125 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:13:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:13:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:13:00.014+0800');
2020-08-11 11:13:10.014 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:13:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:13:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:13:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:13:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-11 11:13:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-11T11:13:10.014+0800');
2020-08-11 11:13:16.123 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:14:00.026 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:14:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:14:00.026+0800');
2020-08-11 11:14:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:14:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:14:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:14:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 11:14:10.054 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T11:14:10.020+0800');
2020-08-11 11:14:16.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:15:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:15:00.019 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:15:00.012+0800');
2020-08-11 11:15:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:15:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:15:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:15:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:15:10.056 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 11:15:10.059 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T11:15:10.020+0800');
2020-08-11 11:15:16.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:16:00.025 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:16:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:16:00.025+0800');
2020-08-11 11:16:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:16:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:16:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:16:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:16:10.053 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:16:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T11:16:10.021+0800');
2020-08-11 11:16:16.144 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:17:00.164 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:17:00.187 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:17:00 | 耗时 15 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-11T11:17:00.164+0800');
2020-08-11 11:17:10.024 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:17:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:17:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:17:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:17:10.054 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:17:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T11:17:10.024+0800');
2020-08-11 11:17:16.145 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:18:00.133 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:18:00.139 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:18:00.133+0800');
2020-08-11 11:18:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:18:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:18:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:18:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:18:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 11:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T11:18:10.017+0800');
2020-08-11 11:18:16.148 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:19:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:19:00.039 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 11:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:19:00.024+0800');
2020-08-11 11:19:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:19:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:19:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:19:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:19:10.053 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:19:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 11:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T11:19:10.019+0800');
2020-08-11 11:19:16.151 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:20:00.127 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:20:00.144 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 11:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 7, '2020-08-11T11:20:00.127+0800');
2020-08-11 11:20:10.139 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:20:10.158 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:20:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:20:10.163 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:20:10.187 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:20:10.189 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-11 11:20:10.194 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 11:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-11T11:20:10.139+0800');
2020-08-11 11:20:16.154 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597114882857_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:20:54.396 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597114882857 paused.
2020-08-11 11:20:54.408 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:20:54.412 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 11:20:54.412 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597114882857 shutting down.
2020-08-11 11:20:54.412 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597114882857 paused.
2020-08-11 11:20:54.413 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597114882857 shutdown complete.
2020-08-11 11:20:54.418 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 11:20:54.418 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 11:20:54.424 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 11:21:03.500 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8584 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 11:21:03.506 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 11:21:05.588 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:21:05.592 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 11:21:05.748 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114ms. Found 0 repository interfaces.
2020-08-11 11:21:07.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cac58df6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61371d25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$452f9454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f9e4e55f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@11ede87f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.605 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1eb98811] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:07.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:08.359 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 11:21:08.382 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:08.395 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 11:21:08.395 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 11:21:08.396 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 4756 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 11:21:08.400 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 11:21:08.403 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 11:21:08.596 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 11:21:08.596 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5001 ms
2020-08-11 11:21:09.084 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 11:21:09.094 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 11:21:09.696 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 11:21:09.696 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 11:21:09.696 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 11:21:09.696 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 11:21:10.282 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 11:21:10.448 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:21:10.451 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 11:21:10.545 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77ms. Found 0 repository interfaces.
2020-08-11 11:21:11.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$624d9e7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.614 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f8bf2dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$dcb7a4db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$916cf5e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4eb63dc8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b6419898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:11.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:12.324 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 11:21:12.346 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:12.359 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 11:21:12.359 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 11:21:12.369 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 11:21:12.548 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 11:21:12.549 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4058 ms
2020-08-11 11:21:12.908 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 11:21:12.944 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 11:21:12.958 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 11:21:12.959 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 11:21:12.962 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 11:21:12.964 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 11:21:12.965 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597116072946'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 11:21:12.965 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 11:21:12.965 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 11:21:12.967 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3dad535f
2020-08-11 11:21:13.035 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 11:21:13.045 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 11:21:13.055 febs [main] INFO  p6spy - 2020-08-11 11:21:13 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 11:21:13.713 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 11:21:13.713 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 11:21:13.713 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 11:21:13.714 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 11:21:14.469 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 11:21:15.340 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 11:21:15.649 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 11:21:15.649 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 11:21:15.650 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 11:21:15.735 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@477bea57, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ffdd510, org.springframework.security.web.header.HeaderWriterFilter@152035eb, org.springframework.security.web.authentication.logout.LogoutFilter@3b1137b0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7455204c, org.springframework.security.web.session.ConcurrentSessionFilter@4ba402b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6719f206, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3151277f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@68229a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5dc7391e, org.springframework.security.web.session.SessionManagementFilter@3605ab16, org.springframework.security.web.access.ExceptionTranslationFilter@76e2a621, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e9dcdd3]
2020-08-11 11:21:15.810 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 11:21:15.827 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 11:21:15.829 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:21:16.289 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 11:21:17.067 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 11:21:17.085 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 11:21:17.104 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 11:21:17.157 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 11:21:17.168 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 11:21:17.177 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 11:21:17.177 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 11:21:17.182 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 11:21:17.186 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 11:21:17.187 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597116077159'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 11:21:17.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 11:21:17.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 11:21:17.190 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5ef7ae2f
2020-08-11 11:21:17.197 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 11:21:17.218 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:17.274 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 11:21:17.278 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.656 seconds (JVM running for 16.142)
2020-08-11 11:21:17.307 febs [main] INFO  p6spy - 2020-08-11 11:21:17 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 11:21:17.307 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 11:21:17.308 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 11:21:17.308 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 11:21:17.308 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 11:21:17.308 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 11:21:17.876 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 11:21:17.876 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 11:21:17.894 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 11:21:17 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 11:21:17.896 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-08-11 11:21:18.223 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 11:21:18.236 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 11:21:18.237 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597114882857"'s failed in-progress jobs.
2020-08-11 11:21:18.245 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116072946 started.
2020-08-11 11:21:18.264 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116072946_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 11:21:18.344 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116072946_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:21:19.771 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 11:21:20.086 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 11:21:20.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 11:21:20.087 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 11:21:20.167 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22e650e, org.springframework.security.web.context.SecurityContextPersistenceFilter@d8a2b1b, org.springframework.security.web.header.HeaderWriterFilter@1bcdd302, org.springframework.security.web.authentication.logout.LogoutFilter@493489dd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@51ac72f7, org.springframework.security.web.session.ConcurrentSessionFilter@8bd9d08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3328db4f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44ba9f25, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7b9f7087, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30a79476, org.springframework.security.web.session.SessionManagementFilter@30ce78e3, org.springframework.security.web.access.ExceptionTranslationFilter@1f596988, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@35599228]
2020-08-11 11:21:20.223 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 11:21:20.242 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 11:21:20.244 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:21:20.739 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 11:21:21.546 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 11:21:21.563 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 11:21:21.634 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 11:21:21.657 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 11:21:21.671 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:21.693 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:21.694 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-11 11:21:21.711 febs [main] INFO  o.apache.catalina.util.LifecycleBase - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2020-08-11 11:21:21.712 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:21.712 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:21.717 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-11 11:21:21.736 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:21:21.740 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 11:21:21.741 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116077159 shutting down.
2020-08-11 11:21:21.741 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116077159 paused.
2020-08-11 11:21:21.742 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116077159 shutdown complete.
2020-08-11 11:21:21.748 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 11:21:21.749 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 11:21:21.758 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 11:21:35.100 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:3D5C1E4230233FA32F6B252E8B677429
2020-08-11 11:21:53.325 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6688 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 11:21:53.329 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 11:21:54.930 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:21:54.933 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 11:21:54.997 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-11 11:21:55.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6491b084] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.830 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.841 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fb033fb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$defbb6e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$93b107ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@38d42ab7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b885aa9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:55.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:21:56.365 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 11:21:56.381 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:21:56.390 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 11:21:56.390 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 11:21:56.397 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 11:21:56.522 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 11:21:56.523 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3127 ms
2020-08-11 11:21:56.945 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 11:21:56.955 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 11:21:57.445 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 11:21:57.446 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 11:21:57.446 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 11:21:57.446 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 11:21:58.033 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 11:22:00.314 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 11:22:00.353 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 11:22:00.369 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 11:22:00.370 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 11:22:00.374 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 11:22:00.377 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 11:22:00.378 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597116120355'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 11:22:00.378 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 11:22:00.378 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 11:22:00.380 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1885905b
2020-08-11 11:22:00.463 febs [main] INFO  p6spy - 2020-08-11 11:22:00 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 11:22:02.532 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 11:22:02.827 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 11:22:02.828 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 11:22:02.911 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6894436e, org.springframework.security.web.context.SecurityContextPersistenceFilter@237824b0, org.springframework.security.web.header.HeaderWriterFilter@471d6571, org.springframework.security.web.authentication.logout.LogoutFilter@524b1e41, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31ecd003, org.springframework.security.web.session.ConcurrentSessionFilter@1188e08b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5345552f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@634d56eb, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1a5c0b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f2feab7, org.springframework.security.web.session.SessionManagementFilter@5692863, org.springframework.security.web.access.ExceptionTranslationFilter@3c130cb2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61c11339]
2020-08-11 11:22:02.970 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 11:22:02.989 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 11:22:02.991 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:22:03.461 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 11:22:04.271 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 11:22:04.288 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 11:22:04.358 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 11:22:04.381 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 11:22:04.396 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 11:22:04.431 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 11:22:04.437 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.973 seconds (JVM running for 13.148)
2020-08-11 11:22:04.462 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 11:22:04.462 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 11:22:04.462 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 11:22:04.462 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 11:22:04.462 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 11:22:05.252 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 11:22:05.252 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 11:22:05.270 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 11:22:05 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 11:22:05.273 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-11 11:22:05.383 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 11:22:05.412 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 11:22:05.412 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597116072946"'s failed in-progress jobs.
2020-08-11 11:22:05.420 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-11 11:22:05.465 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116120355 started.
2020-08-11 11:22:05.472 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:22:05.514 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:22:05.568 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:22:05 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T11:22:05.514+0800');
2020-08-11 11:22:10.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:22:10.102 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:22:10.141 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:22:10.180 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:22:10.183 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：148 毫秒
2020-08-11 11:22:10.189 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 148, '2020-08-11T11:22:10.035+0800');
2020-08-11 11:22:13.763 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:7A80D6DD1A9D1733C0C78B5D3F60B11F
2020-08-11 11:22:16.616 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:22:16 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 11:22:16.715 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:22:16 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 11:22:16.730 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:22:16 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 11:22:17.282 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:22:17.432 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T11:22:17.419+0800' WHERE (USERNAME = 'admin');
2020-08-11 11:22:17.455 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 11:22:17.459 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 11:22:17.463 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 11:22:17.470 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:22:17.471 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 11:22:17.477 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:22:17 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 11:22:18.542 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 11:22:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:23:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:23:00.032 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:23:00.027+0800');
2020-08-11 11:23:10.027 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:23:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:23:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:23:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:23:10.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:23:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T11:23:10.027+0800');
2020-08-11 11:23:17.470 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:24:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:24:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:24:00.027+0800');
2020-08-11 11:24:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:24:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:24:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:24:10.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 11:24:10.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T11:24:10.019+0800');
2020-08-11 11:24:17.472 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:25:00.027 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:25:00.034 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:25:00.027+0800');
2020-08-11 11:25:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:25:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:25:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:25:10.056 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 11:25:10.059 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T11:25:10.019+0800');
2020-08-11 11:25:17.473 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:26:00.029 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:26:00.037 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:26:00.029+0800');
2020-08-11 11:26:03.249 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 11:26:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:26:03.316 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 11:26:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:26:10.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:26:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:26:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:26:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:26:10.065 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-11 11:26:10.071 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-11T11:26:10.022+0800');
2020-08-11 11:26:17.475 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:27:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:27:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:27:00.021+0800');
2020-08-11 11:27:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:27:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:27:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:27:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:27:10.059 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-11 11:27:10.063 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-11T11:27:10.020+0800');
2020-08-11 11:27:17.476 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:28:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:28:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:28:00.026+0800');
2020-08-11 11:28:05.307 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:28:05 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:28:05.379 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:28:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:28:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:28:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:28:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:28:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:28:10.052 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:28:10.056 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 11:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T11:28:10.020+0800');
2020-08-11 11:28:17.481 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:29:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:29:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 11:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:29:00.024+0800');
2020-08-11 11:29:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:29:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:29:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:29:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:29:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-11 11:29:10.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 11:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-11T11:29:10.020+0800');
2020-08-11 11:29:17.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:30:00.026 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:30:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 11:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:30:00.026+0800');
2020-08-11 11:30:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:30:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:30:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:30:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:30:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 11:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T11:30:10.017+0800');
2020-08-11 11:30:17.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:30:42.158 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 11:30:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:30:42.227 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:30:48.969 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:30:48 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:30:49.030 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 11:30:49 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:31:00.016 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:31:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 11:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:31:00.016+0800');
2020-08-11 11:31:10.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:31:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:31:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:31:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:31:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 11:31:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 11:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T11:31:10.010+0800');
2020-08-11 11:31:17.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:31:40.575 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:31:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:31:40.674 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 11:31:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:31:55.550 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 11:31:55 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:31:55.612 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:31:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:32:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:32:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:32:00.022+0800');
2020-08-11 11:32:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:32:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:32:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:32:10.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:32:10.052 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T11:32:10.017+0800');
2020-08-11 11:32:17.486 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:33:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:33:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:33:00.025+0800');
2020-08-11 11:33:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:33:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:33:10.052 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 11:33:10.056 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T11:33:10.019+0800');
2020-08-11 11:33:17.490 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:33:47.499 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 11:33:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:33:47.555 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:33:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:34:00.033 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:34:00.049 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:34:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:34:00.033+0800');
2020-08-11 11:34:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:34:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:34:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:34:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:34:10.069 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 11:34:10.071 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T11:34:10.043+0800');
2020-08-11 11:34:17.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:35:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:35:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:35:00.023+0800');
2020-08-11 11:35:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:35:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:35:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:35:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:35:10.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:35:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T11:35:10.019+0800');
2020-08-11 11:35:17.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:35:19.928 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 11:35:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:35:19.982 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 11:35:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:35:50.518 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 11:35:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:35:50.585 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:35:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:36:00.014 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:36:00.020 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:36:00.014+0800');
2020-08-11 11:36:01.380 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:36:01 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:36:01.443 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:36:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:36:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:36:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:36:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:36:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:36:10.055 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 11:36:10.058 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-11T11:36:10.017+0800');
2020-08-11 11:36:17.501 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:36:39.978 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:36:39 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:36:40.047 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:36:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:36:54.578 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:36:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:36:54.631 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 11:36:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:37:00.026 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:37:00.033 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:37:00.026+0800');
2020-08-11 11:37:08.067 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 11:37:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:37:08.138 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 11:37:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:37:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:37:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:37:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:37:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 11:37:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T11:37:10.018+0800');
2020-08-11 11:37:17.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:37:19.354 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 11:37:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:37:19.419 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 11:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:37:40.876 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 11:37:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:37:40.931 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 11:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:38:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:38:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:38:00.021+0800');
2020-08-11 11:38:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:38:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:38:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:38:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 11:38:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 11:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T11:38:10.016+0800');
2020-08-11 11:38:17.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:39:00.013 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:39:00.020 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 11:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:39:00.013+0800');
2020-08-11 11:39:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:39:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:39:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:39:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:39:10.038 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:39:10.041 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 11:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T11:39:10.009+0800');
2020-08-11 11:39:17.520 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:39:43.989 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 11:39:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 11:39:44.048 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 11:39:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 11:39:54.530 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 11:39:54.536 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 11:39:54.540 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 11:39:54.543 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 11:39:54.547 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 11:39:54.551 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 11:39:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 11:40:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:40:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 11:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:40:00.023+0800');
2020-08-11 11:40:10.007 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:40:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:40:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:40:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:40:10.037 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:40:10.040 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 11:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T11:40:10.007+0800');
2020-08-11 11:40:17.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:41:00.048 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:41:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 11:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:41:00.048+0800');
2020-08-11 11:41:02.106 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 11:41:02.111 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 11:41:02.115 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 11:41:02.120 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 11:41:02.125 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 11:41:02.129 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 11:41:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 11:41:10.059 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:41:10.145 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:41:10 | 耗时 16 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:41:10.154 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:41:10.194 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:41:10.197 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：138 毫秒
2020-08-11 11:41:10.201 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 11:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 138, '2020-08-11T11:41:10.059+0800');
2020-08-11 11:41:17.529 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:42:00.070 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:42:00.077 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:42:00.070+0800');
2020-08-11 11:42:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:42:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:42:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:42:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:42:10.039 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 11:42:10.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T11:42:10.008+0800');
2020-08-11 11:42:17.528 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:43:00.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:43:00.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:43:00.043+0800');
2020-08-11 11:43:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:43:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:43:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:43:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 11:43:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T11:43:10.018+0800');
2020-08-11 11:43:17.531 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:44:00.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:44:00.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:44:00.049+0800');
2020-08-11 11:44:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:44:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:44:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:44:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:44:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:44:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T11:44:10.016+0800');
2020-08-11 11:44:17.535 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:44:32.988 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 11:44:32.991 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 11:44:32.995 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 11:44:32.998 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 11:44:33.001 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 11:44:33.005 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 11:44:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 11:45:00.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:45:00.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:45:00.050+0800');
2020-08-11 11:45:10.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:45:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:45:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:45:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:45:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:45:10.037 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:45:10.040 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T11:45:10.007+0800');
2020-08-11 11:45:17.539 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:46:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:46:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:46:00.021+0800');
2020-08-11 11:46:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:46:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:46:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:46:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:46:10.037 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:46:10.041 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T11:46:10.008+0800');
2020-08-11 11:46:17.539 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597116120355_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:47:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:47:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T11:47:00.019+0800');
2020-08-11 11:47:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:47:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:47:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:47:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:47:10.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 11:47:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T11:47:10.011+0800');
2020-08-11 11:47:13.970 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116120355 paused.
2020-08-11 11:47:13.983 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:47:13.987 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 11:47:13.988 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116120355 shutting down.
2020-08-11 11:47:13.988 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116120355 paused.
2020-08-11 11:47:13.989 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597116120355 shutdown complete.
2020-08-11 11:47:13.995 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 11:47:13.995 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 11:47:14.001 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 11:47:21.189 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7928 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 11:47:21.193 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 11:47:22.931 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 11:47:22.934 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 11:47:23.004 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-11 11:47:23.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c3b7226a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5a28b199] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3e2128c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:23.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f2d679d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:24.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:24.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@270f28cf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:24.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$17ab1c85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:24.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 11:47:24.488 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 11:47:24.505 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 11:47:24.514 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 11:47:24.515 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 11:47:24.522 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 11:47:24.679 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 11:47:24.680 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3425 ms
2020-08-11 11:47:25.191 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 11:47:25.220 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 11:47:25.781 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 11:47:25.781 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 11:47:25.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 11:47:25.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 11:47:26.500 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 11:47:28.803 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 11:47:28.844 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 11:47:28.860 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 11:47:28.861 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 11:47:28.866 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 11:47:28.868 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 11:47:28.869 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597117648845'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 11:47:28.870 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 11:47:28.870 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 11:47:28.872 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@322eb1a
2020-08-11 11:47:28.991 febs [main] INFO  p6spy - 2020-08-11 11:47:28 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 11:47:31.138 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 11:47:31.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 11:47:31.456 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 11:47:31.456 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 11:47:31.456 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 11:47:31.564 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@195888a6, org.springframework.security.web.context.SecurityContextPersistenceFilter@14764fdd, org.springframework.security.web.header.HeaderWriterFilter@57edfa89, org.springframework.security.web.authentication.logout.LogoutFilter@613f48de, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3545c913, org.springframework.security.web.session.ConcurrentSessionFilter@78839c2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69e8f7a5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e0600a4, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3cdc5155, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ced7cf, org.springframework.security.web.session.SessionManagementFilter@73476e2d, org.springframework.security.web.access.ExceptionTranslationFilter@193c810, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b9dd787]
2020-08-11 11:47:31.628 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 11:47:31.648 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 11:47:31.650 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 11:47:32.123 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 11:47:32.959 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 11:47:32.975 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 11:47:33.046 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 11:47:33.070 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 11:47:33.088 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 11:47:33.126 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 11:47:33.131 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.905 seconds (JVM running for 14.483)
2020-08-11 11:47:33.166 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 11:47:33.166 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 11:47:33.166 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 11:47:33.166 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 11:47:33.166 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 11:47:33.745 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 11:47:33.745 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 11:47:33.765 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-08-11 11:47:34.080 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 11:47:34.102 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 11:47:34.102 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597116120355"'s failed in-progress jobs.
2020-08-11 11:47:34.120 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597117648845 started.
2020-08-11 11:47:34.128 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:47:34.159 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-11 11:47:34 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 11:47:54.264 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A1538BFB6B9737AB2136D5ECE362AE52
2020-08-11 11:48:00.055 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:48:00.107 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T11:48:00.055+0800');
2020-08-11 11:48:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:48:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:48:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:48:10.111 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:48:10.113 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：97 毫秒
2020-08-11 11:48:10.117 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 97, '2020-08-11T11:48:10.016+0800');
2020-08-11 11:48:10.126 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:49:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:49:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:49:00.019+0800');
2020-08-11 11:49:10.010 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:49:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:49:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:49:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-11 11:49:10.054 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-11T11:49:10.010+0800');
2020-08-11 11:49:10.129 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:50:00.028 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:50:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 11:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:50:00.028+0800');
2020-08-11 11:50:10.027 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:50:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:50:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:50:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:50:10.064 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 11:50:10.070 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 11:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T11:50:10.027+0800');
2020-08-11 11:50:10.130 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:51:00.052 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:51:00.058 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 11:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:51:00.052+0800');
2020-08-11 11:51:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:51:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:51:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:51:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:51:10.057 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:51:10.060 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 11:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T11:51:10.023+0800');
2020-08-11 11:51:10.134 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:52:00.028 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:52:00.034 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 11:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:52:00.028+0800');
2020-08-11 11:52:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:52:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:52:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:52:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 11:52:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 11:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T11:52:10.019+0800');
2020-08-11 11:52:10.134 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:53:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:53:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 11:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:53:00.025+0800');
2020-08-11 11:53:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:53:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:53:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:53:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 11:53:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 11:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T11:53:10.019+0800');
2020-08-11 11:53:10.135 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:54:00.050 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:54:00.056 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 11:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:54:00.050+0800');
2020-08-11 11:54:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:54:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:54:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:54:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:54:10.078 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 11:54:10.081 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 11:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T11:54:10.047+0800');
2020-08-11 11:54:10.137 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:55:00.026 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:55:00.032 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 11:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:55:00.026+0800');
2020-08-11 11:55:10.026 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:55:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:55:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:55:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:55:10.063 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 11:55:10.067 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 11:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T11:55:10.026+0800');
2020-08-11 11:55:10.141 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:56:00.026 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:56:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 11:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:56:00.026+0800');
2020-08-11 11:56:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:56:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:56:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:56:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:56:10.073 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 11:56:10.076 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 11:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T11:56:10.045+0800');
2020-08-11 11:56:10.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:57:00.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:57:00.055 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 11:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:57:00.050+0800');
2020-08-11 11:57:10.024 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:57:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:57:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:57:10.054 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 11:57:10.057 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 11:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T11:57:10.024+0800');
2020-08-11 11:57:10.146 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:58:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:58:00.055 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 11:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T11:58:00.049+0800');
2020-08-11 11:58:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:58:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:58:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:58:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:58:10.054 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 11:58:10.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 11:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T11:58:10.020+0800');
2020-08-11 11:58:10.150 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 11:59:00.038 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 11:59:00.043 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 11:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T11:59:00.038+0800');
2020-08-11 11:59:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 11:59:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 11:59:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 11:59:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 11:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 11:59:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 11:59:10.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 11:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T11:59:10.021+0800');
2020-08-11 11:59:10.150 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:00:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:00:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 12:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:00:00.011+0800');
2020-08-11 12:00:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:00:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:00:10.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 12:00:10.053 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 12:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T12:00:10.021+0800');
2020-08-11 12:00:10.155 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:01:00.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:01:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 12:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:01:00.026+0800');
2020-08-11 12:01:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:01:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:01:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:01:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 12:01:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 12:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T12:01:10.018+0800');
2020-08-11 12:01:10.156 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:02:00.015 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:02:00.020 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 12:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:02:00.015+0800');
2020-08-11 12:02:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:02:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:02:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:02:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:02:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 12:02:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 12:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T12:02:10.009+0800');
2020-08-11 12:02:10.159 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:03:00.015 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:03:00.020 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 12:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:03:00.015+0800');
2020-08-11 12:03:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:03:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:03:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:03:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:03:10.053 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 12:03:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 12:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T12:03:10.022+0800');
2020-08-11 12:03:10.162 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:04:00.017 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:04:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 12:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:04:00.017+0800');
2020-08-11 12:04:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:04:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:04:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:04:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:04:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 12:04:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 12:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T12:04:10.020+0800');
2020-08-11 12:04:10.167 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:05:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:05:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 12:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:05:00.016+0800');
2020-08-11 12:05:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:05:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:05:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:05:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:05:10.070 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 12:05:10.073 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 12:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T12:05:10.043+0800');
2020-08-11 12:05:10.168 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:06:00.046 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:06:00.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 12:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:06:00.046+0800');
2020-08-11 12:06:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:06:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:06:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:06:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 12:06:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 12:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T12:06:10.017+0800');
2020-08-11 12:06:10.169 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:07:00.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:07:00.048 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 12:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:07:00.042+0800');
2020-08-11 12:07:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:07:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:07:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:07:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:07:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 12:07:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 12:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T12:07:10.018+0800');
2020-08-11 12:07:10.173 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:08:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:08:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 12:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:08:00.025+0800');
2020-08-11 12:08:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:08:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:08:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:08:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:08:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:08:10.050 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 12:08:10.053 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 12:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T12:08:10.017+0800');
2020-08-11 12:08:10.175 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:09:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:09:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 12:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:09:00.025+0800');
2020-08-11 12:09:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:09:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:09:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:09:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 12:09:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 12:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T12:09:10.017+0800');
2020-08-11 12:09:10.177 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:10:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:10:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 12:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:10:00.024+0800');
2020-08-11 12:10:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:10:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:10:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:10:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 12:10:10.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 12:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T12:10:10.021+0800');
2020-08-11 12:10:10.179 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:11:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:11:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 12:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:11:00.022+0800');
2020-08-11 12:11:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:11:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:11:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:11:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:11:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 12:11:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 12:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T12:11:10.018+0800');
2020-08-11 12:11:10.182 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:12:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:12:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 12:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:12:00.021+0800');
2020-08-11 12:12:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:12:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:12:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:12:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 12:12:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 12:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T12:12:10.020+0800');
2020-08-11 12:12:10.185 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:13:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:13:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 12:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:13:00.023+0800');
2020-08-11 12:13:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:13:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:13:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:13:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 12:13:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 12:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T12:13:10.018+0800');
2020-08-11 12:13:10.185 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:14:00.052 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:14:00.056 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 12:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:14:00.052+0800');
2020-08-11 12:14:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:14:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:14:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:14:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:14:10.067 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 12:14:10.070 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 12:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T12:14:10.042+0800');
2020-08-11 12:14:10.186 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:15:00.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:15:00.053 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 12:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:15:00.049+0800');
2020-08-11 12:15:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:15:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:15:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:15:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:15:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 12:15:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 12:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T12:15:10.021+0800');
2020-08-11 12:15:10.188 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:16:00.027 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:16:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 12:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T12:16:00.027+0800');
2020-08-11 12:16:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:16:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:16:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:16:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:16:10.051 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 12:16:10.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 12:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T12:16:10.018+0800');
2020-08-11 12:16:10.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 12:17:00.049 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 12:17:00.054 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 12:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T12:17:00.049+0800');
2020-08-11 12:17:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 12:17:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 12:17:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 12:17:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 12:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 12:17:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 12:17:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 12:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T12:17:10.016+0800');
2020-08-11 12:17:10.190 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:32:08.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:32:08.511 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:32:08.515 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 13:32:08 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:32:08.511+0800');
2020-08-11 13:32:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:32:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:32:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:32:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:32:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 13:32:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 13:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T13:32:10.010+0800');
2020-08-11 13:32:20.496 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 13:32:20.553 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:32:32.172 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:A1538BFB6B9737AB2136D5ECE362AE52
2020-08-11 13:33:00.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:33:00.014 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 13:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:33:00.010+0800');
2020-08-11 13:33:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:33:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:33:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:33:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 13:33:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 13:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T13:33:10.017+0800');
2020-08-11 13:33:20.557 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:34:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:34:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 13:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:34:00.011+0800');
2020-08-11 13:34:10.116 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:34:10.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:34:10.126 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:34:10.151 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:34:10.153 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 13:34:10.158 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 13:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T13:34:10.116+0800');
2020-08-11 13:34:20.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:35:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:35:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 13:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:35:00.019+0800');
2020-08-11 13:35:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:35:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:35:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:35:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:35:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 13:35:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 13:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T13:35:10.019+0800');
2020-08-11 13:35:20.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:36:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:36:00.016 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 13:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:36:00.012+0800');
2020-08-11 13:36:10.029 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:36:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:36:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:36:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:36:10.058 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 13:36:10.061 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 13:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T13:36:10.029+0800');
2020-08-11 13:36:20.564 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:37:00.015 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:37:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 13:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:37:00.015+0800');
2020-08-11 13:37:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:37:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:37:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 13:37:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 13:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T13:37:10.018+0800');
2020-08-11 13:37:20.568 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:38:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:38:00.016 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 13:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:38:00.012+0800');
2020-08-11 13:38:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:38:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:38:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 13:38:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 13:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T13:38:10.018+0800');
2020-08-11 13:38:20.570 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:39:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:39:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 13:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:39:00.016+0800');
2020-08-11 13:39:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:39:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:39:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:39:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 13:39:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 13:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T13:39:10.019+0800');
2020-08-11 13:39:20.572 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:39:34.571 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:39:34 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 13:39:34.730 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:39:34 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 13:39:34.748 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:39:34 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 13:39:34.854 febs [http-nio-8099-exec-6] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:8CADF2F2A4C1B2E4AF4AE31656F1C690
2020-08-11 13:39:35.201 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 13:39:35.340 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T13:39:35.327+0800' WHERE (USERNAME = 'admin');
2020-08-11 13:39:35.359 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 13:39:35.362 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 13:39:35.365 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 13:39:35.373 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 13:39:35.377 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:39:35 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 13:39:36.485 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:39:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 13:39:37.386 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:39:37.391 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:39:37.395 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:39:37.398 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:39:37.402 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:39:37.405 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:39:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:40:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:40:00.018 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 13:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:40:00.012+0800');
2020-08-11 13:40:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:40:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:40:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:40:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 13:40:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 13:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T13:40:10.018+0800');
2020-08-11 13:40:20.576 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:41:00.013 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:41:00.017 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 13:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:41:00.013+0800');
2020-08-11 13:41:10.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:41:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:41:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:41:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:41:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 13:41:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 13:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T13:41:10.010+0800');
2020-08-11 13:41:20.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:42:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:42:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 13:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:42:00.012+0800');
2020-08-11 13:42:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:42:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:42:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:42:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:42:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 13:42:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 13:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T13:42:10.008+0800');
2020-08-11 13:42:20.581 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:43:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:43:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 13:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:43:00.018+0800');
2020-08-11 13:43:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:43:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:43:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 13:43:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 13:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T13:43:10.018+0800');
2020-08-11 13:43:20.613 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:44:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:44:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 13:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:44:00.011+0800');
2020-08-11 13:44:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:44:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:44:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:44:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:44:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 13:44:10.071 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 13:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T13:44:10.042+0800');
2020-08-11 13:44:20.618 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:45:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:45:00.019 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 13:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:45:00.014+0800');
2020-08-11 13:45:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:45:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:45:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 13:45:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 13:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T13:45:10.017+0800');
2020-08-11 13:45:20.620 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:46:00.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:46:00.020 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 13:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:46:00.017+0800');
2020-08-11 13:46:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:46:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:46:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 13:46:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 13:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T13:46:10.017+0800');
2020-08-11 13:46:20.621 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:47:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:47:00.018 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 13:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:47:00.012+0800');
2020-08-11 13:47:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:47:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:47:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:47:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:47:10.052 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 13:47:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 13:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T13:47:10.019+0800');
2020-08-11 13:47:20.624 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:48:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:48:00.017 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 13:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:48:00.012+0800');
2020-08-11 13:48:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:48:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:48:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:48:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:48:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 13:48:10.072 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 13:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-11T13:48:10.044+0800');
2020-08-11 13:48:20.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:49:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:49:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 13:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:49:00.016+0800');
2020-08-11 13:49:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:49:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:49:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:49:10 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:49:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:49:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:49:10.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 13:49:10.054 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 13:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T13:49:10.017+0800');
2020-08-11 13:49:20.653 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:50:00.014 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:50:00.019 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 13:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:50:00.014+0800');
2020-08-11 13:50:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:50:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:50:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:50:10.051 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 13:50:10.054 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 13:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T13:50:10.018+0800');
2020-08-11 13:50:20.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:51:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:51:00.014 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 13:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:51:00.010+0800');
2020-08-11 13:51:10.015 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:51:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:51:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:51:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:51:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 13:51:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 13:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T13:51:10.015+0800');
2020-08-11 13:51:20.659 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:52:00.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:52:00.014 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 13:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:52:00.010+0800');
2020-08-11 13:52:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:52:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:52:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:52:10.052 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 13:52:10.055 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 13:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T13:52:10.020+0800');
2020-08-11 13:52:20.664 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:53:00.009 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:53:00.014 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 13:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:53:00.009+0800');
2020-08-11 13:53:10.100 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:53:10.147 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:53:10 | 耗时 28 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:53:10.177 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:53:10 | 耗时 25 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:53:10.235 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:53:10.237 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：137 毫秒
2020-08-11 13:53:10.242 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 13:53:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 137, '2020-08-11T13:53:10.100+0800');
2020-08-11 13:53:20.680 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:54:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:54:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 13:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:54:00.014+0800');
2020-08-11 13:54:10.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:54:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:54:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:54:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:54:10.062 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 13:54:10.066 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 13:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T13:54:10.025+0800');
2020-08-11 13:54:20.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:55:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:55:00.015 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 13:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T13:55:00.011+0800');
2020-08-11 13:55:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:55:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:55:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:55:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:55:10.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 13:55:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 13:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T13:55:10.021+0800');
2020-08-11 13:55:20.747 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:56:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:56:00.015 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 13:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:56:00.011+0800');
2020-08-11 13:56:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:56:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:56:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:56:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:56:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 13:56:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 13:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T13:56:10.017+0800');
2020-08-11 13:56:20.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597117648845_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:56:23.674 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597117648845 paused.
2020-08-11 13:56:23.685 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 13:56:23.688 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 13:56:23.688 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597117648845 shutting down.
2020-08-11 13:56:23.688 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597117648845 paused.
2020-08-11 13:56:23.689 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597117648845 shutdown complete.
2020-08-11 13:56:23.694 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 13:56:23.694 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 13:56:23.699 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 13:56:34.726 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11468 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 13:56:34.731 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 13:56:38.079 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 13:56:38.130 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 13:56:38.497 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 267ms. Found 0 repository interfaces.
2020-08-11 13:56:39.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.848 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5cde9fbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3502eec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$d748a61b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8bfdf726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.985 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.988 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3ad847f8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b0d299d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:39.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 13:56:40.442 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 13:56:40.458 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 13:56:40.469 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 13:56:40.469 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 13:56:40.476 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 13:56:40.612 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 13:56:40.613 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5686 ms
2020-08-11 13:56:41.069 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 13:56:41.078 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 13:56:41.666 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 13:56:41.666 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 13:56:41.666 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 13:56:41.667 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 13:56:42.284 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 13:56:44.945 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 13:56:45.028 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 13:56:45.045 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 13:56:45.046 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 13:56:45.053 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 13:56:45.055 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 13:56:45.057 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597125405030'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 13:56:45.057 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 13:56:45.057 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 13:56:45.059 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c680fe1
2020-08-11 13:56:45.243 febs [main] INFO  p6spy - 2020-08-11 13:56:45 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 13:56:48.317 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 13:56:48.626 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 13:56:48.626 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 13:56:48.626 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 13:56:48.627 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 13:56:48.724 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dc24732, org.springframework.security.web.context.SecurityContextPersistenceFilter@238c63df, org.springframework.security.web.header.HeaderWriterFilter@463746eb, org.springframework.security.web.authentication.logout.LogoutFilter@40ecead5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1a3a6216, org.springframework.security.web.session.ConcurrentSessionFilter@47d0195b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d96a895, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21abd3a3, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1de398c3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44a1ae4e, org.springframework.security.web.session.SessionManagementFilter@15ae31b, org.springframework.security.web.access.ExceptionTranslationFilter@28ffa527, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@73dc7db0]
2020-08-11 13:56:48.794 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 13:56:48.814 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 13:56:48.815 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 13:56:49.329 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 13:56:50.239 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 13:56:50.259 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 13:56:50.366 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 13:56:50.396 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 13:56:50.411 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 13:56:50.451 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 13:56:50.456 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 16.915 seconds (JVM running for 18.736)
2020-08-11 13:56:50.489 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 13:56:50.490 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 13:56:50.490 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 13:56:50.490 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 13:56:50.490 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 13:56:50.783 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-11 13:56:50 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 13:56:51.186 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 13:56:51.186 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 13:56:51.209 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-11 13:56:51.436 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 13:56:51.457 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 13:56:51.457 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597117648845"'s failed in-progress jobs.
2020-08-11 13:56:51.475 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597125405030 started.
2020-08-11 13:56:51.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:56:54.983 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:AE73A555BA48A2D491364BC255E4E3C8
2020-08-11 13:56:58.345 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:56:58 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 13:56:58.449 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:56:58 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 13:56:58.465 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:56:58 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 13:56:58.931 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:56:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 13:56:59.147 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T13:56:59.090+0800' WHERE (USERNAME = 'admin');
2020-08-11 13:56:59.170 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 13:56:59.174 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 13:56:59.178 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 13:56:59.190 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 13:56:59.195 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:56:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 13:57:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:57:00.058 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 13:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-11T13:57:00.039+0800');
2020-08-11 13:57:01.105 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:57:01 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 13:57:10.025 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:57:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:57:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:57:10.098 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:57:10.101 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：76 毫秒
2020-08-11 13:57:10.106 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 13:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 76, '2020-08-11T13:57:10.025+0800');
2020-08-11 13:57:15.481 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:57:57.027 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:57:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 13:57:57.095 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:57:57 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 13:57:58.388 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:57:58 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 13:57:59.750 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:57:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 13:58:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:58:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 13:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T13:58:00.016+0800');
2020-08-11 13:58:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:58:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:58:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:58:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 13:58:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 13:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T13:58:10.021+0800');
2020-08-11 13:58:15.483 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:58:59.116 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:58:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 13:58:59.163 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:58:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 13:58:59.979 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:58:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 13:59:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 13:59:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 13:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T13:59:00.018+0800');
2020-08-11 13:59:05.230 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:05.238 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:05.244 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:05.249 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:05.255 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:05.260 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:06.490 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:06.497 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:06.501 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:06.506 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:06.510 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:06.515 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:09.146 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:09.150 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:09.155 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:09.160 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:09.163 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:09.168 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:09.981 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:09.988 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:09.994 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:10.001 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:10.005 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:10.006 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:10.010 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:10.011 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:10.015 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:10.022 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 13:59:10.027 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:10.032 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 13:59:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 13:59:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 13:59:10.069 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-11 13:59:10.074 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 13:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-11T13:59:10.024+0800');
2020-08-11 13:59:15.124 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:15.129 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:15.133 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:15.137 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:15.141 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:15.145 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:15.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 13:59:17.144 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:17.148 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:17.152 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:17.155 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:17.159 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:17.164 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:17.683 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:17.687 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:17.690 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:17.695 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:17.700 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:17.704 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:19.256 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:19.260 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:19.265 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:19.269 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:19.273 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:19.278 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:19.737 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:19.742 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:19.747 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:19.752 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:19.754 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:19.756 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:19.758 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:19.761 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:19.764 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:19.768 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:19.772 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:19.777 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 13:59:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:24.516 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:24.521 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:24.529 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:24.533 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:24.536 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:24.536 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:24.540 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:24.540 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:24.545 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:24.549 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:24.552 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:24.557 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 13:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:34.056 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:34.060 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:34.064 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:34.068 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:34.072 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:34.075 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 13:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:38.394 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:38.397 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:38.401 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:38.405 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:38.408 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:38.412 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 13:59:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:40.866 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:40.869 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:40.873 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:40.879 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:40.882 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:40.886 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 13:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:41.710 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:41.714 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:41.717 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:41.721 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:41.726 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:41.729 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 13:59:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:43.368 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:43.373 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:43.377 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:43.382 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:43.386 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:43.391 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 13:59:43.756 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 13:59:43.760 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 13:59:43.763 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 13:59:43.766 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 13:59:43.769 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 13:59:43.773 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 13:59:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:00:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:00:00.014+0800');
2020-08-11 14:00:10.012 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:00:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:00:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:00:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:00:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:00:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T14:00:10.012+0800');
2020-08-11 14:00:15.487 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:00:48.767 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:00:48.817 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:48.820 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:48.824 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:48.830 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:48.835 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:48.837 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:00:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:50.092 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:50.096 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:50.099 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:50.103 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:50.107 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:50.110 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:00:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:52.330 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:52.335 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:52.338 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:52.342 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:52.346 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:52.350 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:52.738 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:52.741 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:52.745 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:52.748 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:52.751 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:52.754 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:00:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:54.377 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:54.381 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:54.384 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:54.388 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:54.392 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:54.396 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:00:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:55.099 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:55.103 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:55.107 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:55.112 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:55.115 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:55.118 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:00:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:57.920 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:57.924 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:57.928 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:57.932 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:57.935 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:57.938 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:00:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:00:58.282 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:00:58.285 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:00:58.289 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:00:58.293 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:00:58.297 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:00:58.300 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:00:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:00.026 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:01:00.033 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:01:00.026+0800');
2020-08-11 14:01:02.267 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:02.271 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:02.275 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:02.278 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:02.281 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:02.285 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:05.457 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:05.460 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:05.463 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:05.467 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:05.470 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:05.474 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:05.808 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:05.811 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:05.815 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:05.819 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:05.822 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:05.825 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:08.159 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:08.163 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:08.167 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:08.170 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:08.173 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:08.177 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:08.523 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:08.527 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:08.531 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:08.534 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:08.537 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:08.540 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:01:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:01:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:01:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:01:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 14:01:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T14:01:10.017+0800');
2020-08-11 14:01:10.056 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:10.059 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:10.064 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:10.067 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:10.070 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:10.074 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:10.883 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:10.886 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:10.890 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:10.894 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:10.897 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:10.901 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:13.064 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:13.068 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:13.072 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:13.076 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:13.080 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:13.083 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:13.458 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:13.463 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:13.466 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:13.469 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:13.473 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:13.477 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:01:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:14.903 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:14.907 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:14.911 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:14.915 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:14.917 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:14.921 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:15.457 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:15.460 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:15.463 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:15.466 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:15.469 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:15.473 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:01:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:15.491 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:01:16.951 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:16.956 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:16.959 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:16.962 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:16.965 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:16.968 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:17.385 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:17.388 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:17.392 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:17.395 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:17.398 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:17.401 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:44.457 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:01:44.499 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:01:44.503 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:01:44.507 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:01:44.510 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:01:44.514 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:01:44.518 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:01:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:01:53.000 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:01:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 14:01:54.419 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:01:54.434 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:01:54.440 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:01:54.443 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:01:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:02:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:02:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:02:00.023+0800');
2020-08-11 14:02:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:02:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:02:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:02:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:02:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 14:02:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T14:02:10.009+0800');
2020-08-11 14:02:15.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:03:00.024 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:03:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:03:00.024+0800');
2020-08-11 14:03:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:03:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:03:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:03:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:03:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:03:10.071 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T14:03:10.042+0800');
2020-08-11 14:03:15.496 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:04:00.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:04:00.052 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:04:00.049+0800');
2020-08-11 14:04:06.020 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:04:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:04:06.090 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:04:06 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:04:06.092 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:04:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:04:06.099 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:04:06 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:04:06.102 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:04:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:04:07.243 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:04:07.246 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:04:07.251 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:04:07.255 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:04:07.260 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:04:07.263 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:04:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:04:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:04:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:04:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:04:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 14:04:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T14:04:10.016+0800');
2020-08-11 14:04:15.501 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:05:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:05:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:05:00.023+0800');
2020-08-11 14:05:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:05:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:05:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:05:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:05:10.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:05:10.042 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T14:05:10.008+0800');
2020-08-11 14:05:15.500 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:06:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:06:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:06:00.022+0800');
2020-08-11 14:06:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:06:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:06:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:06:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 14:06:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T14:06:10.018+0800');
2020-08-11 14:06:15.503 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:06:27.064 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:06:27.127 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:06:27.131 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:06:27.134 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:06:27.138 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:06:27.142 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:06:27.145 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:06:32.682 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:06:32.733 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:06:32.737 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:06:32.740 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:06:32.745 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:06:32.750 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:06:32.753 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:06:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:06:34.653 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:06:34.709 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:06:34.715 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:06:34.720 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:06:34.724 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:06:34.729 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:06:34.734 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:06:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:06:46.030 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:06:46.093 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:06:46.098 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:06:46.102 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:06:46.106 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:06:46.111 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:06:46.115 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:06:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:06:47.645 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:06:47.677 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:06:47.682 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:06:47.686 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:06:47.690 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:06:47.694 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:06:47.697 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:07:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:07:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:07:00.024+0800');
2020-08-11 14:07:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:07:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:07:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:07:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:07:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 14:07:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T14:07:10.018+0800');
2020-08-11 14:07:15.507 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:08:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:08:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:08:00.020+0800');
2020-08-11 14:08:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:08:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:08:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:08:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 14:08:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T14:08:10.017+0800');
2020-08-11 14:08:15.510 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:08:33.676 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:08:33.739 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:08:33.743 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:08:33.748 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:08:33.753 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:08:33.758 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:08:33.762 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:08:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:09:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:09:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:09:00.020+0800');
2020-08-11 14:09:10.118 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:09:10.130 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:09:10.134 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:09:10.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:09:10.164 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-11 14:09:10.172 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:09:10 | 耗时 4 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-11T14:09:10.118+0800');
2020-08-11 14:09:15.512 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:10:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:10:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:10:00.021+0800');
2020-08-11 14:10:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:10:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:10:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:10:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:10:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 14:10:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T14:10:10.010+0800');
2020-08-11 14:10:15.531 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:10:59.294 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:10:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:11:00.016 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:11:00.020 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:11:00.016+0800');
2020-08-11 14:11:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:11:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:11:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:11:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:11:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:11:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 14:11:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T14:11:10.008+0800');
2020-08-11 14:11:15.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:12:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:12:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:12:00.021+0800');
2020-08-11 14:12:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:12:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:12:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:12:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 14:12:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T14:12:10.018+0800');
2020-08-11 14:12:15.536 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:12:16.263 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:12:16 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:13:00.047 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:13:00.051 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:13:00.047+0800');
2020-08-11 14:13:10.011 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:13:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:13:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:13:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:13:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 14:13:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T14:13:10.011+0800');
2020-08-11 14:13:15.539 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:14:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:14:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:14:00.021+0800');
2020-08-11 14:14:08.684 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:14:08.762 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:14:08.767 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:14:08.771 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:14:08.777 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:14:08.781 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:14:08.785 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:14:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:14:10.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:14:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:14:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:14:10.072 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-08-11 14:14:10.075 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 62, '2020-08-11T14:14:10.010+0800');
2020-08-11 14:14:15.542 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:14:45.798 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:14:45.878 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:14:45.884 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:14:45.889 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:14:45.895 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:14:45.900 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:14:45.903 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:14:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:15:00.147 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:15:00.153 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:15:00.147+0800');
2020-08-11 14:15:10.098 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:15:10.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:15:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:15:10.111 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:15:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:15:10.143 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:15:10.152 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-11 14:15:10.156 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 54, '2020-08-11T14:15:10.098+0800');
2020-08-11 14:15:15.544 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:15:25.515 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:15:25.590 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:15:25.595 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:15:25.600 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:15:25.605 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:15:25.609 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:15:25.613 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:15:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:16:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:16:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:16:00.022+0800');
2020-08-11 14:16:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:16:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:16:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:16:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:16:10.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 14:16:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T14:16:10.007+0800');
2020-08-11 14:16:15.547 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:17:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:17:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:17:00.021+0800');
2020-08-11 14:17:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:17:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:17:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:17:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:17:10.037 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 14:17:10.040 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T14:17:10.008+0800');
2020-08-11 14:17:15.548 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:17:33.293 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:17:33.389 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:17:33.395 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:17:33.401 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:17:33.406 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:17:33.412 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:17:33.415 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:17:56.715 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:17:56.772 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:17:56.776 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:17:56.780 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:17:56.784 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:17:56.787 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:17:56.791 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:17:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:18:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:18:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:18:00.022+0800');
2020-08-11 14:18:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:18:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:18:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:18:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:18:10.038 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:18:10.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T14:18:10.008+0800');
2020-08-11 14:18:15.550 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:18:22.799 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:18:22.887 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:18:22.910 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:18:22.915 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:18:22.919 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:18:22.922 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:18:22.926 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:18:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:19:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:19:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:19:00.022+0800');
2020-08-11 14:19:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:19:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:19:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:19:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:19:10.079 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 14:19:10.082 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T14:19:10.042+0800');
2020-08-11 14:19:15.554 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:19:48.474 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:19:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:19:48.477 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:19:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:19:53.745 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 14:20:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:20:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:20:00.020+0800');
2020-08-11 14:20:10.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:20:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:20:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:20:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:20:10.033 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:20:10.036 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T14:20:10.007+0800');
2020-08-11 14:20:15.556 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:21:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:21:00.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:21:00.046+0800');
2020-08-11 14:21:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:21:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:21:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:21:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:21:10.072 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 14:21:10.075 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T14:21:10.041+0800');
2020-08-11 14:21:15.561 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:22:00.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:22:00.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:22:00.045+0800');
2020-08-11 14:22:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:22:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:22:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:22:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:22:10.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:22:10.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T14:22:10.008+0800');
2020-08-11 14:22:15.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:23:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:23:00.049 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:23:00.046+0800');
2020-08-11 14:23:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:23:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:23:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:23:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:23:10.066 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 14:23:10.069 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-11T14:23:10.042+0800');
2020-08-11 14:23:15.565 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:23:22.081 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:23:22.174 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:22.180 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:22.185 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:22.192 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:22.197 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:22.201 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:23.288 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:23.292 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:23.296 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:23.302 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:23.306 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:23.310 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:24.400 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:24.403 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:24.406 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:24.409 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:24.413 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:24.416 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:29.143 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:29.147 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:29.150 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:29.154 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:29.158 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:29.162 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:30.007 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:30.011 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:30.015 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:30.018 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:30.022 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:30.025 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:32.520 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:32.524 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:32.529 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:32.533 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:32.537 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:32.541 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:34.047 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:34.051 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:34.054 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:34.059 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:34.063 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:34.066 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:23:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:37.777 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:37.780 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:37.785 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:37.790 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:37.793 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:37.796 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:38.719 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:38.723 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:38.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:38.731 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:38.736 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:38.739 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:23:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:39.798 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:39.803 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:39.808 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:39.812 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:39.815 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:39.818 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:23:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:40.366 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:40.370 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:40.374 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:40.377 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:40.380 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:40.383 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:23:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:41.662 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:41.665 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:41.669 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:41.674 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:41.678 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:41.681 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:23:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:48.384 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:48.387 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:48.391 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:48.395 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:48.399 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:48.405 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:49.654 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:49.657 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:49.662 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:49.666 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:49.670 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:49.673 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:50.943 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:50.946 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:50.949 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:50.953 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:50.956 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:50.960 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:23:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:51.543 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:51.547 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:51.551 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:51.554 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:51.558 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:51.561 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:23:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:23:52.190 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:23:52.194 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:23:52.197 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:23:52.200 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:23:52.205 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:23:52.209 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:23:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:24:00.045 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:24:00.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:24:00.045+0800');
2020-08-11 14:24:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:24:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:24:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:24:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:24:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:24:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T14:24:10.020+0800');
2020-08-11 14:24:15.568 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:25:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:25:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:25:00.019+0800');
2020-08-11 14:25:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:25:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:25:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:25:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:25:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T14:25:10.018+0800');
2020-08-11 14:25:15.569 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:25:19.407 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:25:19.515 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:19.520 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:19.523 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:19.529 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:19.534 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:19.539 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:25:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:20.896 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:20.900 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:20.903 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:20.906 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:20.910 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:20.914 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:25:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:22.719 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:22.722 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:22.725 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:22.729 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:22.734 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:22.739 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:25:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:23.870 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:23.874 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:23.878 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:23.882 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:23.886 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:23.891 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:24.696 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:24.700 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:24.704 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:24.708 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:24.713 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:24.717 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:25:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:25.302 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:25.305 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:25.309 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:25.312 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:25.316 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:25.319 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:25.911 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:25.915 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:25.919 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:25.922 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:25.926 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:25.930 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:25:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:26.573 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:26.577 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:26.581 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:26.585 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:26.588 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:26.592 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:25:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:25:27.633 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:25:27.636 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:25:27.639 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:25:27.643 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:25:27.647 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:25:27.651 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:25:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:00.027 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:26:00.033 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:26:00.027+0800');
2020-08-11 14:26:04.054 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:04.136 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:04.141 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:04.146 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:04.151 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:04.154 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:04.159 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:04 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:05.332 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:05.408 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:05.412 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:05.416 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:05.421 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:05.425 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:05.430 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:07.974 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:07.978 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:07.982 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:07.986 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:07.992 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:07.996 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:09.308 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:09.357 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:09.360 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:09.363 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:09.367 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:09.371 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:09.375 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:26:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:26:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:26:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:26:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:26:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T14:26:10.016+0800');
2020-08-11 14:26:12.064 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:12.067 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:12.072 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:12.076 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:12.081 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:12.085 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:13.287 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:13.339 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:13.342 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:13.346 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:13.349 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:13.352 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:13.356 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:15.570 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:26:17.025 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:17.091 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:17.095 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:17.099 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:17.103 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:17.108 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:17.112 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:17.785 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:17.788 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:17.792 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:17.795 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:17.799 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:17.802 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:19.160 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:19.226 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:19.231 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:19.235 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:19.241 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:19.245 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:19.250 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:19.920 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:19.923 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:19.926 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:19.931 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:19.935 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:19.938 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:21.285 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:26:21.337 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:26:21.341 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:26:21.346 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:26:21.350 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:26:21.354 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:26:21.357 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:26:27.457 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:27.459 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:28.430 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:28 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:28.432 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:26:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:28.448 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:28.451 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:29.206 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:29.208 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:29.866 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:29.869 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:29.890 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:29.893 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:26:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:30.487 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:30 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:30.490 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:26:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:30.505 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:30.507 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:26:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:31.072 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:31 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:31.074 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:26:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:31.231 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:26:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:31.233 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:26:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:32.696 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:32 | 耗时 19 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 14:26:32.698 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:26:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:34.766 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:26:34.767 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:34.771 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 14:26:34.774 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:26:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 14:26:37.801 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:26:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 14:27:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:27:00.031 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:27:00.023+0800');
2020-08-11 14:27:01.435 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:27:01.516 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:01.520 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:01.525 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:01.531 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:01.535 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:01.539 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:27:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:27:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:27:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:27:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 14:27:10.040 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T14:27:10.007+0800');
2020-08-11 14:27:15.573 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:27:18.584 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:27:18.665 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:18.669 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:18.673 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:18.679 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:18.684 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:18.689 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:36.531 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:27:36.629 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:36.634 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:36.639 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:36.645 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:36.650 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:36.654 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:37.222 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:37.225 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:37.229 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:37.233 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:37.236 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:37.238 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:37.817 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:37.820 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:37.824 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:37.829 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:37.832 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:37.835 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:38.048 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:38.052 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:38.054 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:38.058 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:38.062 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:38.065 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:38.277 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:38.280 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:38.283 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:38.287 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:38.291 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:38.294 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:38.512 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:38.516 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:38.519 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:38.522 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:38.527 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:38.530 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:38.726 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:38.730 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:38.733 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:38.735 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:38.738 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:38.742 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:38.949 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:38.952 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:38.955 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:38.958 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:38.962 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:38.965 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:27:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:41.053 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:41.058 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:41.061 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:41.064 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:41.067 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:41.071 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:41.279 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:41.283 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:41.288 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:41.292 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:41.295 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:41.299 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:27:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:42.286 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:42.291 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:42.295 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:42.298 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:42.301 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:42.305 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:27:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:43.366 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:43.370 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:43.374 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:43.377 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:43.381 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:43.385 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:43.402 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:43.407 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:43.411 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:43.415 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:43.418 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:43.422 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:43.862 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:43.865 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:43.869 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:43.872 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:43.877 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:43.880 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:43.888 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:43.892 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:43.896 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:43.899 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:43.902 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:43.906 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:27:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:44.349 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:44.353 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:44.356 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:44.360 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:44.364 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:44.367 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:27:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:27:45.270 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:27:45.274 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:27:45.278 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:27:45.281 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:27:45.284 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:27:45.287 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:27:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:28:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:28:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:28:00.021+0800');
2020-08-11 14:28:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:28:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:28:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:28:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:28:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-11 14:28:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-11T14:28:10.017+0800');
2020-08-11 14:28:15.575 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:29:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:29:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:29:00.023+0800');
2020-08-11 14:29:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:29:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:29:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:29:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T14:29:10.017+0800');
2020-08-11 14:29:15.577 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:30:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:30:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:30:00.020+0800');
2020-08-11 14:30:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:30:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:30:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:30:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:30:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 14:30:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T14:30:10.017+0800');
2020-08-11 14:30:15.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:31:00.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:31:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:31:00.018+0800');
2020-08-11 14:31:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:31:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:31:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:31:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:31:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:31:10.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T14:31:10.017+0800');
2020-08-11 14:31:15.585 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:31:28.941 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:31:29.042 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:29.046 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:29.050 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:29.053 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:29.057 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:29.061 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:29.729 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:29.734 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:29.740 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:29.744 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:29.747 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:29.751 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:30.839 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:30.842 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:30.846 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:30.849 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:30.853 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:30.857 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:31.441 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:31.444 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:31.449 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:31.452 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:31.455 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:31.459 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:41.685 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:31:41.778 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:41.783 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:41.786 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:41.789 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:41.794 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:41.797 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:31:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:42.830 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:42.835 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:42.840 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:42.844 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:42.849 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:42.854 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:31:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:43.656 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:43.661 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:43.665 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:43.668 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:43.672 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:43.676 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:31:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:48.822 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:48.825 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:48.829 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:48.832 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:48.835 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:48.838 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:31:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:49.534 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:49.537 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:49.541 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:49.544 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:49.547 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:49.550 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:50.149 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:50.152 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:50.155 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:50.159 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:50.162 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:50.165 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:50.726 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:50.728 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:50.731 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:50.734 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:50.737 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:50.740 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:51.333 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:51.336 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:51.339 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:51.343 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:51.346 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:51.349 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:31:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:52.157 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:52.159 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:52.162 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:52.165 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:52.168 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:52.170 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:31:52.806 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:31:52.811 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:31:52.815 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:31:52.818 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:31:52.821 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:31:52.823 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:32:00.040 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:32:00 | 耗时 11 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:32:00.024+0800');
2020-08-11 14:32:08.660 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:32:08.733 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:08.738 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:08.741 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:08.746 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:08.750 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:08.754 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:09.646 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:09.650 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:09.654 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:09.657 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:09.660 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:09.664 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:32:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:32:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:32:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:32:10.038 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:32:10.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T14:32:10.008+0800');
2020-08-11 14:32:10.511 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:10.516 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:10.520 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:10.525 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:10.529 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:10.532 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:14.883 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:32:14.935 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:14.938 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:14.942 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:14.945 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:14.951 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:14.954 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:15.588 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:32:16.505 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:16.510 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:16.514 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:16.519 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:16.523 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:16.526 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:32:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:17.121 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:17.124 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:17.128 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:17.132 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:17.135 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:17.138 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:29.149 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:32:29.212 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:29.215 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:29.220 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:29.223 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:29.226 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:29.230 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:30.293 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:30.297 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:30.301 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:30.306 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:30.311 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:30.315 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:30.936 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:30.940 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:30.945 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:30.949 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:30.953 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:30.957 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:37.356 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:32:37.421 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:37.424 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:37.429 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:37.433 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:37.436 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:37.439 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:32:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:47.126 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:32:47.189 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:47.192 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:47.196 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:47.199 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:47.203 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:47.207 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:32:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:50.352 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:50.355 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:50.358 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:50.360 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:50.363 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:50.365 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:52.875 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:52.878 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:52.882 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:52.885 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:52.888 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:52.891 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:32:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:32:56.262 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:32:56.266 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:32:56.268 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:32:56.271 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:32:56.274 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:32:56.276 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:32:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:33:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:33:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:33:00.023+0800');
2020-08-11 14:33:01.143 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:33:01.208 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:33:01.212 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:33:01.216 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:33:01.220 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:33:01.224 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:33:01.228 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:33:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:33:02.323 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:33:02.327 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:33:02.331 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:33:02.334 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:33:02.338 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:33:02.341 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:33:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:33:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:33:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:33:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 14:33:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T14:33:10.018+0800');
2020-08-11 14:33:15.590 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:34:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:34:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:34:00.021+0800');
2020-08-11 14:34:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:34:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:34:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:34:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:34:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:34:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T14:34:10.016+0800');
2020-08-11 14:34:15.594 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:35:00.012 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:35:00.016 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:35:00.012+0800');
2020-08-11 14:35:03.590 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:35:03.593 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:35:03.596 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:35:03.599 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:35:03.602 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:35:03.604 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:35:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:35:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:35:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:35:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:35:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:35:10.034 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:35:10.037 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T14:35:10.009+0800');
2020-08-11 14:35:15.596 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:35:42.619 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:35:42.683 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:35:42.687 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:35:42.691 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:35:42.695 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:35:42.700 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:35:42.703 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:35:44.307 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:35:44.310 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:35:44.314 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:35:44.317 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:35:44.320 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:35:44.324 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:36:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:36:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:36:00.021+0800');
2020-08-11 14:36:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:36:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:36:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:36:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:36:10.057 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 14:36:10.060 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-11T14:36:10.019+0800');
2020-08-11 14:36:11.118 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:36:11.197 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:36:11.201 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:36:11.205 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:36:11.209 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:36:11.212 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:36:11.217 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:36:15.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:36:15.643 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:36:15.647 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:36:15.650 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:36:15.654 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:36:15.657 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:36:15.660 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:36:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:37:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:37:00.015 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:37:00.012+0800');
2020-08-11 14:37:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:37:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:37:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:37:10.056 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-11 14:37:10.059 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-11T14:37:10.016+0800');
2020-08-11 14:37:15.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:37:16.862 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:37:16.952 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:37:16.957 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:37:16.962 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:37:16.966 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:37:16.971 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:37:16.975 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:37:36.751 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:37:36.849 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:37:36.854 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:37:36.858 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:37:36.864 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:37:36.869 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:37:36.874 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:37:39.398 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:37:39.491 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:37:39.496 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:37:39.500 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:37:39.504 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:37:39.509 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:37:39.514 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:37:51.474 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:37:51.559 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:37:51.564 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:37:51.570 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:37:51.574 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:37:51.579 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:37:51.584 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:37:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:37:53.060 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:37:53.138 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:37:53.141 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:37:53.146 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:37:53.151 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:37:53.155 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:37:53.159 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:37:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:38:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:38:00.035 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:38:00.030+0800');
2020-08-11 14:38:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:38:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:38:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:38:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T14:38:10.019+0800');
2020-08-11 14:38:15.603 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:38:34.465 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:38:34.572 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:38:34.578 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:38:34.584 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:38:34.589 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:38:34.594 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:38:34.600 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:38:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:38:36.443 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:38:36.447 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:38:36.450 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:38:36.453 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:38:36.457 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:38:36.460 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:38:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:38:40.706 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:38:40.709 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:38:40.712 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:38:40.714 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:38:40.718 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:38:40.720 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:38:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:38:43.250 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:38:43.253 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:38:43.256 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:38:43.259 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:38:43.262 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:38:43.264 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 14:38:43 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:39:00.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:39:00.051 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:39:00.047+0800');
2020-08-11 14:39:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:39:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:39:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:39:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:39:10.050 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T14:39:10.017+0800');
2020-08-11 14:39:15.603 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:40:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:40:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:40:00.010+0800');
2020-08-11 14:40:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:40:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:40:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:40:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:40:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T14:40:10.019+0800');
2020-08-11 14:40:15.606 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:40:45.746 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:40:45.825 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:40:45.830 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:40:45.835 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:40:45.839 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:40:45.844 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:40:45.849 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:40:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:40:53.955 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:40:53.957 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:40:53.961 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:40:53.964 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:40:53.968 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:40:53.971 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:40:56.082 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:40:56.086 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:40:56.089 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:40:56.093 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:40:56.097 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:40:56.101 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 14:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:41:00.013 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:41:00.016 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:41:00.013+0800');
2020-08-11 14:41:00.547 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:41:00.550 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:41:00.553 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:41:00.557 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:41:00.560 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:41:00.563 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:41:10.015 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:41:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:41:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:41:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:41:10.040 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:41:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T14:41:10.015+0800');
2020-08-11 14:41:15.610 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:42:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:42:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:42:00.023+0800');
2020-08-11 14:42:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:42:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:42:10 | 耗时 4 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:42:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:42:10.055 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-11 14:42:10.059 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-11T14:42:10.016+0800');
2020-08-11 14:42:15.610 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:43:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:43:00.018 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:43:00.012+0800');
2020-08-11 14:43:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:43:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:43:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:43:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:43:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T14:43:10.019+0800');
2020-08-11 14:43:15.621 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:44:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:44:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:44:00.022+0800');
2020-08-11 14:44:10.120 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:44:10.123 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:44:10.126 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:44:10.159 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:44:10.162 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-11 14:44:10.165 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-11T14:44:10.120+0800');
2020-08-11 14:44:15.620 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:45:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:45:00.016 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:45:00.011+0800');
2020-08-11 14:45:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:45:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:45:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:45:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 14:45:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T14:45:10.018+0800');
2020-08-11 14:45:15.633 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:46:00.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:46:00.016 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:46:00.011+0800');
2020-08-11 14:46:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:46:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:46:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:46:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:46:10.103 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:46:10.107 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：73 毫秒
2020-08-11 14:46:10.111 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 73, '2020-08-11T14:46:10.034+0800');
2020-08-11 14:46:15.636 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:47:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:47:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:47:00.021+0800');
2020-08-11 14:47:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:47:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:47:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:47:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:47:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 14:47:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T14:47:10.018+0800');
2020-08-11 14:47:15.640 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:48:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:48:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:48:00.020+0800');
2020-08-11 14:48:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:48:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:48:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:48:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 14:48:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-11T14:48:10.018+0800');
2020-08-11 14:48:15.642 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:49:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:49:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:49:00.021+0800');
2020-08-11 14:49:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:49:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:49:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:49:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:49:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T14:49:10.018+0800');
2020-08-11 14:49:15.644 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:50:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:50:00.015 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 14:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:50:00.011+0800');
2020-08-11 14:50:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:50:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:50:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 14:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T14:50:10.018+0800');
2020-08-11 14:50:15.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:51:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:51:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 14:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:51:00.020+0800');
2020-08-11 14:51:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:51:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:51:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:51:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 14:51:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 14:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T14:51:10.017+0800');
2020-08-11 14:51:15.648 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:52:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:52:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 14:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:52:00.012+0800');
2020-08-11 14:52:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:52:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:52:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:52:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:52:10.068 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 14:52:10.071 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 14:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T14:52:10.041+0800');
2020-08-11 14:52:15.650 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:52:35.029 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:52:35.136 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:52:35.147 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:52:35.153 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:52:35.159 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:52:35.162 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:52:35.166 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 14:52:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:53:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:53:00.016 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 14:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:53:00.012+0800');
2020-08-11 14:53:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:53:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:53:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:53:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:53:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 14:53:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 14:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T14:53:10.016+0800');
2020-08-11 14:53:15.651 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:54:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:54:00.016 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 14:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:54:00.012+0800');
2020-08-11 14:54:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:54:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:54:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 14:54:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 14:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T14:54:10.017+0800');
2020-08-11 14:54:15.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:54:40.887 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:54:40.975 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:54:40.980 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:54:40.985 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:54:40.990 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:54:40.996 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:54:41.001 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:54:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:55:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:55:00.015 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 14:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:55:00.011+0800');
2020-08-11 14:55:02.485 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:55:02.558 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:55:02.562 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:55:02.567 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:55:02.571 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:55:02.577 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:55:02.582 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:55:10.135 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:55:10.164 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:55:10.174 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:55:10.220 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:55:10.223 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：88 毫秒
2020-08-11 14:55:10.229 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 14:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 88, '2020-08-11T14:55:10.135+0800');
2020-08-11 14:55:15.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:55:23.584 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:55:23.657 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:55:23.667 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:55:23.672 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:55:23.677 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:55:23.679 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:55:23.682 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:55:37.846 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:55:37.938 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:55:37.944 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:55:37.948 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:55:37.952 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:55:37.957 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:55:37.962 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:55:48.152 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:55:48.229 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 3 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:55:48.235 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:55:48.239 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:55:48.244 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:55:48.248 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:55:48.253 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:55:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:56:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:56:00.032 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 14:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:56:00.024+0800');
2020-08-11 14:56:10.226 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:56:10.233 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:56:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:56:10.237 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:56:10.278 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:56:10.280 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-11 14:56:10.284 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 14:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-11T14:56:10.226+0800');
2020-08-11 14:56:14.948 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 14:56:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:56:15.026 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:56:15.030 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:56:15.033 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:56:15.037 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:56:15.042 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:56:15.048 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:56:15.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:56:24.813 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:56:24.894 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:56:24.898 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:56:24.904 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:56:24.909 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:56:24.914 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:56:24.919 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 14:56:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 14:57:00.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:57:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 14:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T14:57:00.017+0800');
2020-08-11 14:57:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:57:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:57:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:57:10.055 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 14:57:10.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 14:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T14:57:10.019+0800');
2020-08-11 14:57:15.691 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:58:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:58:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 14:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:58:00.021+0800');
2020-08-11 14:58:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:58:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:58:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:58:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 14:58:10.045 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 14:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T14:58:10.017+0800');
2020-08-11 14:58:15.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:59:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 14:59:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 14:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T14:59:00.022+0800');
2020-08-11 14:59:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 14:59:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 14:59:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 14:59:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 14:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 14:59:10.071 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 14:59:10.074 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 14:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T14:59:10.046+0800');
2020-08-11 14:59:15.702 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 14:59:50.636 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 14:59:50.733 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 14:59:50.738 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 14:59:50.742 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 14:59:50.747 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 14:59:50.752 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 14:59:50.757 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 14:59:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:00:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:00:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:00:00.020+0800');
2020-08-11 15:00:10.027 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:00:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:00:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:00:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:00:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:00:10.083 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-11 15:00:10.088 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-08-11T15:00:10.027+0800');
2020-08-11 15:00:15.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:01:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:01:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:01:00.022+0800');
2020-08-11 15:01:10.012 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:01:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:01:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:01:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 15:01:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T15:01:10.012+0800');
2020-08-11 15:01:11.230 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:01:11.344 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:01:11.350 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:01:11.354 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:01:11.359 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:01:11.364 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:01:11.370 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:01:15.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:01:38.551 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:01:38.636 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:01:38.641 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:01:38.646 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:01:38.651 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:01:38.657 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:01:38.661 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:01:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:02:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:02:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:02:00.021+0800');
2020-08-11 15:02:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:02:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:02:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:02:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:02:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 15:02:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-11T15:02:10.009+0800');
2020-08-11 15:02:15.705 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:03:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:03:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:03:00.021+0800');
2020-08-11 15:03:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:03:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:03:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:03:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:03:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:03:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:03:10.016+0800');
2020-08-11 15:03:15.711 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:03:26.141 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:03:26.244 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:03:26.249 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:03:26.253 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:03:26.258 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:03:26.263 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:03:26.267 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:03:42.861 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:03:42.943 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:03:42.948 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:03:42.952 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:03:42.956 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:03:42.961 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:03:42.965 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:03:59.041 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:03:59.129 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:03:59.135 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:03:59.142 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:03:59.147 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:03:59.152 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:03:59.157 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:03:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:04:00.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:04:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:04:00.018+0800');
2020-08-11 15:04:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:04:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:04:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:04:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:04:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 15:04:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T15:04:10.018+0800');
2020-08-11 15:04:15.710 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:04:24.325 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:04:24.398 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:04:24.402 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:04:24.406 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:04:24.411 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:04:24.415 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:04:24.417 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:04:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:04:52.010 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:04:52.079 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:04:52.084 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:04:52.089 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:04:52.092 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:04:52.096 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:04:52.098 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:04:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:04:58.906 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:04:58.975 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:04:58.981 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:04:58.984 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:04:58.989 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:04:58.993 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:04:58.996 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:04:58 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:05:00.015 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:05:00.019 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:05:00.015+0800');
2020-08-11 15:05:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:05:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:05:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:05:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:05:10.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T15:05:10.017+0800');
2020-08-11 15:05:11.675 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:05:11.757 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:05:11.761 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:05:11.765 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:05:11.771 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:05:11.776 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:05:11.780 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:05:15.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:05:34.552 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:05:34.626 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:05:34.630 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:05:34.635 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:05:34.639 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:05:34.643 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:05:34.646 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:05:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:05:51.497 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:05:51.501 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:05:51.504 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:05:51.507 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:05:51.510 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:05:51.513 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:05:52.600 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:05:52.603 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:05:52.606 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:05:52.609 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:05:52.611 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:05:52.614 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:05:54.862 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:05:54.919 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:05:54.922 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:05:54.926 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:05:54.929 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:05:54.933 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:05:54.936 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:05:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:06:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:06:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:06:00.010+0800');
2020-08-11 15:06:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:06:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:06:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:06:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T15:06:10.018+0800');
2020-08-11 15:06:15.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:06:18.951 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:06:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:06:19.037 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:06:19.041 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:06:19.046 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:06:19.050 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:06:19.054 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:06:19.058 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:06:44.664 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:06:44.741 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:06:44.744 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:06:44.749 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:06:44.754 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:06:44.759 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:06:44.762 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:06:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:07:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:07:00.017 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:07:00.013+0800');
2020-08-11 15:07:03.581 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:07:03.667 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:07:03.672 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:07:03.677 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:07:03.682 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:07:03.688 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:07:03.691 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:07:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:07:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:07:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:07:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:07:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:07:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-11T15:07:10.019+0800');
2020-08-11 15:07:15.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:07:21.201 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:07:21.285 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:07:21.290 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:07:21.294 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:07:21.298 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:07:21.303 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:07:21.307 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:07:40.413 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:07:40.488 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:07:40.493 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:07:40.498 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:07:40.503 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:07:40.508 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:07:40.510 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:07:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:07:47.855 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:07:47.931 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:07:47.935 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:07:47.940 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:07:47.944 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:07:47.950 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:07:47.954 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:07:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:08:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:08:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:08:00.013+0800');
2020-08-11 15:08:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:08:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:08:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:08:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:08:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:08:10.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 15:08:10.056 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T15:08:10.020+0800');
2020-08-11 15:08:13.339 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:08:13.417 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:08:13.422 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:08:13.427 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:08:13.432 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:08:13.436 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:08:13.440 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:08:15.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:08:28.489 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:08:28.579 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:08:28.585 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:08:28.590 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:08:28.595 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:08:28.600 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:08:28.605 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:08:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:09:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:09:00.017 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:09:00.012+0800');
2020-08-11 15:09:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:09:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:09:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:09:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:09:10.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:09:10.035 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T15:09:10.007+0800');
2020-08-11 15:09:15.721 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:09:48.403 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:09:48.472 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:09:48.478 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:09:48.482 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:09:48.486 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:09:48.490 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:09:48.494 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:09:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:10:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:10:00.017 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:10:00.014+0800');
2020-08-11 15:10:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:10:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:10:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:10:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:10:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 15:10:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T15:10:10.017+0800');
2020-08-11 15:10:15.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:10:36.377 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:10:36.460 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:10:36.466 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:10:36.471 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:10:36.476 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:10:36.480 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:10:36.485 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:10:49.997 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:10:49 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:10:50.075 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:10:50.079 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:10:50.084 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:10:50.090 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:10:50.095 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:10:50.099 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:10:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:11:00.016 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:11:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:11:00.016+0800');
2020-08-11 15:11:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:11:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:11:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:11:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:11:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 15:11:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T15:11:10.018+0800');
2020-08-11 15:11:15.726 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:11:24.036 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:11:24.129 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:11:24.133 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:11:24.139 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:11:24.144 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:11:24.149 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:11:24.154 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:11:42.729 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:11:42.798 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:11:42.802 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:11:42.808 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:11:42.812 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:11:42.817 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:11:42.821 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:12:00.027 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:12:00.032 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:12:00.027+0800');
2020-08-11 15:12:00.544 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:00.676 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:12:00.682 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:12:00.688 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:12:00.693 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:12:00.699 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:12:00.703 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:12:10.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:12:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:12:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:12:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:12:10.030 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-11 15:12:10.032 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-11T15:12:10.007+0800');
2020-08-11 15:12:15.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:12:22.310 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:22.387 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:12:22.391 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:12:22.396 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:12:22.400 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:12:22.405 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:12:22.409 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:12:38.311 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:12:38 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:47.830 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:12:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:48.705 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:12:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:49.534 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:12:49 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:50.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:50.510 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:12:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:51.345 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:12:51 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:58.128 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:12:58.215 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:12:58.220 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:12:58.225 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:12:58.229 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:12:58.233 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:12:58.237 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:12:58 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:13:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:13:00.018 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:13:00.013+0800');
2020-08-11 15:13:05.784 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 15:13:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:13:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:13:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:13:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:13:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:13:10.016+0800');
2020-08-11 15:13:15.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:13:40.197 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:13:40.257 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:13:40.261 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:13:40.264 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:13:40.268 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:13:40.274 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:13:40.277 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:13:40.945 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:13:40.998 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:13:41.003 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:13:41.007 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:13:41.010 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:13:41.014 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:13:41.017 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:13:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:13:43.152 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:13:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 15:13:43.155 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:13:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 15:13:56.325 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:13:56.463 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T15:13:56.460+0800' WHERE (USERNAME = 'admin');
2020-08-11 15:13:56.468 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 15:13:56.471 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 15:13:56.475 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 15:13:56.478 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 15:13:56.482 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:13:56 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 15:13:59.007 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:13:59.010 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:13:59.014 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:13:59.018 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:13:59.021 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:13:59.024 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:13:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:14:00.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:14:00.016 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:14:00.011+0800');
2020-08-11 15:14:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:14:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:14:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:14:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T15:14:10.018+0800');
2020-08-11 15:14:13.443 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:14:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:14:15.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:14:27.843 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:14:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:14:29.542 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:14:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 15:14:37.222 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:14:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:14:48.264 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:14:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:14:49.374 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:14:49 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:14:50.975 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:14:50.980 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:14:50.984 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:14:50.988 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:14:50.992 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:14:50.996 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:14:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:15:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:15:00.017 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:15:00.011+0800');
2020-08-11 15:15:07.249 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:15:07.317 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:15:07.322 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:15:07.327 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:15:07.332 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:15:07.337 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:15:07.340 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:15:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:15:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:15:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:15:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:15:10.040 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:15:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-11T15:15:10.016+0800');
2020-08-11 15:15:15.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:15:32.458 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:15:32.531 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:15:32.535 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:15:32.540 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:15:32.545 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:15:32.549 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:15:32.553 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:15:47.263 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:15:47.341 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:15:47.346 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:15:47.351 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:15:47.356 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:15:47.360 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:15:47.364 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:15:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:16:00.013 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:16:00.017 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:16:00.013+0800');
2020-08-11 15:16:00.535 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:16:00.613 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:16:00.617 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:16:00.622 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:16:00.626 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:16:00.632 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:16:00.636 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:16:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:16:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:16:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:16:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:16:10.052 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 15:16:10.055 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T15:16:10.023+0800');
2020-08-11 15:16:15.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:16:19.790 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:16:19.894 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:16:19.900 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:16:19.904 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:16:19.909 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:16:19.914 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:16:19.918 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:17:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:17:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:17:00.013+0800');
2020-08-11 15:17:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:17:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:17:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:17:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:17:10.055 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 15:17:10.058 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-11T15:17:10.017+0800');
2020-08-11 15:17:15.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:17:24.040 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:17:24.119 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:17:24.124 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:17:24.127 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:17:24.132 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:17:24.136 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:17:24.141 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:17:50.642 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:17:50.720 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:17:50.725 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:17:50.729 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:17:50.735 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:17:50.740 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:17:50.744 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:17:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:18:00.012 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:18:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:18:00.012+0800');
2020-08-11 15:18:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:18:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:18:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:18:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:18:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:18:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T15:18:10.018+0800');
2020-08-11 15:18:15.745 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:18:24.781 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:18:24.857 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:18:24.861 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:18:24.865 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:18:24.871 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:18:24.875 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:18:24.878 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:19:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:19:00.017 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:19:00.012+0800');
2020-08-11 15:19:02.056 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:19:02.124 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:19:02.129 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:19:02.134 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:19:02.138 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:19:02.141 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:19:02.144 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:19:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:19:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:19:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:19:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:19:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:19:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:19:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:19:10.016+0800');
2020-08-11 15:19:15.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:19:42.779 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:19:42.852 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:19:42.856 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:19:42.860 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:19:42.865 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:19:42.869 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:19:42.872 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:19:53.875 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:19:53.951 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:19:53.956 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:19:53.960 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:19:53.964 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:19:53.969 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:19:53.973 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:19:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:20:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:20:00.017 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:20:00.011+0800');
2020-08-11 15:20:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:20:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:20:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:20:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:20:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T15:20:10.019+0800');
2020-08-11 15:20:15.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:20:15.925 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:20:15 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:20:16.008 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:20:16.013 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:20:16.025 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:20:16.028 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:20:16.031 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:20:16.034 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:20:27.034 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:20:27.109 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:20:27.113 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:20:27.117 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:20:27.122 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:20:27.126 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:20:27.129 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:20:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:20:48.398 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:20:48.458 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:20:48.462 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:20:48.465 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:20:48.469 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:20:48.472 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:20:48.476 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:20:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:21:00.014 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:21:00.018 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:21:00.014+0800');
2020-08-11 15:21:07.840 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:21:07.919 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:21:07.923 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:21:07.928 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:21:07.932 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:21:07.936 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:21:07.939 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:21:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:21:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:21:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:21:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:21:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:21:10.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 15:21:10.051 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T15:21:10.017+0800');
2020-08-11 15:21:15.756 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:22:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:22:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:22:00.012+0800');
2020-08-11 15:22:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:22:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:22:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:22:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:22:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:22:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T15:22:10.017+0800');
2020-08-11 15:22:15.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:22:33.047 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:22:33.116 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:22:33.120 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:22:33.123 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:22:33.127 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:22:33.130 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:22:33.135 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:22:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:23:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:23:00.015 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:23:00.012+0800');
2020-08-11 15:23:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:23:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:23:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:23:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:23:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:23:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-11T15:23:10.016+0800');
2020-08-11 15:23:15.765 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:24:00.013 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:24:00.016 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:24:00.013+0800');
2020-08-11 15:24:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:24:10.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 15:24:10.054 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T15:24:10.018+0800');
2020-08-11 15:24:12.448 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:24:12.548 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:24:12.553 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:24:12.558 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:24:12.563 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:24:12.568 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:24:12.572 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:24:15.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:24:23.409 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:24:23.492 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:24:23.496 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:24:23.500 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:24:23.504 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:24:23.507 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:24:23.510 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:24:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:25:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:25:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:25:00.020+0800');
2020-08-11 15:25:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:25:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:25:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:25:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 15:25:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T15:25:10.017+0800');
2020-08-11 15:25:15.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:26:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:26:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:26:00.022+0800');
2020-08-11 15:26:03.633 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:26:03.710 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:26:03.716 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:26:03.721 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:26:03.726 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:26:03.730 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:26:03.736 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:26:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:26:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:26:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:26:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:26:10.064 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-11 15:26:10.068 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-11T15:26:10.021+0800');
2020-08-11 15:26:15.768 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:26:25.910 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:26:25.981 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:26:25.986 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:26:25.991 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:26:25.996 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:26:25.999 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:26:26.003 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:26:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:27:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:27:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:27:00.024+0800');
2020-08-11 15:27:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:27:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:27:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:27:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:27:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:27:10.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 15:27:10.052 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T15:27:10.019+0800');
2020-08-11 15:27:15.771 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:27:18.993 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:27:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:27:19.077 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:27:19.083 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:27:19.088 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:27:19.092 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:27:19.098 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:27:19.102 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:27:47.784 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:27:47.862 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:27:47.867 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:27:47.872 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:27:47.876 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:27:47.879 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:27:47.882 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:27:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:28:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:28:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:28:00.020+0800');
2020-08-11 15:28:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:28:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:28:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:28:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:28:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:28:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T15:28:10.018+0800');
2020-08-11 15:28:15.771 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:28:24.988 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:28:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:28:25.061 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:28:25.065 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:28:25.068 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:28:25.072 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:28:25.076 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:28:25.080 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:29:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:29:00.049 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:29:00.045+0800');
2020-08-11 15:29:06.563 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:29:06.634 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:29:06.639 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:29:06.643 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:29:06.647 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:29:06.650 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:29:06.655 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:29:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:29:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:29:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:29:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:29:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 15:29:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T15:29:10.016+0800');
2020-08-11 15:29:15.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:29:54.492 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:29:54.595 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:29:54.599 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:29:54.606 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:29:54.612 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:29:54.617 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:29:54.631 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:29:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:30:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:30:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:30:00.021+0800');
2020-08-11 15:30:09.577 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:30:09.652 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:30:09.657 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:30:09.662 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:30:09.667 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:30:09.670 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:30:09.673 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 15:30:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:30:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:30:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:30:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:30:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 15:30:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T15:30:10.018+0800');
2020-08-11 15:30:15.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:30:41.946 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:30:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:30:42.037 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:30:42.041 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:30:42.046 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:30:42.052 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:30:42.057 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:30:42.062 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:30:42.872 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:30:42.944 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:30:42.948 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:30:42.951 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:30:42.955 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:30:42.959 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:30:42.963 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:30:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:31:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:31:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:31:00.021+0800');
2020-08-11 15:31:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:31:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:31:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:31:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:31:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:31:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T15:31:10.016+0800');
2020-08-11 15:31:15.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:31:22.700 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:31:22.768 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:31:22.772 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:31:22.776 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:31:22.781 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:31:22.785 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:31:22.789 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:31:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:31:31.006 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:31:31.009 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:31:31.012 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:31:31.015 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:31:31.017 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:31:31.020 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:31:53.928 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 15:31:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:31:54.002 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:31:54.007 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:31:54.011 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:31:54.015 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:31:54.019 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:31:54.023 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:32:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:32:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:32:00.019+0800');
2020-08-11 15:32:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:32:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:32:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:32:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:32:10.062 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-11 15:32:10.065 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-11T15:32:10.018+0800');
2020-08-11 15:32:15.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:32:19.349 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:32:19.434 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:32:19.439 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:32:19.446 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:32:19.452 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:32:19.458 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:32:19.462 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:32:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:33:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:33:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:33:00.022+0800');
2020-08-11 15:33:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:33:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:33:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 15:33:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T15:33:10.018+0800');
2020-08-11 15:33:15.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:34:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:34:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:34:00.024+0800');
2020-08-11 15:34:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:34:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:34:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:34:10.039 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-11 15:34:10.042 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-11T15:34:10.016+0800');
2020-08-11 15:34:15.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:35:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:35:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:35:00.019+0800');
2020-08-11 15:35:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:35:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:35:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:35:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:35:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:35:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-11T15:35:10.017+0800');
2020-08-11 15:35:15.810 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:36:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:36:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:36:00.018+0800');
2020-08-11 15:36:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:36:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:36:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:36:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:36:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T15:36:10.017+0800');
2020-08-11 15:36:15.813 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:37:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:37:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:37:00.021+0800');
2020-08-11 15:37:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:37:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:37:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:37:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:37:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:37:10.017+0800');
2020-08-11 15:37:15.814 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:38:00.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:38:00.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:38:00.045+0800');
2020-08-11 15:38:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:38:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:38:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:38:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:38:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:38:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T15:38:10.016+0800');
2020-08-11 15:38:15.816 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:38:55.728 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:38:55.815 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:38:55.820 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:38:55.825 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:38:55.831 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:38:55.837 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:38:55.842 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:38:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:39:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:39:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:39:00.021+0800');
2020-08-11 15:39:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:39:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:39:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:39:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:39:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:39:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T15:39:10.017+0800');
2020-08-11 15:39:15.819 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:40:00.013 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:40:00.017 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:40:00.013+0800');
2020-08-11 15:40:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:40:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:40:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:40:10.051 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 15:40:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T15:40:10.020+0800');
2020-08-11 15:40:15.820 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:41:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:41:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:41:00.022+0800');
2020-08-11 15:41:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:41:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:41:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:41:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:41:10.054 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 15:41:10.057 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T15:41:10.020+0800');
2020-08-11 15:41:15.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:42:00.086 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:42:00.093 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T15:42:00.086+0800');
2020-08-11 15:42:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:42:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:42:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:42:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:42:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:42:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-11T15:42:10.016+0800');
2020-08-11 15:42:15.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:43:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:43:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:43:00.020+0800');
2020-08-11 15:43:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:43:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:43:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:43:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T15:43:10.017+0800');
2020-08-11 15:43:15.826 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:44:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:44:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:44:00.019+0800');
2020-08-11 15:44:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:44:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:44:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:44:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:44:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T15:44:10.017+0800');
2020-08-11 15:44:15.829 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:45:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:45:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:45:00.021+0800');
2020-08-11 15:45:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:45:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:45:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:45:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T15:45:10.019+0800');
2020-08-11 15:45:15.830 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:46:00.023 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:46:00.029 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:46:00.023+0800');
2020-08-11 15:46:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:46:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:46:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:46:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T15:46:10.016+0800');
2020-08-11 15:46:15.832 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:47:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:47:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:47:00.022+0800');
2020-08-11 15:47:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:47:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:47:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:47:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:47:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:47:10.018+0800');
2020-08-11 15:47:15.839 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:48:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:48:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:48:00.020+0800');
2020-08-11 15:48:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:48:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:48:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:48:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:48:10.067 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-11 15:48:10.069 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-11T15:48:10.043+0800');
2020-08-11 15:48:15.844 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:49:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:49:00.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:49:00.045+0800');
2020-08-11 15:49:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:49:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:49:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:49:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:49:10.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 15:49:10.054 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T15:49:10.020+0800');
2020-08-11 15:49:15.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:50:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:50:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 15:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:50:00.022+0800');
2020-08-11 15:50:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:50:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:50:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:50:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 15:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T15:50:10.017+0800');
2020-08-11 15:50:15.848 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:51:00.057 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:51:00.061 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 15:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:51:00.057+0800');
2020-08-11 15:51:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:51:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:51:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:51:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 15:51:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 15:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T15:51:10.016+0800');
2020-08-11 15:51:15.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:52:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:52:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 15:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:52:00.022+0800');
2020-08-11 15:52:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:52:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:52:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 15:52:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 15:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T15:52:10.018+0800');
2020-08-11 15:52:14.044 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 15:52:14.124 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 15:52:14.128 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 15:52:14.132 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 15:52:14.135 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 15:52:14.139 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 15:52:14.142 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 15:52:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 15:52:15.447 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:52:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 15:52:15.449 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 15:52:15 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 15:52:15.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:52:25.349 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 15:52:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 1;
2020-08-11 15:52:31.106 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 15:52:31 | 耗时 0 ms | SQL 语句：
UPDATE a_myequipment SET eq_name = '123', eq_code = 123, eq_ledger = '123', eq_address = '乡级', eq_supplier = '123', eq_overhaul = 0, modifier = '1', mod_date = '2020-08-11T15:52:31.103' WHERE id = 1;
2020-08-11 15:52:31.129 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:52:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 15:52:31.131 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 15:52:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 15:52:47.491 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 15:52:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 4;
2020-08-11 15:52:50.322 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 15:52:50 | 耗时 0 ms | SQL 语句：
UPDATE a_myequipment SET eq_name = '12', eq_ledger = '', eq_address = '乡级', eq_supplier = '123132', modifier = '1', mod_date = '2020-08-11T15:52:50.320' WHERE id = 4;
2020-08-11 15:52:50.379 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:52:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 15:52:50.381 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 15:52:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 15:53:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:53:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 15:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:53:00.023+0800');
2020-08-11 15:53:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:53:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:53:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:53:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:53:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:53:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 15:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T15:53:10.018+0800');
2020-08-11 15:53:15.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:54:00.023 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:54:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 15:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:54:00.023+0800');
2020-08-11 15:54:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:54:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:54:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:54:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 15:54:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 15:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T15:54:10.021+0800');
2020-08-11 15:54:15.869 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:55:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:55:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 15:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:55:00.022+0800');
2020-08-11 15:55:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:55:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:55:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:55:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:55:10.055 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-11 15:55:10.059 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 15:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-11T15:55:10.017+0800');
2020-08-11 15:55:15.886 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:56:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:56:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 15:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:56:00.020+0800');
2020-08-11 15:56:10.015 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:56:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:56:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:56:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:56:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 15:56:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 15:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T15:56:10.015+0800');
2020-08-11 15:56:15.875 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:57:00.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:57:00.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 15:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T15:57:00.045+0800');
2020-08-11 15:57:10.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:57:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:57:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:57:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:57:10.039 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 15:57:10.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 15:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T15:57:10.009+0800');
2020-08-11 15:57:15.880 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:58:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:58:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 15:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:58:00.022+0800');
2020-08-11 15:58:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:58:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:58:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:58:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 15:58:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 15:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T15:58:10.018+0800');
2020-08-11 15:58:15.887 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 15:59:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 15:59:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 15:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T15:59:00.022+0800');
2020-08-11 15:59:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 15:59:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 15:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 15:59:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 15:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 15:59:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 15:59:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 15:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T15:59:10.016+0800');
2020-08-11 15:59:15.889 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:00:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:00:00.016 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:00:00.012+0800');
2020-08-11 16:00:10.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:00:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:00:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:00:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:00:10.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 16:00:10.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T16:00:10.009+0800');
2020-08-11 16:00:15.891 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:01:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:01:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 16:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:01:00.023+0800');
2020-08-11 16:01:10.111 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:01:10.138 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:01:10.141 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:01:10.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:01:10.164 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-11 16:01:10.168 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 16:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-11T16:01:10.111+0800');
2020-08-11 16:01:15.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:02:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:02:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 16:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:02:00.020+0800');
2020-08-11 16:02:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:02:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:02:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:02:10.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 16:02:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 16:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T16:02:10.017+0800');
2020-08-11 16:02:15.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:03:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:03:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 16:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:03:00.021+0800');
2020-08-11 16:03:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:03:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:03:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:03:10.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:03:10.093 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-11 16:03:10.101 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 16:03:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-11T16:03:10.040+0800');
2020-08-11 16:03:15.909 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597125405030_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:03:16.273 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597125405030 paused.
2020-08-11 16:03:16.287 febs [Thread-35] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:03:16.291 febs [Thread-35] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:03:16.291 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597125405030 shutting down.
2020-08-11 16:03:16.291 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597125405030 paused.
2020-08-11 16:03:16.294 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597125405030 shutdown complete.
2020-08-11 16:03:16.300 febs [Thread-35] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:03:16.300 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:03:16.310 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:03:24.367 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14832 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:03:24.371 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:03:26.264 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:03:26.266 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:03:26.333 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-11 16:03:27.035 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$efb390dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8625200b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6a1d973a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ed2e845] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@443af394' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$43a78af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:03:27.869 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:03:27.892 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:03:27.903 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:03:27.904 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:03:27.912 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:03:29.208 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:03:29.208 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4738 ms
2020-08-11 16:03:31.293 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:03:31.316 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:03:32.450 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:03:32.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:03:32.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:03:32.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:03:33.156 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:03:35.907 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:03:35.963 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:03:35.981 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:03:35.981 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:03:35.988 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:03:35.992 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:03:35.993 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597133015965'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:03:35.993 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:03:35.993 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:03:35.996 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@575cfec1
2020-08-11 16:03:36.111 febs [main] INFO  p6spy - 2020-08-11 16:03:36 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:03:38.681 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:03:39.100 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:03:39.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:03:39.213 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30f54522, org.springframework.security.web.context.SecurityContextPersistenceFilter@44ac94c2, org.springframework.security.web.header.HeaderWriterFilter@5b11d0d8, org.springframework.security.web.authentication.logout.LogoutFilter@5f1dadf4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@d8cece4, org.springframework.security.web.session.ConcurrentSessionFilter@4cd7128, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@524b1e41, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@456c53a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2e9f5499, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5af47414, org.springframework.security.web.session.SessionManagementFilter@46ae897c, org.springframework.security.web.access.ExceptionTranslationFilter@3705a85c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bf4b018]
2020-08-11 16:03:39.294 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:03:39.314 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:03:39.316 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:03:39.900 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:03:40.955 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:03:40.984 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:03:41.081 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:03:41.115 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:03:41.131 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:03:41.176 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:03:41.183 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 17.803 seconds (JVM running for 19.217)
2020-08-11 16:03:41.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:03:41.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:03:41.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:03:41.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:03:41.219 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:03:41.581 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:03:41.581 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:03:41.599 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-11 16:03:42.099 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 16:03:42 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:03:42.116 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:03:42.127 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:03:42.128 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597125405030"'s failed in-progress jobs.
2020-08-11 16:03:42.145 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133015965 started.
2020-08-11 16:03:42.151 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133015965_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:03:52.334 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B22305BA37197E4976A3F52CDA04B811
2020-08-11 16:03:55.509 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:03:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:03:55.644 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:03:55 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:03:55.663 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:03:55 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:03:56.270 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:03:56.488 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:03:56.429+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:03:56.513 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:03:56.517 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:03:56.522 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:03:56.530 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:03:56.535 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:03:56 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:03:57.847 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:03:57.862 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:03:57.868 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:03:57.875 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:03:57.883 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:03:57.889 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:03:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:00.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:04:00.067 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:04:00.046+0800');
2020-08-11 16:04:00.806 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:00.813 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:00.819 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:00.825 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:00.830 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:00.836 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:04:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:04:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:04:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:04:10.084 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-08-11 16:04:10.088 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 64, '2020-08-11T16:04:10.020+0800');
2020-08-11 16:04:18.151 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133015965_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:04:25.597 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:04:25.697 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:25.706 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:25.715 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:25.720 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:25.727 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:25.734 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:04:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:28.139 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:28.149 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:28.155 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:28.160 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:28.168 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:28.172 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:44.786 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:04:44 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:04:45.005 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:45.014 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:45.022 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:45.031 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:45.039 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:45.046 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:04:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:47.931 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:47.936 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:47.944 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:47.949 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:47.953 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:47.957 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:04:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:04:59.077 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:04:59.083 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:04:59.088 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:04:59.096 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:04:59.100 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:04:59.104 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:04:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:05:00.029 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:05:00.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:05:00.029+0800');
2020-08-11 16:05:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:05:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:05:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:05:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:05:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-11 16:05:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-11T16:05:10.009+0800');
2020-08-11 16:05:18.151 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133015965_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:05:32.558 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 10 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:05:32.637 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 15 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:05:32.703 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 14 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:05:32.772 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 13 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:05:32.834 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 12 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:05:32.899 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:05:32 | 耗时 15 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:06:17.220 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:06:17.232 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:06:17 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:06:17.220+0800');
2020-08-11 16:06:17.248 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:06:17.252 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:06:17 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:06:17.256 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:06:17 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:06:17.280 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:06:17 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:06:17.283 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 16:06:17.288 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:06:17 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T16:06:17.248+0800');
2020-08-11 16:06:22.367 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:06:22.373 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:06:22.378 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:06:22.382 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:06:22.387 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:06:22.391 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:06:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:06:23.913 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133015965_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:07:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:07:00.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:07:00.024+0800');
2020-08-11 16:07:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:07:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:07:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:07:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 16:07:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T16:07:10.021+0800');
2020-08-11 16:07:11.047 febs [Thread-41] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133015965 paused.
2020-08-11 16:07:11.058 febs [Thread-41] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:07:11.062 febs [Thread-41] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:07:11.063 febs [Thread-41] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133015965 shutting down.
2020-08-11 16:07:11.063 febs [Thread-41] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133015965 paused.
2020-08-11 16:07:11.063 febs [Thread-41] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133015965 shutdown complete.
2020-08-11 16:07:11.071 febs [Thread-41] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:07:11.071 febs [Thread-41] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:07:11.077 febs [Thread-41] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:07:19.008 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 23148 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:07:19.012 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:07:20.740 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:07:20.742 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:07:20.823 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 0 repository interfaces.
2020-08-11 16:07:21.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.680 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$256af60d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.693 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bbdc853c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$9fd4fc6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$548a4d76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@473847fb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$795ef028] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:21.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:07:22.293 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:07:22.311 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:07:22.321 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:07:22.321 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:07:22.328 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:07:22.456 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:07:22.456 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3365 ms
2020-08-11 16:07:22.923 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:07:22.951 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:07:23.663 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:07:23.663 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:07:23.664 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:07:23.664 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:07:24.952 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:07:28.444 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:07:28.488 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:07:28.505 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:07:28.506 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:07:28.511 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:07:28.514 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:07:28.515 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597133248490'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:07:28.516 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:07:28.516 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:07:28.519 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@38394e76
2020-08-11 16:07:28.635 febs [main] INFO  p6spy - 2020-08-11 16:07:28 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:07:31.100 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:07:31.406 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:07:31.407 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:07:31.493 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3857c5d5, org.springframework.security.web.context.SecurityContextPersistenceFilter@75c45c4b, org.springframework.security.web.header.HeaderWriterFilter@7e916dc2, org.springframework.security.web.authentication.logout.LogoutFilter@285ac29, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@12e13abd, org.springframework.security.web.session.ConcurrentSessionFilter@59172d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@133d0471, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ece052b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6e0dec27, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@237824b0, org.springframework.security.web.session.SessionManagementFilter@258291de, org.springframework.security.web.access.ExceptionTranslationFilter@642b71d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1188e08b]
2020-08-11 16:07:31.552 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:07:31.571 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:07:31.573 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:07:32.083 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:07:32.951 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:07:32.969 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:07:33.049 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:07:33.076 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:07:33.090 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:07:33.126 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:07:33.130 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.058 seconds (JVM running for 16.431)
2020-08-11 16:07:33.161 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:07:33.161 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:07:33.161 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:07:33.161 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:07:33.161 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:07:33.257 febs [http-nio-8099-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:07:33.258 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:07:33.275 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-11 16:07:33.337 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:EB3D32C0DA0F676E351E1472F8B8CEED
2020-08-11 16:07:33.507 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-11 16:07:33 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:07:34.096 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:07:34.112 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:07:34.112 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597133015965"'s failed in-progress jobs.
2020-08-11 16:07:34.135 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133248490 started.
2020-08-11 16:07:34.150 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133248490_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:08:00.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:08:00.104 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:08:00.048+0800');
2020-08-11 16:08:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:08:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:08:10.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:08:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:08:10.120 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：99 毫秒
2020-08-11 16:08:10.123 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 99, '2020-08-11T16:08:10.021+0800');
2020-08-11 16:08:10.144 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133248490_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:08:47.372 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:08:47.471 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:47 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:08:47.486 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:47 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:08:48.009 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:08:48.210 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:08:48.195+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:08:48.233 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:08:48.237 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:08:48.241 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:08:48.250 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:08:48.256 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:08:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:08:49.634 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:08:49.647 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:08:49.655 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:08:49.660 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:08:49.667 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:08:49.672 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:08:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:08:52.157 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:08:52.165 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:08:52.171 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:08:52.175 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:08:52.181 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:08:52.209 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:08:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:08:56.306 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:08:56.315 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:08:56.322 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:08:56.327 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:08:56.333 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:08:56.338 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:08:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:09:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:09:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:09:00.024+0800');
2020-08-11 16:09:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:09:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:09:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:09:10.066 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-11 16:09:10.071 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-11T16:09:10.020+0800');
2020-08-11 16:09:10.116 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:09:10.124 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:09:10.130 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:09:10.136 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:09:10.142 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:09:10.148 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133248490_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:09:10.149 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:10:07.436 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:10:07.446 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:10:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:10:07.436+0800');
2020-08-11 16:10:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:10:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:10:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:10:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:10:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 16:10:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T16:10:10.020+0800');
2020-08-11 16:10:19.225 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133248490 paused.
2020-08-11 16:10:19.237 febs [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:10:19.240 febs [Thread-34] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:10:19.242 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133248490 shutting down.
2020-08-11 16:10:19.242 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133248490 paused.
2020-08-11 16:10:19.243 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133248490 shutdown complete.
2020-08-11 16:10:19.248 febs [Thread-34] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:10:19.249 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:10:19.255 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:10:27.259 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 22496 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:10:27.264 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:10:29.005 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:10:29.007 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:10:29.075 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-11 16:10:29.742 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:29.924 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$371de663] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:29.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:29.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:29.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd8f7592] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:29.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b187ecc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$663d3dcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4dd1548e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8b11e07e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:10:30.518 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:10:30.535 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:10:30.544 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:10:30.544 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:10:30.552 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:10:30.671 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:10:30.671 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3329 ms
2020-08-11 16:10:31.108 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:10:31.120 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:10:31.672 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:10:31.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:10:31.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:10:31.672 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:10:32.272 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:10:34.605 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:10:34.649 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:10:34.665 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:10:34.665 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:10:34.669 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:10:34.671 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:10:34.672 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597133434651'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:10:34.673 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:10:34.673 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:10:34.674 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@87f1201
2020-08-11 16:10:34.765 febs [main] INFO  p6spy - 2020-08-11 16:10:34 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:10:36.975 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:10:37.292 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:10:37.293 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:10:37.374 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@634d56eb, org.springframework.security.web.context.SecurityContextPersistenceFilter@20dc763b, org.springframework.security.web.header.HeaderWriterFilter@7202009e, org.springframework.security.web.authentication.logout.LogoutFilter@e353e1d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@44846c76, org.springframework.security.web.session.ConcurrentSessionFilter@2330c995, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fe8e318, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@95958d9, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@511ad0dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cd7128, org.springframework.security.web.session.SessionManagementFilter@33cec966, org.springframework.security.web.access.ExceptionTranslationFilter@23307c6c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46ae897c]
2020-08-11 16:10:37.434 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:10:37.454 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:10:37.456 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:10:37.944 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:10:38.793 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:10:38.812 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:10:38.889 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:10:38.913 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:10:38.927 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:10:38.967 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:10:38.971 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.657 seconds (JVM running for 14.009)
2020-08-11 16:10:39.006 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:10:39.007 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:10:39.007 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:10:39.007 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:10:39.007 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:10:39.586 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:10:39.586 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:10:39.604 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 16:10:39 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:10:39.604 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-11 16:10:39.914 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:10:39.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:10:39.924 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597133248490"'s failed in-progress jobs.
2020-08-11 16:10:39.932 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133434651 started.
2020-08-11 16:10:39.939 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:10:48.160 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F1E16174FB07A65078D9DCE9814E8298
2020-08-11 16:10:50.892 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:10:50 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:10:50.994 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:10:50 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:10:51.010 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:10:51.496 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:10:51.695 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:10:51.639+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:10:51.720 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:10:51.725 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:10:51.730 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:10:51.737 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:10:51.743 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:10:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:10:53.187 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:10:53.203 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:10:53.210 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:10:53.215 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:10:53.224 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:10:53.230 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:10:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:10:55.638 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:10:55.647 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:10:55.654 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:10:55.659 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:10:55.664 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:10:55.669 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:10:55 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:11:00.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:11:00.062 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-11T16:11:00.042+0800');
2020-08-11 16:11:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:11:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:11:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:11:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:11:10.070 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-11 16:11:10.074 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-11T16:11:10.011+0800');
2020-08-11 16:11:14.185 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:11:14.246 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:11:14.254 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:11:14.261 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:11:14.266 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:11:14.276 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:11:14.281 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:11:15.804 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:11:15.811 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:11:15.815 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:11:15.820 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:11:15.825 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:11:15.830 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:11:35.036 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:11:38.087 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:11:38.154 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:11:38.161 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:11:38.168 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:11:38.173 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:11:38.178 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:11:38.183 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:11:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:11:41.542 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:11:41.550 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:11:41.557 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:11:41.563 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:11:41.568 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:11:41.572 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:11:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:12:43.630 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:12:43 | 耗时 484 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:12:43.632 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:12:43.632 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:12:44.747 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:12:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:12:44.747 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:12:44 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:12:43.632+0800');
2020-08-11 16:13:23.795 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:13:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:13:23.802 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:13:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:13:23.809 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:13:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:13:23.816 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:13:23 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:13:28.836 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:13:28.838 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:13:28.848 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:13:28 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-11T16:13:28.838+0800');
2020-08-11 16:13:33.305 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:13:33.367 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:13:33.373 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:13:33.378 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:13:33.384 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:13:33.388 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:13:33.392 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:13:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:13:34.467 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:13:34.473 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:13:34.478 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:13:34.482 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:13:34.486 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:13:34.490 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:13:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:14:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:14:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:14:00.020+0800');
2020-08-11 16:14:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:14:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:14:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:14:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 16:14:10.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T16:14:10.011+0800');
2020-08-11 16:14:16.813 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:15:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:15:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:15:00.023+0800');
2020-08-11 16:15:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:15:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:15:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:15:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:15:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 16:15:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T16:15:10.020+0800');
2020-08-11 16:15:16.815 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133434651_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:15:28.911 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133434651 paused.
2020-08-11 16:15:28.922 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:15:28.926 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:15:28.926 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133434651 shutting down.
2020-08-11 16:15:28.926 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133434651 paused.
2020-08-11 16:15:28.927 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133434651 shutdown complete.
2020-08-11 16:15:28.932 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:15:28.932 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:15:28.938 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:15:37.190 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19948 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:15:37.193 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:15:39.046 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:15:39.049 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:15:39.126 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-11 16:15:39.822 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5c5b37d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2ccc708] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$d6c53e37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8b7a8f42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@642c72cf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b04f31f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:15:40.635 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:15:40.653 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:15:40.663 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:15:40.663 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:15:40.672 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:15:40.816 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:15:40.816 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3541 ms
2020-08-11 16:15:41.299 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:15:41.308 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:15:41.846 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:15:41.846 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:15:41.846 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:15:41.846 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:15:42.477 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:15:44.914 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:15:44.956 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:15:44.970 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:15:44.970 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:15:44.974 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:15:44.976 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:15:44.977 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597133744957'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:15:44.977 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:15:44.978 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:15:44.980 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@796613b7
2020-08-11 16:15:45.072 febs [main] INFO  p6spy - 2020-08-11 16:15:45 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:15:47.318 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:15:47.643 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:15:47.644 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:15:47.733 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68aa1164, org.springframework.security.web.context.SecurityContextPersistenceFilter@59172d2, org.springframework.security.web.header.HeaderWriterFilter@493489dd, org.springframework.security.web.authentication.logout.LogoutFilter@4fe8e318, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@77a1df4d, org.springframework.security.web.session.ConcurrentSessionFilter@258291de, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54da736e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@387ef6a7, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@244c0fbe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1188e08b, org.springframework.security.web.session.SessionManagementFilter@77e261e3, org.springframework.security.web.access.ExceptionTranslationFilter@46f041cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5692863]
2020-08-11 16:15:47.793 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:15:47.813 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:15:47.814 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:15:48.341 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:15:49.233 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:15:49.253 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:15:49.331 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:15:49.356 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:15:49.370 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:15:49.406 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:15:49.412 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.135 seconds (JVM running for 14.531)
2020-08-11 16:15:49.441 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:15:49.441 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:15:49.441 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:15:49.441 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:15:49.441 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:15:49.898 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 16:15:49 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:15:50.297 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:15:50.297 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:15:50.322 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 25 ms
2020-08-11 16:15:50.357 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:15:50.369 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:15:50.369 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597133434651"'s failed in-progress jobs.
2020-08-11 16:15:50.377 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133744957 started.
2020-08-11 16:15:50.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133744957_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:16:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:16:00.105 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:16:00.042+0800');
2020-08-11 16:16:10.063 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:16:10.143 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:16:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:16:10.193 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:16:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:16:10.216 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E9F0CE3F08209DE0D45E28455665A088
2020-08-11 16:16:10.246 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:16:10.258 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：195 毫秒
2020-08-11 16:16:10.265 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 195, '2020-08-11T16:16:10.063+0800');
2020-08-11 16:16:10.655 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2BDAD9445797E72C38EA9FB20D5E9F1F
2020-08-11 16:16:13.988 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:16:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:16:14.090 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:16:14.105 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:16:14.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133744957_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:16:14.603 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:16:14.782 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:16:14.767+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:16:14.806 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:16:14.810 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:16:14.814 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:16:14.823 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:16:14.828 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:16:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:16:16.557 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:16:16.570 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:16:16.576 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:16:16.582 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:16:16.587 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:16:16.592 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 16:16:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:16:18.982 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:18 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:16:18.991 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:16:18.997 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:16:19.003 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:16:19.008 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:16:19.012 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:16:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:16:20.195 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:16:20.204 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:16:20.209 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:16:20.214 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:16:20.221 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:16:20.226 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:16:28.605 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:16:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:16:28.628 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:16:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:17:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:17:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:17:00.024+0800');
2020-08-11 16:17:02.050 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133744957 paused.
2020-08-11 16:17:02.062 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:17:02.065 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:17:02.065 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133744957 shutting down.
2020-08-11 16:17:02.065 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133744957 paused.
2020-08-11 16:17:02.066 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133744957 shutdown complete.
2020-08-11 16:17:02.075 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:17:02.076 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:17:02.083 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:17:11.278 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16780 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:17:11.282 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:17:13.292 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:17:13.295 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:17:13.370 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-08-11 16:17:14.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$17535e45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.558 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adc4ed74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$91bd64a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4672b5ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@54defd69' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6b475860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:14.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:17:15.289 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:17:15.307 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:17:15.317 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:17:15.317 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:17:15.325 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:17:15.456 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:17:15.456 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4061 ms
2020-08-11 16:17:15.938 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:17:15.951 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:17:16.488 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:17:16.488 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:17:16.489 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:17:16.489 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:17:17.101 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:17:19.635 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:17:19.675 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:17:19.691 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:17:19.691 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:17:19.696 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:17:19.699 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:17:19.700 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597133839676'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:17:19.700 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:17:19.700 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:17:19.702 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5655278d
2020-08-11 16:17:19.796 febs [main] INFO  p6spy - 2020-08-11 16:17:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:17:22.023 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:17:22.342 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:17:22.343 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:17:22.428 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b1b1784, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a2297d7, org.springframework.security.web.header.HeaderWriterFilter@48cc060d, org.springframework.security.web.authentication.logout.LogoutFilter@62966c9f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@69374e28, org.springframework.security.web.session.ConcurrentSessionFilter@4cbd17b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39d37da8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7baf7e2c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3903cfc9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@288e50c1, org.springframework.security.web.session.SessionManagementFilter@29b2a94c, org.springframework.security.web.access.ExceptionTranslationFilter@3d5e3f58, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c75c5e8]
2020-08-11 16:17:22.488 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:17:22.509 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:17:22.510 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:17:23.019 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:17:23.859 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:17:23.875 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:17:23.956 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:17:23.983 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:17:23.998 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:17:24.033 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:17:24.037 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.893 seconds (JVM running for 15.701)
2020-08-11 16:17:24.066 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:17:24.066 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:17:24.066 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:17:24.066 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:17:24.066 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:17:24.712 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:17:24.713 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:17:24.734 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-11 16:17:24 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:17:24.737 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-08-11 16:17:24.984 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:17:25.071 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:17:25.071 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597133744957"'s failed in-progress jobs.
2020-08-11 16:17:25.089 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133839676 started.
2020-08-11 16:17:25.098 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133839676_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:17:28.468 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:441EB965F00AEF3B957583227F663DCF
2020-08-11 16:17:31.887 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:17:31 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:17:31.990 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:17:31 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:17:32.007 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:17:32.520 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:17:32.735 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:17:32.680+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:17:32.748 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:17:32.753 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:17:32.757 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:17:32.765 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:17:32.771 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:17:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:17:33.799 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:17:33.815 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:17:33.822 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:17:33.827 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:17:33.836 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:17:33.841 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:17:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:17:39.492 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:17:39 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:18:00.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:18:00.059 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:18:00.045+0800');
2020-08-11 16:18:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:18:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:18:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:18:10.084 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:18:10.087 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：64 毫秒
2020-08-11 16:18:10.091 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 64, '2020-08-11T16:18:10.023+0800');
2020-08-11 16:18:13.096 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133839676_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:19:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:19:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:19:00.014+0800');
2020-08-11 16:19:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:19:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:19:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:19:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:19:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:19:10.066 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-11 16:19:10.070 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-11T16:19:10.022+0800');
2020-08-11 16:19:13.098 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133839676_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:20:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:20:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:20:00.023+0800');
2020-08-11 16:20:10.013 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:20:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:20:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:20:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:20:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 16:20:10.050 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-11T16:20:10.012+0800');
2020-08-11 16:20:13.101 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597133839676_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:21:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:21:00.020 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:21:00.014+0800');
2020-08-11 16:21:03.918 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133839676 paused.
2020-08-11 16:21:03.938 febs [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:21:03.942 febs [Thread-34] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:21:03.942 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133839676 shutting down.
2020-08-11 16:21:03.942 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133839676 paused.
2020-08-11 16:21:03.943 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597133839676 shutdown complete.
2020-08-11 16:21:03.950 febs [Thread-34] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:21:03.950 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:21:03.957 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:21:12.054 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16008 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:21:12.059 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:21:13.864 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:21:13.866 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:21:13.939 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-11 16:21:14.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.839 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d05b21d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66ccb0ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4ac5282e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ff7a7939] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.974 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32d0d7eb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$244f1beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:14.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:21:15.427 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:21:15.445 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:21:15.455 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:21:15.455 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:21:15.464 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:21:15.611 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:21:15.611 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3449 ms
2020-08-11 16:21:16.054 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:21:16.063 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:21:16.578 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:21:16.578 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:21:16.579 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:21:16.579 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:21:17.167 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:21:19.457 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:21:19.500 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:21:19.517 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:21:19.517 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:21:19.523 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:21:19.525 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:21:19.526 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597134079502'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:21:19.526 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:21:19.526 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:21:19.528 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2f5a092e
2020-08-11 16:21:19.621 febs [main] INFO  p6spy - 2020-08-11 16:21:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:21:21.795 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:21:22.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:21:22.186 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bb160fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@870413c, org.springframework.security.web.header.HeaderWriterFilter@11e75942, org.springframework.security.web.authentication.logout.LogoutFilter@2446597e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@33de9d85, org.springframework.security.web.session.ConcurrentSessionFilter@7f5c4ff8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d9cac6e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a0e5c0c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@24455d50, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cc4f6bd, org.springframework.security.web.session.SessionManagementFilter@4a6d6308, org.springframework.security.web.access.ExceptionTranslationFilter@c0cb9c2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64096a41]
2020-08-11 16:21:22.248 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:21:22.268 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:21:22.270 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:21:22.755 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:21:23.583 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:21:23.599 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:21:23.671 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:21:23.698 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:21:23.714 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:21:23.751 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:21:23.757 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.691 seconds (JVM running for 14.049)
2020-08-11 16:21:23.787 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:21:23.788 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:21:23.788 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:21:23.788 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:21:23.788 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:21:24.092 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:21:24.092 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:21:24.111 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-11 16:21:24 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:21:24.115 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-11 16:21:24.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:21:24.711 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:21:24.711 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597133839676"'s failed in-progress jobs.
2020-08-11 16:21:24.728 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134079502 started.
2020-08-11 16:21:24.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134079502_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:21:33.714 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:84A46C60E3334CF3DA158B321750B5D3
2020-08-11 16:21:36.471 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:21:36 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:21:36.579 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:21:36 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:21:36.595 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:21:36 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:21:37.100 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:21:37.336 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:21:37.246+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:21:37.361 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:21:37.366 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:21:37.371 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:21:37.378 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:21:37.383 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:21:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:21:38.756 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:21:38.772 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:21:38.778 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:21:38.785 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:21:38.792 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:21:38.798 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:21:38 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:21:40.236 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:21:40.245 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:21:40.253 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:21:40.258 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:21:40.263 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:21:40.268 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:21:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:21:44.923 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:21:44.938 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1 AND mod_date IN ('2020-08-12T00:00', '2020-09-16T23:59:59'));
2020-08-11 16:21:44.943 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2 AND mod_date IN ('2020-08-12T00:00', '2020-09-16T23:59:59'));
2020-08-11 16:21:44.949 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3 AND mod_date IN ('2020-08-12T00:00', '2020-09-16T23:59:59'));
2020-08-11 16:21:44.953 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4 AND mod_date IN ('2020-08-12T00:00', '2020-09-16T23:59:59'));
2020-08-11 16:21:44.959 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:21:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7 AND mod_date IN ('2020-08-12T00:00', '2020-09-16T23:59:59'));
2020-08-11 16:22:00.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:22:00.053 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-11T16:22:00.036+0800');
2020-08-11 16:22:06.668 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:22:06.679 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1 AND mod_date IN ('2020-08-04T00:00', '2020-08-28T23:59:59'));
2020-08-11 16:22:06.685 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2 AND mod_date IN ('2020-08-04T00:00', '2020-08-28T23:59:59'));
2020-08-11 16:22:06.689 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3 AND mod_date IN ('2020-08-04T00:00', '2020-08-28T23:59:59'));
2020-08-11 16:22:06.694 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4 AND mod_date IN ('2020-08-04T00:00', '2020-08-28T23:59:59'));
2020-08-11 16:22:06.698 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7 AND mod_date IN ('2020-08-04T00:00', '2020-08-28T23:59:59'));
2020-08-11 16:22:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:22:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:22:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:22:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:22:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-11 16:22:10.070 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-11T16:22:10.012+0800');
2020-08-11 16:22:12.734 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134079502_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:23:00.050 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:23:00.055 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:23:00.050+0800');
2020-08-11 16:23:02.794 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:23:02.799 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:23:02.805 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:23:02.811 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:23:02.822 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:23:02.829 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:23:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:23:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:23:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:23:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:23:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:23:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 16:23:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T16:23:10.009+0800');
2020-08-11 16:23:10.217 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:23:10.223 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:23:10.228 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:23:10.233 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:23:10.241 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:23:10.246 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:23:12.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134079502_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:24:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:24:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:24:00.023+0800');
2020-08-11 16:24:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:24:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:24:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:24:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:24:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 16:24:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-11T16:24:10.009+0800');
2020-08-11 16:24:12.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134079502_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:24:25.134 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:24:25.139 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:24:25.142 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:24:25.146 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:24:25.150 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:24:25.156 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:24:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:25:00.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:25:00.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:25:00.050+0800');
2020-08-11 16:25:10.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:25:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:25:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:25:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:25:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:25:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 16:25:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T16:25:10.009+0800');
2020-08-11 16:25:12.169 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:25:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:25:12.173 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:25:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1 AND mod_date IN ('2020-08-04T00:00', '2020-08-12T23:59:59'));
2020-08-11 16:30:39.915 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134079502_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 16:30:39.926 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:30:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2 AND mod_date IN ('2020-08-04T00:00', '2020-08-12T23:59:59'));
2020-08-11 16:30:39.932 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:30:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3 AND mod_date IN ('2020-08-04T00:00', '2020-08-12T23:59:59'));
2020-08-11 16:30:39.937 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:30:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4 AND mod_date IN ('2020-08-04T00:00', '2020-08-12T23:59:59'));
2020-08-11 16:30:39.941 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:30:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7 AND mod_date IN ('2020-08-04T00:00', '2020-08-12T23:59:59'));
2020-08-11 16:30:39.951 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134079502 paused.
2020-08-11 16:30:39.967 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:30:39.971 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:30:39.971 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134079502 shutting down.
2020-08-11 16:30:39.971 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134079502 paused.
2020-08-11 16:30:39.972 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134079502 shutdown complete.
2020-08-11 16:30:39.977 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:30:39.977 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:30:39.983 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:30:47.609 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20920 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:30:47.612 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:30:49.445 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:30:49.448 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:30:49.519 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-08-11 16:30:50.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$432bae4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d99d3d7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$bd95b4ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$724b05b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7f012923' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$971fa86a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:30:50.917 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:30:50.932 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:30:50.941 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:30:50.942 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:30:50.950 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:30:51.069 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:30:51.070 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3367 ms
2020-08-11 16:30:51.486 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:30:51.509 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:30:52.016 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:30:52.016 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:30:52.016 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:30:52.016 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:30:52.598 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:30:54.851 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:30:54.893 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:30:54.908 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:30:54.908 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:30:54.913 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:30:54.916 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:30:54.917 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597134654894'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:30:54.917 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:30:54.917 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:30:54.919 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b3a8bea
2020-08-11 16:30:55.042 febs [main] INFO  p6spy - 2020-08-11 16:30:55 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:30:57.253 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:30:57.564 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:30:57.564 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:30:57.564 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:30:57.565 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:30:57.659 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74ed1d35, org.springframework.security.web.context.SecurityContextPersistenceFilter@d695f9d, org.springframework.security.web.header.HeaderWriterFilter@511ad0dd, org.springframework.security.web.authentication.logout.LogoutFilter@30dd23e2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@43e9a8a2, org.springframework.security.web.session.ConcurrentSessionFilter@44ac94c2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6df4d8f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8bb5c2a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@d408c5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7acf07b2, org.springframework.security.web.session.SessionManagementFilter@4cd7128, org.springframework.security.web.access.ExceptionTranslationFilter@44846c76, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5af47414]
2020-08-11 16:30:57.722 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:30:57.743 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:30:57.746 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:30:58.214 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:30:59.048 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:30:59.065 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:30:59.138 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:30:59.161 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:30:59.177 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:30:59.212 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:30:59.217 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.467 seconds (JVM running for 13.755)
2020-08-11 16:30:59.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:30:59.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:30:59.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:30:59.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:30:59.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:30:59.606 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-11 16:30:59 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:31:00.009 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:31:00.010 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:31:00.037 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-08-11 16:31:00.163 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:31:00.185 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134654894 started.
2020-08-11 16:31:00.191 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-11 16:31:00.259 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:31:09.073 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:8E941A93DCCFA12746267E812AA96EA4
2020-08-11 16:31:10.059 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:31:10.157 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:31:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:31:10.207 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:31:10.257 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:31:10.262 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：203 毫秒
2020-08-11 16:31:10.280 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:31:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 203, '2020-08-11T16:31:10.059+0800');
2020-08-11 16:31:11.725 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:31:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:31:11.824 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:31:11 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:31:11.840 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 16:31:11 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:31:12.250 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:31:12.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:31:12.402 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:31:12.387+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:31:12.415 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:31:12.419 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:31:12.423 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:31:12.432 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:31:12.436 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:31:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:31:13.567 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:31:13.582 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:13 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:31:20.977 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:31:20.983 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:20 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:31:20.988 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:31:20.988 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:31:20.989 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597134079502"'s failed in-progress jobs.
2020-08-11 16:31:20.993 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:31:20 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:31:27.418 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:31:27.430 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:27.436 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:27.440 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:27.445 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:27.451 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 16:31:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:37.816 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:31:37.822 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:37.829 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:37.834 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:37.840 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:37.845 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:31:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7 AND mod_date BETWEEN '2020-08-07T00:00' AND '2020-09-17T23:59:59');
2020-08-11 16:31:42.540 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 16:31:42.547 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 16:31:42.552 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 16:31:42.556 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 16:31:42.560 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 16:31:42.565 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 16:31:50.019 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 16:31:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 16:32:00.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:32:00.024 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:32:00.015+0800');
2020-08-11 16:32:10.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:32:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:32:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:32:10.057 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 16:32:10.061 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T16:32:10.021+0800');
2020-08-11 16:32:12.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:33:00.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:33:00.030 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:33:00.025+0800');
2020-08-11 16:33:10.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:33:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:33:10.053 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 16:33:10.057 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T16:33:10.018+0800');
2020-08-11 16:33:12.265 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:34:00.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:34:00.028 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:34:00.021+0800');
2020-08-11 16:34:10.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:34:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:34:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:34:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:34:10.051 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 16:34:10.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T16:34:10.019+0800');
2020-08-11 16:34:12.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:35:00.025 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:35:00.031 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:35:00.025+0800');
2020-08-11 16:35:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:35:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:35:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:35:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:35:10.054 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 16:35:10.057 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 16:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T16:35:10.021+0800');
2020-08-11 16:35:12.271 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:36:00.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:36:00.028 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 16:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:36:00.021+0800');
2020-08-11 16:36:10.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:36:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:36:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:36:10.049 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 16:36:10.053 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 16:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T16:36:10.019+0800');
2020-08-11 16:36:12.274 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:37:00.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:37:00.027 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 16:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:37:00.021+0800');
2020-08-11 16:37:10.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:37:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:37:10.049 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 16:37:10.053 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 16:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T16:37:10.019+0800');
2020-08-11 16:37:12.276 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:38:00.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:38:00.028 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 16:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:38:00.022+0800');
2020-08-11 16:38:10.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:38:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:38:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:38:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:38:10.051 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 16:38:10.054 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 16:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T16:38:10.017+0800');
2020-08-11 16:38:12.278 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:39:00.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:39:00.037 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 16:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:39:00.032+0800');
2020-08-11 16:39:10.041 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:39:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:39:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:39:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:39:10.072 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 16:39:10.075 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 16:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-11T16:39:10.041+0800');
2020-08-11 16:39:12.283 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:40:00.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:40:00.025 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 16:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:40:00.021+0800');
2020-08-11 16:40:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:40:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:40:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:40:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:40:10.069 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 16:40:10.073 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 16:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T16:40:10.042+0800');
2020-08-11 16:40:12.281 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:41:00.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:41:00.025 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 16:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:41:00.020+0800');
2020-08-11 16:41:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:41:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:41:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:41:10.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:41:10.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T16:41:10.018+0800');
2020-08-11 16:41:12.283 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:42:00.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:42:00.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:42:00.046+0800');
2020-08-11 16:42:10.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:42:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:42:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:42:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:42:10.072 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:42:10.075 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T16:42:10.043+0800');
2020-08-11 16:42:12.287 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:43:00.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:43:00.027 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:43:00.023+0800');
2020-08-11 16:43:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:43:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:43:10.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 16:43:10.052 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T16:43:10.019+0800');
2020-08-11 16:43:12.307 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:44:00.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:44:00.026 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:44:00.022+0800');
2020-08-11 16:44:10.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:44:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:44:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:44:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:44:10.057 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 16:44:10.061 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-11T16:44:10.022+0800');
2020-08-11 16:44:12.310 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:45:00.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:45:00.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:45:00.045+0800');
2020-08-11 16:45:10.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:45:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:45:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:45:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:45:10.073 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 16:45:10.076 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 16:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T16:45:10.043+0800');
2020-08-11 16:45:12.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:46:00.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:46:00.027 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 16:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:46:00.022+0800');
2020-08-11 16:46:10.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:46:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:46:10.048 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 16:46:10.051 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 16:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T16:46:10.017+0800');
2020-08-11 16:46:12.317 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:47:00.023 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:47:00.028 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 16:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:47:00.023+0800');
2020-08-11 16:47:10.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:47:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:47:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:47:10.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 16:47:10.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 16:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T16:47:10.018+0800');
2020-08-11 16:47:12.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:48:00.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:48:00.025 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 16:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:48:00.020+0800');
2020-08-11 16:48:10.014 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:48:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:48:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:48:10.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:48:10.046 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 16:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T16:48:10.014+0800');
2020-08-11 16:48:12.333 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:49:00.113 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:49:00.148 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 16:49:00 | 耗时 26 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:49:00.113+0800');
2020-08-11 16:49:10.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:49:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:49:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:49:10.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:49:10.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 16:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T16:49:10.018+0800');
2020-08-11 16:49:12.337 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:50:00.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:50:00.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 16:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:50:00.038+0800');
2020-08-11 16:50:10.033 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:50:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:50:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:50:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:50:10.074 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-11 16:50:10.079 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 16:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-11T16:50:10.033+0800');
2020-08-11 16:50:12.340 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:51:00.022 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:51:00.025 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 16:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:51:00.022+0800');
2020-08-11 16:51:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:51:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:51:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:51:10.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 16:51:10.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T16:51:10.018+0800');
2020-08-11 16:51:12.342 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:52:00.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:52:00.075 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:52:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 10, '2020-08-11T16:52:00.059+0800');
2020-08-11 16:52:10.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:52:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:52:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:52:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:52:10.045 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:52:10.048 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 16:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T16:52:10.016+0800');
2020-08-11 16:52:12.345 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:53:00.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:53:00.026 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 16:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:53:00.021+0800');
2020-08-11 16:53:10.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:53:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:53:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:53:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:53:10.046 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 16:53:10.049 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 16:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T16:53:10.017+0800');
2020-08-11 16:53:12.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:54:00.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:54:00.024 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 16:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:54:00.020+0800');
2020-08-11 16:54:10.017 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:54:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:54:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:54:10.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 16:54:10.049 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 16:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T16:54:10.017+0800');
2020-08-11 16:54:12.386 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:55:00.127 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:55:00.134 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 16:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:55:00.127+0800');
2020-08-11 16:55:10.028 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:55:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:55:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:55:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:55:10.342 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:55:10 | 耗时 37 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:55:10.456 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：428 毫秒
2020-08-11 16:55:10.460 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 16:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 428, '2020-08-11T16:55:10.028+0800');
2020-08-11 16:55:12.388 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:56:00.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:56:00.015 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 16:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T16:56:00.011+0800');
2020-08-11 16:56:10.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:56:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:56:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:56:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:56:10.039 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-11 16:56:10.042 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 16:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-11T16:56:10.008+0800');
2020-08-11 16:56:12.406 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:57:00.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:57:00.018 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 16:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:57:00.013+0800');
2020-08-11 16:57:10.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:57:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:57:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:57:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:57:10.072 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 16:57:10.076 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 16:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-11T16:57:10.044+0800');
2020-08-11 16:57:12.407 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597134654894_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:58:00.012 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:58:00.017 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 16:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T16:58:00.012+0800');
2020-08-11 16:58:05.659 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134654894 paused.
2020-08-11 16:58:05.674 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:58:05.677 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 16:58:05.678 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134654894 shutting down.
2020-08-11 16:58:05.678 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134654894 paused.
2020-08-11 16:58:05.679 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597134654894 shutdown complete.
2020-08-11 16:58:05.685 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 16:58:05.685 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 16:58:05.692 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-11 16:58:14.172 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6920 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-11 16:58:14.175 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-11 16:58:15.987 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-11 16:58:15.990 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-11 16:58:16.060 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-11 16:58:16.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:16.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$db835c23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:16.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:16.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:16.994 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71f4eb52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$55ed6281] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$aa2b38c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@491893f8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f77563e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-11 16:58:17.551 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-11 16:58:17.569 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-11 16:58:17.578 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-11 16:58:17.578 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-11 16:58:17.587 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-11 16:58:17.723 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-11 16:58:17.724 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3463 ms
2020-08-11 16:58:18.155 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-11 16:58:18.187 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-11 16:58:18.715 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-11 16:58:18.716 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-11 16:58:18.716 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-11 16:58:18.716 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-11 16:58:19.326 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-11 16:58:21.674 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-11 16:58:21.721 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-11 16:58:21.736 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-11 16:58:21.736 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-11 16:58:21.741 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-11 16:58:21.743 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-11 16:58:21.744 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1597136301722'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-11 16:58:21.744 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-11 16:58:21.744 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-11 16:58:21.748 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@270ab7bc
2020-08-11 16:58:21.868 febs [main] INFO  p6spy - 2020-08-11 16:58:21 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-11 16:58:24.054 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-11 16:58:24.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-11 16:58:24.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-11 16:58:24.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-11 16:58:24.471 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b45f7ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@13288174, org.springframework.security.web.header.HeaderWriterFilter@7e4bbda4, org.springframework.security.web.authentication.logout.LogoutFilter@7f5c4ff8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@16160a37, org.springframework.security.web.session.ConcurrentSessionFilter@164cad52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b697993, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@eb66b47, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@17b9c9ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5da41d02, org.springframework.security.web.session.SessionManagementFilter@1254a3cd, org.springframework.security.web.access.ExceptionTranslationFilter@2ec258f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7fb2645b]
2020-08-11 16:58:24.532 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-11 16:58:24.555 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-11 16:58:24.557 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-11 16:58:25.038 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-11 16:58:25.937 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-11 16:58:25.956 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-11 16:58:26.032 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-11 16:58:26.057 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-11 16:58:26.071 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-11 16:58:26.107 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-11 16:58:26.111 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.953 seconds (JVM running for 14.35)
2020-08-11 16:58:26.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-11 16:58:26.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-11 16:58:26.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-11 16:58:26.140 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-11 16:58:26.141 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-11 16:58:26.684 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-11 16:58:26 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-11 16:58:27.010 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-11 16:58:27.011 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-11 16:58:27.065 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-11 16:58:27.105 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-11 16:58:27.105 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1597134654894"'s failed in-progress jobs.
2020-08-11 16:58:27.135 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 124 ms
2020-08-11 16:58:27.145 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597136301722 started.
2020-08-11 16:58:27.159 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 16:58:46.003 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:6F060FF79C430D6C1B4717DB42039A88
2020-08-11 16:58:54.620 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A4E5DA4B1CCD846D19F458C0ED325CCB
2020-08-11 16:58:58.199 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:58:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-11 16:58:58.323 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:58:58 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-11 16:58:58.341 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 16:58:58 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-11 16:58:59.041 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 16:58:59.287 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-11T16:58:59.215+0800' WHERE (USERNAME = 'admin');
2020-08-11 16:58:59.312 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-11 16:58:59.317 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:58:59.322 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-11 16:58:59.332 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-11 16:58:59.337 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 16:58:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-11 16:59:00.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 16:59:00.062 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 16:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-11T16:59:00.043+0800');
2020-08-11 16:59:00.555 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 16:59:00 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 16:59:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 16:59:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 16:59:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 16:59:10.086 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 16:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 16:59:10.089 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：69 毫秒
2020-08-11 16:59:10.095 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 16:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 69, '2020-08-11T16:59:10.020+0800');
2020-08-11 16:59:15.153 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:00:00.015 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:00:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:00:00.015+0800');
2020-08-11 17:00:09.650 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:00:09 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:00:09.700 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:00:09 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:00:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:00:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:00:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:00:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:00:10.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-11 17:00:10.068 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-11T17:00:10.021+0800');
2020-08-11 17:00:15.206 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:01:00.015 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:01:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:01:00.015+0800');
2020-08-11 17:01:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:01:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:01:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:01:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 17:01:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T17:01:10.019+0800');
2020-08-11 17:01:15.207 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:02:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:02:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:02:00.018+0800');
2020-08-11 17:02:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:02:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:02:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:02:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:02:10.064 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-11 17:02:10.067 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-11T17:02:10.023+0800');
2020-08-11 17:02:15.209 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:02:47.527 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:02:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:03:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:03:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:03:00.022+0800');
2020-08-11 17:03:10.062 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:03:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:03:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:03:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:03:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:03:10.120 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-11 17:03:10.124 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-11T17:03:10.062+0800');
2020-08-11 17:03:15.216 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:04:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:04:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:04:00.018+0800');
2020-08-11 17:04:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:04:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:04:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:04:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 17:04:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T17:04:10.017+0800');
2020-08-11 17:04:15.218 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:05:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:05:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:05:00.022+0800');
2020-08-11 17:05:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:05:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:05:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:05:10.052 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-11 17:05:10.056 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-11T17:05:10.018+0800');
2020-08-11 17:05:15.223 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:06:00.014 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:06:00.018 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:06:00.014+0800');
2020-08-11 17:06:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:06:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:06:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:06:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:06:10.057 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 17:06:10.060 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T17:06:10.021+0800');
2020-08-11 17:06:15.224 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:07:00.013 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:07:00.020 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:07:00.013+0800');
2020-08-11 17:07:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:07:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:07:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:07:10.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 17:07:10.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T17:07:10.018+0800');
2020-08-11 17:07:15.228 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:08:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:08:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:08:00.022+0800');
2020-08-11 17:08:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:08:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:08:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:08:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:08:10.038 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:08:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:08:10.009+0800');
2020-08-11 17:08:15.231 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:09:00.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:09:00.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:09:00.046+0800');
2020-08-11 17:09:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:09:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:09:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:09:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:09:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T17:09:10.018+0800');
2020-08-11 17:09:15.234 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:10:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:10:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:10:00.013+0800');
2020-08-11 17:10:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:10:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:10:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:10:10.067 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 17:10:10.071 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T17:10:10.041+0800');
2020-08-11 17:10:15.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:11:00.014 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:11:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:11:00.014+0800');
2020-08-11 17:11:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:11:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:11:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:11:10.072 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 17:11:10.074 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T17:11:10.043+0800');
2020-08-11 17:11:15.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:12:00.046 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:12:00.051 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:12:00.046+0800');
2020-08-11 17:12:10.065 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:12:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:12:10.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:12:10.142 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:12:10.145 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：80 毫秒
2020-08-11 17:12:10.151 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 80, '2020-08-11T17:12:10.065+0800');
2020-08-11 17:12:13.457 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:12:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:12:15.241 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:12:54.005 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:12:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:12:54.932 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:12:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:13:00.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:13:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:13:00.018+0800');
2020-08-11 17:13:10.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:13:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:13:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:13:10.061 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-11 17:13:10.064 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-11T17:13:10.022+0800');
2020-08-11 17:13:15.243 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:13:27.084 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:13:27 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:13:27.155 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:13:27 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:13:29.619 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:13:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:14:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:14:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:14:00.021+0800');
2020-08-11 17:14:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:14:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:14:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T17:14:10.017+0800');
2020-08-11 17:14:15.246 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:15:00.024 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:15:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:15:00.024+0800');
2020-08-11 17:15:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:15:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:15:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:15:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:15:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-11 17:15:10.053 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-11T17:15:10.018+0800');
2020-08-11 17:15:15.248 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:16:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:16:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:16:00.021+0800');
2020-08-11 17:16:10.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:16:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:16:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:16:10.085 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:16:10.089 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：67 毫秒
2020-08-11 17:16:10.093 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 67, '2020-08-11T17:16:10.022+0800');
2020-08-11 17:16:10.786 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:16:10.868 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:16:12.920 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:16:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:16:15.251 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:16:18.904 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:16:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:16:35.226 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:16:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:16:35.279 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:16:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:16:37.144 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:17:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:17:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:17:00.021+0800');
2020-08-11 17:17:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:17:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:17:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:17:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:17:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 17:17:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T17:17:10.021+0800');
2020-08-11 17:17:15.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:17:53.085 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:17:53 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:17:53.156 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:17:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:17:54.656 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:17:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:18:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:18:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:18:00.020+0800');
2020-08-11 17:18:09.502 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:18:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:18:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:18:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:18:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:18:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:18:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:18:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:18:10.017+0800');
2020-08-11 17:18:14.360 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:18:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:18:15.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:18:18.977 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:18:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:18:24.263 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:18:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:19:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:19:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:19:00.019+0800');
2020-08-11 17:19:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:19:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:19:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:19:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:19:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T17:19:10.016+0800');
2020-08-11 17:19:15.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:20:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:20:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:20:00.020+0800');
2020-08-11 17:20:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:20:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:20:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:20:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:20:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:20:10.018+0800');
2020-08-11 17:20:15.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:21:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:21:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:21:00.012+0800');
2020-08-11 17:21:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:21:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:21:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:21:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:21:10.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:21:10.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T17:21:10.010+0800');
2020-08-11 17:21:15.265 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:22:00.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:22:00.048 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:22:00.044+0800');
2020-08-11 17:22:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:22:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:22:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:22:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:22:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:22:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T17:22:10.017+0800');
2020-08-11 17:22:15.267 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:23:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:23:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:23:00.020+0800');
2020-08-11 17:23:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:23:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:23:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:23:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:23:10.068 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 17:23:10.071 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T17:23:10.043+0800');
2020-08-11 17:23:15.269 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:24:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:24:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:24:00.022+0800');
2020-08-11 17:24:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:24:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:24:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:24:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:24:10.071 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 17:24:10.074 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T17:24:10.045+0800');
2020-08-11 17:24:15.272 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:25:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:25:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:25:00.018+0800');
2020-08-11 17:25:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:25:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:25:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:25:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:25:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 17:25:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T17:25:10.018+0800');
2020-08-11 17:25:15.274 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:26:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:26:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:26:00.021+0800');
2020-08-11 17:26:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:26:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:26:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:26:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:26:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:26:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T17:26:10.017+0800');
2020-08-11 17:26:15.279 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:27:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:27:00.026 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:27:00.020+0800');
2020-08-11 17:27:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:27:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:27:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:27:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 17:27:10.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T17:27:10.016+0800');
2020-08-11 17:27:15.281 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:28:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:28:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:28:00.021+0800');
2020-08-11 17:28:10.015 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:28:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:28:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:28:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:28:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:28:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:28:10.015+0800');
2020-08-11 17:28:15.282 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:28:36.735 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:28:36 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:28:36.775 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:28:36 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:28:37.798 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:28:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:28:49.696 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:28:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (mod_date BETWEEN '2020-08-13T00:00' AND '2020-09-23T23:59:59');
2020-08-11 17:28:56.660 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:28:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (mod_date BETWEEN '2020-08-04T00:00' AND '2020-08-20T23:59:59');
2020-08-11 17:29:00.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:29:00.019 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:29:00.011+0800');
2020-08-11 17:29:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:29:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:29:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:29:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:29:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:29:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T17:29:10.016+0800');
2020-08-11 17:29:11.176 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:29:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:29:15.286 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:29:19.622 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:6F060FF79C430D6C1B4717DB42039A88
2020-08-11 17:29:32.025 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 17:29:32.032 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 17:29:32.036 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 17:29:32.041 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 17:29:32.045 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 17:29:32.048 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:29:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 17:29:33.422 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:29:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:29:33.434 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:29:33.440 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:29:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:29:33.442 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:29:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:29:52.664 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:29:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-11 17:30:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:30:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:30:00.024+0800');
2020-08-11 17:30:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:30:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:30:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:30:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:30:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:30:10.017+0800');
2020-08-11 17:30:15.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:31:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:31:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:31:00.021+0800');
2020-08-11 17:31:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:31:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:31:10.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:31:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T17:31:10.021+0800');
2020-08-11 17:31:15.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:32:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:32:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:32:00.018+0800');
2020-08-11 17:32:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:32:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:32:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:32:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 17:32:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-11T17:32:10.017+0800');
2020-08-11 17:32:15.295 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:33:00.141 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:33:00.161 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:33:00 | 耗时 14 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:33:00.141+0800');
2020-08-11 17:33:02.848 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:33:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:33:02.918 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:33:02 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:33:02.919 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:33:02.924 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:33:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:33:02.926 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:33:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:33:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:33:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:33:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-11 17:33:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-11T17:33:10.007+0800');
2020-08-11 17:33:15.299 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:34:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:34:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:34:00.021+0800');
2020-08-11 17:34:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:34:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:34:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:34:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:34:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:34:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T17:34:10.016+0800');
2020-08-11 17:34:15.302 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:35:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:35:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:35:00.022+0800');
2020-08-11 17:35:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:35:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:35:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:35:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:35:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:35:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T17:35:10.017+0800');
2020-08-11 17:35:15.305 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:35:42.798 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:35:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:35:42.880 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:35:42 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:35:42.883 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:35:42.890 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:35:42 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:35:42.893 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:35:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:36:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:36:00.030 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:36:00.024+0800');
2020-08-11 17:36:10.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:36:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:36:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:36:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:36:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 17:36:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T17:36:10.010+0800');
2020-08-11 17:36:10.497 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:36:10.584 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:36:10.588 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:36:10.608 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:36:10.610 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:36:15.307 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:36:23.728 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:36:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (create_date BETWEEN '2020-08-04' AND '2020-08-28');
2020-08-11 17:36:23.731 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:36:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (create_date BETWEEN '2020-08-04' AND '2020-08-28') ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:36:23.734 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:36:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (create_date BETWEEN '2020-08-04' AND '2020-08-28');
2020-08-11 17:36:23.736 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:36:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (create_date BETWEEN '2020-08-04' AND '2020-08-28') ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:37:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:37:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:37:00.022+0800');
2020-08-11 17:37:09.521 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 17:37:09.525 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 17:37:09.529 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 17:37:09.533 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 17:37:09.537 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 17:37:09.540 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:37:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 17:37:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:37:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:37:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:37:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:37:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 17:37:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T17:37:10.018+0800');
2020-08-11 17:37:15.310 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:38:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:38:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:38:00.022+0800');
2020-08-11 17:38:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:38:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:38:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:38:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:38:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T17:38:10.018+0800');
2020-08-11 17:38:15.311 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:39:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:39:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:39:00.021+0800');
2020-08-11 17:39:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:39:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:39:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:39:10.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 17:39:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-11T17:39:10.018+0800');
2020-08-11 17:39:15.314 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:39:20.344 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:39:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:39:20.346 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:20.352 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:39:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:39:20.353 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:39:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:21.809 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:39:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:39:21.811 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:39:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:21.817 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:39:21 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:39:21.818 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:39:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:25.841 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:39:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:39:25.843 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:39:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:40.076 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:39:40.085 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:39:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:39:40.087 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:39:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:41.520 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:39:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:39:41.523 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:39:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:39:41.525 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:39:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:39:42.801 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:39:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:40:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:40:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:40:00.020+0800');
2020-08-11 17:40:10.007 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:40:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:40:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:40:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:40:10.037 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:40:10.040 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T17:40:10.007+0800');
2020-08-11 17:40:15.317 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:40:44.215 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:40:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:40:44.236 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:40:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:40:50.472 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:40:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:41:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:41:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:41:00.013+0800');
2020-08-11 17:41:10.006 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:41:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:41:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:41:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:41:10.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:41:10.036 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T17:41:10.006+0800');
2020-08-11 17:41:15.316 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:42:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:42:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:42:00.022+0800');
2020-08-11 17:42:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:42:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:42:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:42:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-11T17:42:10.019+0800');
2020-08-11 17:42:12.277 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:42:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:42:12.279 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:42:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:15.320 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:42:15.533 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:42:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:42:15.536 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:42:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:42:15.538 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:42:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:22.947 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:42:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:42:23.004 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:42:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:42:23.007 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:42:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:28.657 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:42:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:42:28.709 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:42:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:42:28.712 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:42:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:30.547 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:42:30.551 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:42:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:42:30.553 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:42:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:32.063 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:42:32.116 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:42:32.119 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:42:32.121 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:32.783 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:42:32.788 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:42:32.791 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:42:34.385 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:42:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:42:34.387 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:42:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:43:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:43:00.021+0800');
2020-08-11 17:43:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:43:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:43:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:43:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T17:43:10.017+0800');
2020-08-11 17:43:14.486 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:43:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:43:15.330 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:43:18.639 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:43:18 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:43:18.761 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:43:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:43:21.996 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:43:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:43:22.000 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:43:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:43:22.001 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:43:22 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:35.181 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:43:35.261 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:43:35.264 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:43:35.267 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:35.873 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:43:35.878 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:43:35.881 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:43:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:37.495 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:43:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:43:46.890 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:43:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:43:46.959 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:43:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:43:48.096 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:43:48 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:43:48.101 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:43:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:43:48.103 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:43:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:50.125 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:43:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:43:50.129 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:43:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:43:50.132 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:43:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:43:51.401 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:43:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:43:51.404 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:43:51 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:44:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:44:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:44:00.021+0800');
2020-08-11 17:44:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:44:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:44:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:44:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:44:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:44:10.016+0800');
2020-08-11 17:44:15.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:45:00.088 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:45:00.103 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:45:00.088+0800');
2020-08-11 17:45:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:45:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:45:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:45:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-11 17:45:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-11T17:45:10.020+0800');
2020-08-11 17:45:15.335 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:45:19.462 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:45:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:45:19.544 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:45:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:45:19.548 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:45:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:45:19.552 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:45:19 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:24.286 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:45:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:45:24.289 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:45:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:26.154 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:45:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:45:26.158 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:45:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:45:26.161 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:45:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:28.771 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:45:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:45:42.690 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:45:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:45:42.754 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:45:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:45:42.758 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:45:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:45:42.761 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:45:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:44.786 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:45:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:45:44.788 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:45:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:46.650 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:45:46 | 耗时 1 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:45:46.654 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:45:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:45:46.656 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:45:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:45:48.385 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:45:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:46:00.023 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:46:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:46:00.023+0800');
2020-08-11 17:46:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:46:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:46:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:46:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:46:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:46:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-11T17:46:10.019+0800');
2020-08-11 17:46:15.337 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:47:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:47:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:47:00.019+0800');
2020-08-11 17:47:06.930 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:47:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:47:06.995 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:47:06.997 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:47:09.595 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:47:09.600 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:47:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:47:09.603 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:47:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:47:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:47:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:47:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:47:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-11 17:47:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-11T17:47:10.018+0800');
2020-08-11 17:47:11.586 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:47:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:47:11.589 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:47:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:47:11.591 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:47:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:47:13.383 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:47:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:47:15.339 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:47:24.265 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:47:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:47:24.267 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:47:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:47:24.273 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:47:24 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:47:24.276 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:47:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:47:29.038 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 17:47:29.042 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 17:47:29.046 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 17:47:29.049 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 17:47:29.053 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 17:47:29.057 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 17:48:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:48:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:48:00.018+0800');
2020-08-11 17:48:02.503 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:48:02.572 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 17:48:02.577 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 1);
2020-08-11 17:48:02.580 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 2);
2020-08-11 17:48:02.584 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 3);
2020-08-11 17:48:02.587 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 4);
2020-08-11 17:48:02.592 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:02 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id = 7);
2020-08-11 17:48:06.297 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:48:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:48:06.299 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:48:06 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:08.021 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:48:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:48:08.025 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:48:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:48:08.028 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:48:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:48:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:48:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:48:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:48:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 17:48:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T17:48:10.008+0800');
2020-08-11 17:48:15.341 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:48:19.687 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:48:19 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:48:19.744 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:48:19.749 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:48:19.750 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:33.032 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:48:33.137 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:48:33.142 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:48:33.144 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:34.738 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:48:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:48:34.740 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:48:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:35.665 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:48:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '3');
2020-08-11 17:48:35.669 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:48:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7));
2020-08-11 17:48:35.671 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:48:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (1, 3, 7)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:36.843 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:48:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '4');
2020-08-11 17:48:39.546 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:48:39.548 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:39.552 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:48:39.554 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:48:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:59.645 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:48:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:48:59.712 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:48:59.714 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:48:59.718 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-11 17:48:59.720 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:48:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:49:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:49:00.028 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:49:00.023+0800');
2020-08-11 17:49:02.057 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:49:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 17:49:02.059 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:49:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 17:49:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:49:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:49:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:49:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:49:10.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-11 17:49:10.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-11T17:49:10.007+0800');
2020-08-11 17:49:15.344 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:50:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:50:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 17:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:50:00.013+0800');
2020-08-11 17:50:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:50:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:50:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:50:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-11 17:50:10.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 17:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-11T17:50:10.017+0800');
2020-08-11 17:50:13.789 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 17:50:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:50:13.852 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:50:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 17:50:13.855 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:50:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 17:50:15.345 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:50:17.891 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:50:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-11 17:50:17.894 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:50:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:50:17.894 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 17:50:17 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-11 17:50:31.707 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:50:31 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:50:40.711 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:50:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:50:40.763 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:50:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-11 17:50:40.767 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:50:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:50:40.769 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:50:40 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-11 17:50:43.341 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:50:43 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:51:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:51:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 17:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:51:00.021+0800');
2020-08-11 17:51:03.107 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:51:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-11 17:51:03.169 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:51:03.170 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-11 17:51:03.174 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-11 17:51:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:51:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:51:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:51:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:51:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 17:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T17:51:10.019+0800');
2020-08-11 17:51:15.350 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:51:20.382 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-11 17:51:20 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-11 17:51:22.599 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:51:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 17:51:22.602 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 17:51:22 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 17:52:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:52:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-11 17:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:52:00.019+0800');
2020-08-11 17:52:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:52:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:52:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:52:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:52:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-11 17:52:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-11 17:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-11T17:52:10.018+0800');
2020-08-11 17:52:15.352 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:52:24.970 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:52:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-11 17:52:24.972 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:52:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:52:25.828 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:52:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = '2');
2020-08-11 17:52:25.832 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:52:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment WHERE (eq_dept_id IN (2));
2020-08-11 17:52:25.834 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 17:52:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE (eq_dept_id IN (2)) ORDER BY id ASC LIMIT 0,10;
2020-08-11 17:53:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:53:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-11 17:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:53:00.021+0800');
2020-08-11 17:53:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:53:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:53:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:53:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:53:10.037 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:53:10.040 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-11 17:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T17:53:10.007+0800');
2020-08-11 17:53:15.356 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:54:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:54:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-11 17:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:54:00.020+0800');
2020-08-11 17:54:10.007 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:54:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:54:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:54:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:54:10.032 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 17:54:10.034 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-11 17:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T17:54:10.007+0800');
2020-08-11 17:54:15.357 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:55:00.022 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:55:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-11 17:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:55:00.022+0800');
2020-08-11 17:55:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:55:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:55:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:55:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:55:10.033 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 17:55:10.036 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-11 17:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-11T17:55:10.008+0800');
2020-08-11 17:55:15.361 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:56:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:56:00.015 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-11 17:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:56:00.012+0800');
2020-08-11 17:56:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:56:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:56:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:56:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:56:10.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-11 17:56:10.034 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-11 17:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-11T17:56:10.007+0800');
2020-08-11 17:56:15.362 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:57:00.049 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:57:00.053 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-11 17:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:57:00.049+0800');
2020-08-11 17:57:10.012 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:57:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:57:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:57:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:57:10 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:57:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-11 17:57:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-11 17:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-11T17:57:10.012+0800');
2020-08-11 17:57:15.366 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:58:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:58:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-11 17:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T17:58:00.025+0800');
2020-08-11 17:58:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:58:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:58:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:58:10.055 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-11 17:58:10.058 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-11 17:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-11T17:58:10.020+0800');
2020-08-11 17:58:15.367 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:59:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 17:59:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-11 17:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T17:59:00.024+0800');
2020-08-11 17:59:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 17:59:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 17:59:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 17:59:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 17:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 17:59:10.038 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 17:59:10.041 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-11 17:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-11T17:59:10.008+0800');
2020-08-11 17:59:11.496 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 17:59:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, phone, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-11 17:59:11.499 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 17:59:11 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-11 17:59:15.368 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 17:59:15.995 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-11 17:59:16.016 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 10 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-11 17:59:16.019 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:16.022 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-11 17:59:16.024 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:16.031 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-11 17:59:16.034 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-11 17:59:16.037 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 17:59:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-11 17:59:24.643 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-11 17:59:24.646 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-11 17:59:24.648 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:24.650 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-11 17:59:24.653 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:24.656 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-11 17:59:24.659 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-11 17:59:24.662 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-11 17:59:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-11 17:59:29.650 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-11 17:59:29.653 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-11 17:59:29.656 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:29.658 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-11 17:59:29.662 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_dept_id, eq_dept_name, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-11 17:59:29.666 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-11 17:59:29.669 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-11 17:59:29.672 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-11 17:59:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-11 18:00:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 18:00:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-11 18:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-11T18:00:00.023+0800');
2020-08-11 18:00:10.007 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 18:00:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 18:00:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 18:00:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 18:00:10.037 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-11 18:00:10.040 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-11 18:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-11T18:00:10.007+0800');
2020-08-11 18:00:11.499 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 18:00:11 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:11.501 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-11 18:00:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:12.289 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 18:00:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:12.291 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-11 18:00:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:13.014 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 18:00:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:13.016 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-11 18:00:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:14.439 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 18:00:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:14.442 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-11 18:00:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:14.454 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 18:00:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:14.456 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-11 18:00:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:15.371 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 18:00:15.927 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 18:00:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:15.929 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-11 18:00:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:00:15.986 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 18:00:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-11 18:00:15.988 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-11 18:00:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-11 18:01:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-11 18:01:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-11 18:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-11T18:01:00.022+0800');
2020-08-11 18:01:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-11 18:01:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-11 18:01:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-11 18:01:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-11 18:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-11 18:01:10.030 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-11 18:01:10.034 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-11 18:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-11T18:01:10.007+0800');
2020-08-11 18:01:15.373 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1597136301722_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-11 18:01:35.468 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597136301722 paused.
2020-08-11 18:01:35.484 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-11 18:01:35.488 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-11 18:01:35.488 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597136301722 shutting down.
2020-08-11 18:01:35.488 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597136301722 paused.
2020-08-11 18:01:35.489 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1597136301722 shutdown complete.
2020-08-11 18:01:35.497 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-11 18:01:35.497 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-11 18:01:35.502 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
