2020-08-05 08:55:30.048 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 3368 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 08:55:30.051 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 08:55:31.767 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 08:55:31.769 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 08:55:31.846 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-08-05 08:55:32.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5911026f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef82919e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$d37b08cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$883059d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@741741d0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ad04fc8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:32.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 08:55:33.058 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 08:55:33.072 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 08:55:33.081 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 08:55:33.081 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 08:55:33.087 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 08:55:33.187 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 08:55:33.188 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3070 ms
2020-08-05 08:55:33.518 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 08:55:33.536 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 08:55:34.013 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 08:55:34.013 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 08:55:34.013 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 08:55:34.013 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 08:55:34.498 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 08:55:36.366 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 08:55:36.399 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 08:55:36.411 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 08:55:36.412 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 08:55:36.416 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 08:55:36.418 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 08:55:36.419 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596588936400'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 08:55:36.419 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 08:55:36.419 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 08:55:36.421 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@13390a96
2020-08-05 08:55:36.496 febs [main] INFO  p6spy - 2020-08-05 08:55:36 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 08:55:38.156 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 08:55:38.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 08:55:38.387 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 08:55:38.455 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@512dc0e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@72646d16, org.springframework.security.web.header.HeaderWriterFilter@35d81657, org.springframework.security.web.authentication.logout.LogoutFilter@7ebfe01a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@fcd3a6f, org.springframework.security.web.session.ConcurrentSessionFilter@5340ccb9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cfa7ee0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42ebece0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7030b74c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f96654, org.springframework.security.web.session.SessionManagementFilter@3180aee, org.springframework.security.web.access.ExceptionTranslationFilter@4dd752e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ae0a26]
2020-08-05 08:55:38.502 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 08:55:38.516 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 08:55:38.517 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 08:55:38.904 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 08:55:39.522 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 08:55:39.536 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 08:55:39.594 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 08:55:39.616 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 08:55:39.630 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 08:55:39.659 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 08:55:39.664 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.341 seconds (JVM running for 11.667)
2020-08-05 08:55:39.696 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 08:55:39.696 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 08:55:39.696 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 08:55:39.696 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 08:55:39.696 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 08:55:40.305 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 08:55:40.306 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 08:55:40.320 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-05 08:55:40 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 08:55:40.323 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-05 08:55:40.617 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 08:55:40.627 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 08:55:40.627 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596531674910"'s failed in-progress jobs.
2020-08-05 08:55:40.642 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596588936400 started.
2020-08-05 08:55:40.649 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-05 08:55:40.737 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 08:56:00.033 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 08:56:00.082 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 08:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T08:56:00.033+0800');
2020-08-05 08:56:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 08:56:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 08:56:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 08:56:10.105 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 08:56:10.108 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：86 毫秒
2020-08-05 08:56:10.113 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 08:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 86, '2020-08-05T08:56:10.022+0800');
2020-08-05 08:56:13.057 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 08:56:13.137 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 08:56:13.149 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 08:56:13.234 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:704C3D308503AF190F54868FEC45B719
2020-08-05 08:56:13.621 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 08:56:13.769 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T08:56:13.759+0800' WHERE (USERNAME = 'admin');
2020-08-05 08:56:13.780 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 08:56:13.785 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 08:56:13.788 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 08:56:13.794 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 08:56:13.800 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 08:56:13 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 08:56:16.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 08:56:18.064 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 08:56:18 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 08:56:18.075 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 08:56:18 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 08:56:19.647 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 08:56:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 08:56:19.650 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 08:56:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 08:57:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 08:57:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 08:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T08:57:00.023+0800');
2020-08-05 08:57:10.013 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 08:57:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 08:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 08:57:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 08:57:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 08:57:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 08:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T08:57:10.013+0800');
2020-08-05 08:57:16.741 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 08:58:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 08:58:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 08:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T08:58:00.022+0800');
2020-08-05 08:58:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 08:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 08:58:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 08:58:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 08:58:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 08:58:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 08:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T08:58:10.020+0800');
2020-08-05 08:58:16.742 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 08:59:00.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 08:59:00.050 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 08:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T08:59:00.045+0800');
2020-08-05 08:59:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 08:59:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 08:59:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 08:59:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 08:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 08:59:10.080 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 08:59:10.083 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 08:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-05T08:59:10.044+0800');
2020-08-05 08:59:16.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:00:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:00:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:00:00.022+0800');
2020-08-05 09:00:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:00:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:00:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:00:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:00:10.072 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:00:10.077 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:00:10.044+0800');
2020-08-05 09:00:16.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:01:00.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:01:00.049 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:01:00.045+0800');
2020-08-05 09:01:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:01:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:01:10.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 09:01:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T09:01:10.017+0800');
2020-08-05 09:01:16.751 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:02:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:02:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 09:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:02:00.020+0800');
2020-08-05 09:02:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:02:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:02:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 09:02:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 09:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T09:02:10.017+0800');
2020-08-05 09:02:16.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:03:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:03:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 09:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:03:00.021+0800');
2020-08-05 09:03:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:03:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:03:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:03:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:03:10.052 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 09:03:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 09:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T09:03:10.018+0800');
2020-08-05 09:03:16.755 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:04:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:04:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 09:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:04:00.020+0800');
2020-08-05 09:04:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:04:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:04:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:04:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:04:10.077 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-05 09:04:10.080 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 09:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-05T09:04:10.042+0800');
2020-08-05 09:04:16.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:05:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:05:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 09:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:05:00.021+0800');
2020-08-05 09:05:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:05:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:05:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:05:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:05:10.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 09:05:10.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 09:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T09:05:10.045+0800');
2020-08-05 09:05:16.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:06:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:06:00.047 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 09:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:06:00.044+0800');
2020-08-05 09:06:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:06:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:06:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:06:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:06:10.071 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:06:10.074 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 09:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:06:10.043+0800');
2020-08-05 09:06:16.762 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:07:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:07:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 09:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:07:00.019+0800');
2020-08-05 09:07:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:07:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:07:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:07:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:07:10.072 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 09:07:10.075 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 09:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T09:07:10.042+0800');
2020-08-05 09:07:16.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:08:00.046 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:08:00.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 09:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:08:00.046+0800');
2020-08-05 09:08:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:08:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:08:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:08:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:08:10.050 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 09:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:08:10.019+0800');
2020-08-05 09:08:16.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:09:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:09:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 09:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:09:00.017+0800');
2020-08-05 09:09:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:09:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:09:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:09:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:09:10.070 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:09:10.073 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 09:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T09:09:10.044+0800');
2020-08-05 09:09:16.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:10:00.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:10:00.012 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:10:00.009+0800');
2020-08-05 09:10:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:10:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:10:10.057 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-05 09:10:10.060 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-05T09:10:10.019+0800');
2020-08-05 09:10:16.774 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:11:00.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:11:00.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:11:00.043+0800');
2020-08-05 09:11:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:11:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:11:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:11:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:11:10.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 09:11:10.051 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T09:11:10.019+0800');
2020-08-05 09:11:16.777 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:12:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:12:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 09:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:12:00.021+0800');
2020-08-05 09:12:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:12:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:12:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:12:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:12:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:12:10.071 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 09:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T09:12:10.042+0800');
2020-08-05 09:12:16.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:13:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:13:00.048 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 09:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:13:00.044+0800');
2020-08-05 09:13:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:13:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:13:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:13:10.069 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:13:10.072 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 09:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T09:13:10.043+0800');
2020-08-05 09:13:16.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:14:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:14:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 09:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:14:00.020+0800');
2020-08-05 09:14:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:14:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:14:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:14:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:14:10.069 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 09:14:10.071 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 09:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T09:14:10.042+0800');
2020-08-05 09:14:16.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:15:00.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:15:00.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 09:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:15:00.043+0800');
2020-08-05 09:15:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:15:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:15:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:15:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 09:15:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 09:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T09:15:10.019+0800');
2020-08-05 09:15:16.783 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:16:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:16:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 09:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:16:00.019+0800');
2020-08-05 09:16:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:16:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:16:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:16:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:16:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:16:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 09:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T09:16:10.020+0800');
2020-08-05 09:16:16.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:16:35.242 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 09:16:35 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-05 09:16:35.251 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 09:16:35 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-05 09:16:35.254 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 09:16:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-05 09:17:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:17:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 09:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:17:00.019+0800');
2020-08-05 09:17:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:17:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:17:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:17:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:17:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 09:17:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 09:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T09:17:10.017+0800');
2020-08-05 09:17:16.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:18:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:18:00.013 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 09:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:18:00.010+0800');
2020-08-05 09:18:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:18:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:18:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:18:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:18:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:18:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 09:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T09:18:10.019+0800');
2020-08-05 09:18:16.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:19:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:19:00.013 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 09:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:19:00.010+0800');
2020-08-05 09:19:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:19:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:19:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:19:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 09:19:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 09:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T09:19:10.019+0800');
2020-08-05 09:19:16.792 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:20:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:20:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:20:00.021+0800');
2020-08-05 09:20:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:20:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:20:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:20:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:20:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:20:10.018+0800');
2020-08-05 09:20:16.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:21:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:21:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:21:00.019+0800');
2020-08-05 09:21:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:21:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:21:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:21:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:21:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T09:21:10.020+0800');
2020-08-05 09:21:16.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:22:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:22:00.017 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 09:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:22:00.012+0800');
2020-08-05 09:22:10.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:22:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:22:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:22:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:22:10.038 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 09:22:10.040 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 09:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T09:22:10.007+0800');
2020-08-05 09:22:16.799 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:23:00.010 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:23:00.014 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 09:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:23:00.010+0800');
2020-08-05 09:23:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:23:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:23:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:23:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:23:10.035 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:23:10.037 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 09:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T09:23:10.007+0800');
2020-08-05 09:23:16.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:24:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:24:00.013 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 09:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:24:00.009+0800');
2020-08-05 09:24:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:24:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:24:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:24:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 09:24:10.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 09:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T09:24:10.016+0800');
2020-08-05 09:24:16.803 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:25:00.009 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:25:00.012 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 09:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:25:00.009+0800');
2020-08-05 09:25:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:25:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:25:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:25:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:25:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 09:25:10.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 09:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T09:25:10.017+0800');
2020-08-05 09:25:16.807 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:26:00.013 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:26:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 09:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:26:00.013+0800');
2020-08-05 09:26:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:26:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:26:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:26:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:26:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 09:26:10.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 09:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T09:26:10.007+0800');
2020-08-05 09:26:16.810 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:26:37.782 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 09:26:37 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:26:39.603 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 09:26:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:26:39.613 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 09:26:39 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 09:26:39.615 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 09:26:39 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 09:27:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:27:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 09:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:27:00.021+0800');
2020-08-05 09:27:06.633 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 09:27:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 09:27:06.635 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 09:27:06 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 09:27:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:27:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:27:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:27:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:27:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 09:27:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 09:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T09:27:10.020+0800');
2020-08-05 09:27:16.812 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:28:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:28:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 09:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:28:00.021+0800');
2020-08-05 09:28:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:28:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:28:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:28:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:28:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 09:28:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 09:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T09:28:10.016+0800');
2020-08-05 09:28:16.816 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:29:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:29:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 09:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:29:00.020+0800');
2020-08-05 09:29:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:29:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:29:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:29:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:29:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 09:29:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 09:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T09:29:10.008+0800');
2020-08-05 09:29:16.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:30:00.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:30:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:30:00.018+0800');
2020-08-05 09:30:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:30:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:30:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:30:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 09:30:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T09:30:10.019+0800');
2020-08-05 09:30:16.821 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:31:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:31:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:31:00.021+0800');
2020-08-05 09:31:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:31:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:31:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:31:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:31:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 09:31:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:31:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T09:31:10.016+0800');
2020-08-05 09:31:16.822 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596588936400_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:31:49.046 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18316 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:31:49.049 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:31:50.592 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 09:31:50.595 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 09:31:50.658 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-08-05 09:31:51.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4157c7a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7c956d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$bbc1ce03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$70771f0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.581 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.585 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4c65d8e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$954bc1c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:51.598 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:31:52.016 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 09:31:52.033 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 09:31:52.043 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 09:31:52.044 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 09:31:52.052 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 09:31:52.188 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 09:31:52.189 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3085 ms
2020-08-05 09:31:52.591 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 09:31:52.600 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 09:31:53.118 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 09:31:53.118 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 09:31:53.118 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 09:31:53.118 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 09:31:53.673 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 09:31:55.659 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 09:31:55.696 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 09:31:55.710 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 09:31:55.711 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 09:31:55.715 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 09:31:55.717 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 09:31:55.717 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596591115697'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 09:31:55.718 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 09:31:55.718 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 09:31:55.719 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6e0f259e
2020-08-05 09:31:55.810 febs [main] INFO  p6spy - 2020-08-05 09:31:55 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 09:31:57.680 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 09:31:57.963 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 09:31:57.964 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 09:31:58.046 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@759c53e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@53945f9c, org.springframework.security.web.header.HeaderWriterFilter@433362e0, org.springframework.security.web.authentication.logout.LogoutFilter@70c99e13, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@45430a27, org.springframework.security.web.session.ConcurrentSessionFilter@40625ac6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28ffa527, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de2344a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1500edf3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28d37d43, org.springframework.security.web.session.SessionManagementFilter@58cd6088, org.springframework.security.web.access.ExceptionTranslationFilter@6c399d4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f7bf0f6]
2020-08-05 09:31:58.105 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 09:31:58.123 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 09:31:58.124 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 09:31:58.575 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 09:31:59.398 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 09:31:59.418 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 09:31:59.489 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 09:31:59.514 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 09:31:59.529 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 09:31:59.563 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 09:31:59.568 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.232 seconds (JVM running for 13.295)
2020-08-05 09:31:59.594 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 09:31:59.594 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 09:31:59.594 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 09:31:59.594 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 09:31:59.595 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 09:31:59.965 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 09:31:59.966 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 09:31:59.982 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 09:32:00.426 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-05 09:32:00 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-05 09:32:00.515 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 09:32:00.526 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 09:32:00.527 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596588936400"'s failed in-progress jobs.
2020-08-05 09:32:00.543 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596591115697 started.
2020-08-05 09:32:00.549 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:32:00.597 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:32:00.663 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 09:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T09:32:00.597+0800');
2020-08-05 09:32:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:32:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:32:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:32:10.134 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:32:10.137 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：114 毫秒
2020-08-05 09:32:10.142 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 09:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 114, '2020-08-05T09:32:10.023+0800');
2020-08-05 09:32:12.547 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:32:19.414 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E83DDF77ECB86FE5B61E90B65FDD04C8
2020-08-05 09:32:29.461 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A7495107E06AC555CE2B832607D8EAC0
2020-08-05 09:32:32.715 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 09:32:32 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 09:32:32.818 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 09:32:32 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 09:32:32.834 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 09:32:32 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 09:32:33.257 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 09:32:33.398 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T09:32:33.384+0800' WHERE (USERNAME = 'admin');
2020-08-05 09:32:33.411 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 09:32:33.415 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 09:32:33.420 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 09:32:33.429 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 09:32:33.435 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 09:32:33 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 09:32:36.584 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 09:32:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 09:32:36.601 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 09:32:36 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 09:32:40.322 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 09:32:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 09:32:40.326 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 09:32:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:32:40.327 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 09:32:40 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 09:33:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:33:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 09:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:33:00.023+0800');
2020-08-05 09:33:04.765 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 09:33:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:33:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:33:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:33:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:33:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 09:33:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 09:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-05T09:33:10.019+0800');
2020-08-05 09:33:12.549 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:34:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:34:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 09:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:34:00.021+0800');
2020-08-05 09:34:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:34:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:34:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:34:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 09:34:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 09:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T09:34:10.020+0800');
2020-08-05 09:34:12.550 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:35:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:35:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 09:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:35:00.022+0800');
2020-08-05 09:35:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:35:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:35:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:35:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:35:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 09:35:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 09:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T09:35:10.020+0800');
2020-08-05 09:35:12.552 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:36:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:36:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:36:00.021+0800');
2020-08-05 09:36:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:36:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:36:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:36:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:36:10.053 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 09:36:10.058 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T09:36:10.020+0800');
2020-08-05 09:36:12.555 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:37:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:37:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:37:00.021+0800');
2020-08-05 09:37:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:37:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:37:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:37:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:37:10.082 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-05 09:37:10.086 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 61, '2020-08-05T09:37:10.021+0800');
2020-08-05 09:37:12.557 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:38:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:38:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 09:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:38:00.019+0800');
2020-08-05 09:38:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:38:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:38:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:38:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:38:10.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 09:38:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 09:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T09:38:10.009+0800');
2020-08-05 09:38:12.559 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:39:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:39:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 09:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:39:00.025+0800');
2020-08-05 09:39:10.008 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:39:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:39:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:39:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:39:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 09:39:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 09:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T09:39:10.008+0800');
2020-08-05 09:39:12.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:40:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:40:00.016 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 09:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:40:00.011+0800');
2020-08-05 09:40:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:40:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:40:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:40:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:40:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 09:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:40:10.017+0800');
2020-08-05 09:40:12.564 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:41:00.011 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:41:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 09:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:41:00.011+0800');
2020-08-05 09:41:10.011 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:41:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:41:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:41:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 09:41:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 09:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T09:41:10.011+0800');
2020-08-05 09:41:12.566 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:42:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:42:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 09:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:42:00.012+0800');
2020-08-05 09:42:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:42:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:42:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:42:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:42:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 09:42:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 09:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T09:42:10.007+0800');
2020-08-05 09:42:12.569 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:43:00.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:43:00.015 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 09:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:43:00.010+0800');
2020-08-05 09:43:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:43:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:43:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:43:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:43:10.037 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 09:43:10.040 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 09:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T09:43:10.008+0800');
2020-08-05 09:43:12.570 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:44:00.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:44:00.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 09:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:44:00.044+0800');
2020-08-05 09:44:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:44:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:44:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:44:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:44:10.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 09:44:10.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 09:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T09:44:10.010+0800');
2020-08-05 09:44:12.573 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:45:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:45:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 09:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:45:00.021+0800');
2020-08-05 09:45:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:45:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:45:10 | 耗时 10 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:45:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:45:10 | 耗时 11 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:45:10.115 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:45:10.123 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：101 毫秒
2020-08-05 09:45:10.127 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 09:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 101, '2020-08-05T09:45:10.022+0800');
2020-08-05 09:45:12.576 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:45:49.308 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 09:45:49 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 380, MENU_NAME = '机构列表', URL = 'dept/dept/index', PERMS = '', ICON = 'layui-icon-save', TYPE = '0', MODIFY_TIME = '2020-08-05T09:45:49.300+0800' WHERE MENU_ID = 383;
2020-08-05 09:45:49.345 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 09:45:49 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:45:49.354 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 09:45:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 23, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=383, parentId=380, menuName=机构列表, url=dept/dept/index, perms=, icon=layui-icon-save, type=0, orderNum=null, createTime=null, modifyTime=Wed Aug 05 09:45:49 CST 2020)"', '192.168.1.113', '2020-08-05T09:45:49.338+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 09:45:51.548 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 09:45:51 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 09:45:51.597 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 09:45:51 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 09:46:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:46:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 09:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T09:46:00.021+0800');
2020-08-05 09:46:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:46:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:46:10.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 09:46:10.051 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 09:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T09:46:10.017+0800');
2020-08-05 09:46:11.395 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 09:46:11 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 09:46:12.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:47:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:47:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 09:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T09:47:00.018+0800');
2020-08-05 09:47:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:47:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:47:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:47:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:47:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:47:10.057 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 09:47:10.062 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 09:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-05T09:47:10.017+0800');
2020-08-05 09:47:12.582 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:48:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 09:48:00.036 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 09:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T09:48:00.026+0800');
2020-08-05 09:48:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 09:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 09:48:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 09:48:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 09:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 09:48:10.056 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-05 09:48:10.059 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 09:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-05T09:48:10.018+0800');
2020-08-05 09:48:12.583 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596591115697_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 09:48:34.461 febs [Thread-28] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596591115697 paused.
2020-08-05 09:48:34.478 febs [Thread-28] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-05 09:48:34.483 febs [Thread-28] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-05 09:48:34.483 febs [Thread-28] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596591115697 shutting down.
2020-08-05 09:48:34.483 febs [Thread-28] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596591115697 paused.
2020-08-05 09:48:34.485 febs [Thread-28] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596591115697 shutdown complete.
2020-08-05 09:48:34.490 febs [Thread-28] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 09:48:34.490 febs [Thread-28] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 09:48:34.496 febs [Thread-28] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 09:48:37.360 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 980 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:48:37.363 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:48:37.762 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 09:52:30.417 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7628 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:52:30.419 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:52:30.856 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 09:55:14.856 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7196 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:55:14.861 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:55:16.513 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 09:55:16.515 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 09:55:16.584 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57ms. Found 0 repository interfaces.
2020-08-05 09:55:17.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bce08a15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$53521944] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$374a9073] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ebffe17e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1df5c7e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$10d48430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:55:17.707 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 09:55:17.721 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 09:55:17.729 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 09:55:17.729 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 09:55:17.736 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 09:55:17.836 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 09:55:17.837 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2903 ms
2020-08-05 09:55:18.161 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 09:55:18.168 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 09:55:18.647 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 09:55:18.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 09:55:18.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 09:55:18.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 09:55:19.129 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 09:55:19.668 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 09:55:19.669 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 09:55:19.690 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 09:55:19.693 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-05 09:55:19.708 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 09:57:04.159 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 3704 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:57:04.163 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:57:05.591 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 09:57:05.594 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 09:57:05.666 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-08-05 09:57:06.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$405c88de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6ce180d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$bac68f3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6f7be047] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@59d0cdb6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$945082f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:06.821 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 09:57:06.836 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 09:57:06.844 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 09:57:06.845 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 09:57:06.851 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 09:57:06.955 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 09:57:06.955 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2724 ms
2020-08-05 09:57:07.301 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 09:57:07.312 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 09:57:07.778 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 09:57:07.778 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 09:57:07.778 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 09:57:07.779 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 09:57:08.254 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 09:57:08.306 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 09:57:08.307 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 09:57:08.313 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 09:57:08.316 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-05 09:57:08.332 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 09:57:44.767 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 3292 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 09:57:44.771 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 09:57:46.271 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 09:57:46.273 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 09:57:46.353 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67ms. Found 0 repository interfaces.
2020-08-05 09:57:46.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:46.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e57d84b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:46.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:46.970 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:46.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4c9677a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$88c1dea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.140 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3d772fb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@16ee9aa7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$624bd266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 09:57:47.511 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 09:57:47.525 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 09:57:47.534 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 09:57:47.534 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 09:57:47.540 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 09:57:47.644 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 09:57:47.644 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2806 ms
2020-08-05 09:57:47.960 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 09:57:47.968 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 09:57:48.426 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 09:57:48.426 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 09:57:48.426 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 09:57:48.426 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 09:57:48.885 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 09:57:49.444 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 09:57:49.445 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 09:57:49.453 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 09:57:49.456 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-05 09:57:49.474 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 10:01:08.607 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 12220 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 10:01:08.612 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 10:01:10.118 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 10:01:10.120 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 10:01:10.188 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-05 10:01:10.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$29fbb815] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.774 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c06d4744] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a465be73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$591b0f7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2e590b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7defb230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:10.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:01:11.283 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 10:01:11.296 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 10:01:11.305 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 10:01:11.305 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 10:01:11.312 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 10:01:11.413 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 10:01:11.414 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2731 ms
2020-08-05 10:01:11.740 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 10:01:11.748 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 10:01:12.210 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 10:01:12.210 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 10:01:12.210 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 10:01:12.211 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 10:01:12.684 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 10:01:13.228 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 10:01:13.228 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 10:01:13.234 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 10:01:13.237 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-05 10:01:13.255 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 10:03:19.698 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 524 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 10:03:19.702 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 10:03:21.377 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 10:03:21.379 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 10:03:21.450 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-08-05 10:03:21.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6bfe05f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d316f8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$8129e6bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$35df37c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5aa62ee7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ab3da7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:03:22.572 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 10:03:22.586 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 10:03:22.594 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 10:03:22.594 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 10:03:22.601 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 10:03:22.703 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 10:03:22.704 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2936 ms
2020-08-05 10:03:23.026 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 10:03:23.033 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 10:03:23.492 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 10:03:23.492 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 10:03:23.492 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 10:03:23.492 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 10:03:23.956 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 10:03:24.466 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-05 10:03:24.467 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-05 10:03:24.473 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-05 10:03:24.476 febs [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-08-05 10:03:24.492 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-05 10:04:08.136 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 2012 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 10:04:08.138 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 10:04:09.659 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 10:04:09.661 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 10:04:09.735 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-08-05 10:04:10.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$90a31322] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2714a251] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b0d1980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bfc26a8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@498c535d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e4970d3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:04:10.863 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 10:04:10.876 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 10:04:10.885 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 10:04:10.885 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 10:04:10.891 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 10:04:10.993 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 10:04:10.993 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2780 ms
2020-08-05 10:04:11.317 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 10:04:11.325 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 10:04:11.786 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 10:04:11.786 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 10:04:11.786 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 10:04:11.786 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 10:04:12.261 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 10:04:14.113 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 10:04:14.143 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 10:04:14.153 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 10:04:14.154 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 10:04:14.157 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 10:04:14.158 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 10:04:14.159 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596593054144'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 10:04:14.159 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 10:04:14.159 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 10:04:14.160 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@507f47f9
2020-08-05 10:04:14.230 febs [main] INFO  p6spy - 2020-08-05 10:04:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 10:04:15.985 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 10:04:16.218 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 10:04:16.219 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 10:04:16.289 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25435731, org.springframework.security.web.context.SecurityContextPersistenceFilter@7474196, org.springframework.security.web.header.HeaderWriterFilter@5c0ece6d, org.springframework.security.web.authentication.logout.LogoutFilter@56fa0ef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@788a0513, org.springframework.security.web.session.ConcurrentSessionFilter@43719e98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18209303, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3921135e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@320fc4b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10301d6f, org.springframework.security.web.session.SessionManagementFilter@7affee54, org.springframework.security.web.access.ExceptionTranslationFilter@652a1a17, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a63ff31]
2020-08-05 10:04:16.338 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 10:04:16.352 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 10:04:16.354 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 10:04:16.726 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 10:04:17.678 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 10:04:17.715 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 10:04:17.844 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 10:04:17.890 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 10:04:17.921 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 10:04:17.989 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 10:04:17.995 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.611 seconds (JVM running for 11.761)
2020-08-05 10:04:18.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 10:04:18.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 10:04:18.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 10:04:18.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 10:04:18.054 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 10:04:18.485 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 10:04:18.486 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 10:04:18.509 febs [RMI TCP Connection(6)-192.168.1.113] INFO  p6spy - 2020-08-05 10:04:18 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 10:04:18.515 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 29 ms
2020-08-05 10:04:18.915 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 10:04:18.928 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 10:04:18.928 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596591115697"'s failed in-progress jobs.
2020-08-05 10:04:18.934 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596593054144 started.
2020-08-05 10:04:18.940 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-05 10:04:19.008 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:04:30.120 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:3E57CB555FA279D9F07FEBBD7AE72B8E
2020-08-05 10:04:33.907 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:04:33 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 10:04:34.004 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 10:04:34.020 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 10:04:34.631 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:04:34.822 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T10:04:34.774+0800' WHERE (USERNAME = 'admin');
2020-08-05 10:04:34.839 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 10:04:34.846 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 10:04:34.850 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 10:04:34.857 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 10:04:34.863 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:04:34 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 10:04:36.823 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:04:36 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:04:36.828 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:04:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:04:36.846 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:04:36 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:04:37.545 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:04:37 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:05:00.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:05:00.046 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:05:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T10:05:00.030+0800');
2020-08-05 10:05:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:05:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:05:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:05:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:05:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:05:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-05 10:05:10.085 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-05T10:05:10.023+0800');
2020-08-05 10:05:19.009 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:06:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:06:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:06:00.023+0800');
2020-08-05 10:06:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:06:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:06:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:06:10.052 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 10:06:10.056 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T10:06:10.020+0800');
2020-08-05 10:06:19.011 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:07:00.049 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:07:00.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:07:00.049+0800');
2020-08-05 10:07:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:07:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:07:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:07:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:07:10.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:07:10.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T10:07:10.008+0800');
2020-08-05 10:07:19.014 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:08:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:08:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:08:00.023+0800');
2020-08-05 10:08:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:08:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:08:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:08:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:08:10.074 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 10:08:10.077 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T10:08:10.043+0800');
2020-08-05 10:08:19.015 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:09:00.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:09:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:09:00.018+0800');
2020-08-05 10:09:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:09:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:09:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:09:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:09:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:09:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T10:09:10.021+0800');
2020-08-05 10:09:17.880 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:09:57.793 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:09:57 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 380, MENU_NAME = '机构列表', URL = 'mydept/mydept/index', PERMS = '', ICON = 'layui-icon-save', TYPE = '0', MODIFY_TIME = '2020-08-05T10:09:57.790+0800' WHERE MENU_ID = 383;
2020-08-05 10:09:57.818 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:09:57 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:09:57.822 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 10:09:57 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 8, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=383, parentId=380, menuName=机构列表, url=mydept/mydept/index, perms=, icon=layui-icon-save, type=0, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:09:57 CST 2020)"', '192.168.1.113', '2020-08-05T10:09:57.809+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:09:59.464 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:09:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:09:59.501 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:09:59 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:10:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:10:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T10:10:00.021+0800');
2020-08-05 10:10:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:10:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:10:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:10:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 10:10:10.053 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T10:10:10.018+0800');
2020-08-05 10:10:17.881 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:11:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:11:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 10:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:11:00.020+0800');
2020-08-05 10:11:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:11:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:11:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:11:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:11:10.055 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 10:11:10.058 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 10:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T10:11:10.021+0800');
2020-08-05 10:11:17.885 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:11:47.108 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:11:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:11:49.347 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:11:49 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 10:11:49.349 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:11:49 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:11:50.528 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:11:50 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:12:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:12:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 10:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:12:00.022+0800');
2020-08-05 10:12:04.828 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:12:04 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 10:12:04.830 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:12:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 10:12:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:12:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:12:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:12:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:12:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:12:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 10:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T10:12:10.017+0800');
2020-08-05 10:12:17.888 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:13:00.014 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:13:00.021 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 10:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:13:00.014+0800');
2020-08-05 10:13:09.818 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:13:09 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 380, MENU_NAME = '机构列表', URL = '/mydept/mydept/index', PERMS = '', ICON = 'layui-icon-save', TYPE = '0', MODIFY_TIME = '2020-08-05T10:13:09.815+0800' WHERE MENU_ID = 383;
2020-08-05 10:13:09.838 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 10:13:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 17, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=383, parentId=380, menuName=机构列表, url=/mydept/mydept/index, perms=, icon=layui-icon-save, type=0, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:13:09 CST 2020)"', '192.168.1.113', '2020-08-05T10:13:09.832+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:13:09.847 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:13:09 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:13:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:13:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:13:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:13:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:13:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 10:13:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 10:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T10:13:10.009+0800');
2020-08-05 10:13:10.991 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:13:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:13:11.038 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:13:11 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:13:13.272 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:13:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:13:13.273 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:13:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:13:17.891 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:14:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:14:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 10:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:14:00.020+0800');
2020-08-05 10:14:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:14:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:14:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:14:10.053 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 10:14:10.056 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 10:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T10:14:10.020+0800');
2020-08-05 10:14:17.891 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:14:36.313 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:14:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 10:14:36.315 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:14:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 10:14:54.476 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:14:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:14:54.478 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:14:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:14:55.331 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:14:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:14:55.333 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:14:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:15:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:15:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:15:00.022+0800');
2020-08-05 10:15:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:15:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:15:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:15:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:15:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T10:15:10.020+0800');
2020-08-05 10:15:17.893 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:15:46.179 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:15:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:15:46.181 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:15:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:16:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:16:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:16:00.021+0800');
2020-08-05 10:16:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:16:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:16:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:16:10.208 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:16:10.234 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：179 毫秒
2020-08-05 10:16:10.237 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 179, '2020-08-05T10:16:10.054+0800');
2020-08-05 10:16:17.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:17:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:17:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:17:00.020+0800');
2020-08-05 10:17:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:17:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:17:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:17:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:17:10.034 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:17:10.036 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T10:17:10.008+0800');
2020-08-05 10:17:17.897 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:17:52.309 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:17:52 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 383, MENU_NAME = '新增', PERMS = 'mydept:mod', TYPE = '1', MODIFY_TIME = '2020-08-05T10:17:52.305+0800' WHERE MENU_ID = 384;
2020-08-05 10:17:52.321 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 10:17:52 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 9, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=384, parentId=383, menuName=新增, url=null, perms=mydept:mod, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:17:52 CST 2020)"', '192.168.1.113', '2020-08-05T10:17:52.314+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:17:52.335 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:17:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:18:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:18:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:18:00.019+0800');
2020-08-05 10:18:02.335 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:18:02 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 383, MENU_NAME = '删除', PERMS = 'mydept:del', TYPE = '1', MODIFY_TIME = '2020-08-05T10:18:02.333+0800' WHERE MENU_ID = 385;
2020-08-05 10:18:02.345 febs [aps-Async-Thread4] INFO  p6spy - 2020-08-05 10:18:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=385, parentId=383, menuName=删除, url=null, perms=mydept:del, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:18:02 CST 2020)"', '192.168.1.113', '2020-08-05T10:18:02.339+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:18:02.351 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:18:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:18:03.969 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:18:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:18:04.007 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:18:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:18:05.419 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:18:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:18:05.420 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:18:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:18:10.011 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:18:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:18:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:18:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-05 10:18:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-05T10:18:10.011+0800');
2020-08-05 10:18:17.899 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:19:00.035 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:19:00.040 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:19:00.035+0800');
2020-08-05 10:19:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:19:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:19:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:19:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:19:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 10:19:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-05T10:19:10.008+0800');
2020-08-05 10:19:12.199 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:19:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:19:12.309 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:19:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:19:12.311 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:19:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:19:17.901 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:19:31.879 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:19:31 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:19:31.962 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:19:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:19:31.964 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:19:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:19:32.681 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:19:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:19:32.745 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:19:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:19:32.747 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:19:32 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:20:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:20:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:20:00.020+0800');
2020-08-05 10:20:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:20:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:20:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:20:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:20:10.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 10:20:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T10:20:10.008+0800');
2020-08-05 10:20:17.904 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:21:00.041 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:21:00.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 10:21:00 | 耗时 4 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T10:21:00.041+0800');
2020-08-05 10:21:10.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:21:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:21:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:21:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:21:10.037 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 10:21:10.039 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 10:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T10:21:10.007+0800');
2020-08-05 10:21:17.906 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:21:21.758 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:21:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:21:21.841 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:21:21 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:21:21.843 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:21:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:22:00.023 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:22:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 10:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:22:00.023+0800');
2020-08-05 10:22:10.008 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:22:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:22:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:22:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:22:10.035 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:22:10.037 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 10:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T10:22:10.008+0800');
2020-08-05 10:22:13.729 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:22:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:22:13.804 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:22:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:22:13.805 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:22:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:22:17.924 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:23:00.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:23:00.021 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 10:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:23:00.018+0800');
2020-08-05 10:23:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:23:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:23:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:23:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:23:10.034 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:23:10.037 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 10:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T10:23:10.008+0800');
2020-08-05 10:23:12.650 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:23:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:23:12.722 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:23:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:23:12.724 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:23:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:23:17.930 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:24:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:24:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 10:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:24:00.022+0800');
2020-08-05 10:24:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:24:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:24:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:24:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:24:10.039 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 10:24:10.041 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 10:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T10:24:10.009+0800');
2020-08-05 10:24:17.930 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:24:50.217 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:24:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:24:50.283 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:24:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:24:50.285 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:24:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:25:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:25:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:25:00.022+0800');
2020-08-05 10:25:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:25:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:25:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:25:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:25:10.030 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 10:25:10.033 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T10:25:10.007+0800');
2020-08-05 10:25:17.932 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:25:52.270 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:25:52 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:25:52.361 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:25:52 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:25:52.363 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:25:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:26:00.010 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:26:00.014 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:26:00.010+0800');
2020-08-05 10:26:09.873 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:26:09 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:26:09.940 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:26:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:26:09.942 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:26:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:26:10.010 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:26:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:26:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:26:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:26:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-05 10:26:10.051 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-05T10:26:10.010+0800');
2020-08-05 10:26:17.940 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:26:27.082 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:26:27 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:26:27.156 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:26:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:26:27.158 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:26:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:26:50.975 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:26:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:26:51.046 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:26:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:26:51.048 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:26:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:27:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:27:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:27:00.020+0800');
2020-08-05 10:27:07.772 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:27:07 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:27:07.835 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:27:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:27:07.837 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:27:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:27:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:27:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:27:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:27:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:27:10.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-05 10:27:10.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-05T10:27:10.011+0800');
2020-08-05 10:27:17.945 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:27:35.331 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:27:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:27:35.428 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:27:35 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:27:35.430 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:27:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:27:51.520 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:27:51 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:27:51.588 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:27:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:27:51.590 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:27:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:28:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:28:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:28:00.019+0800');
2020-08-05 10:28:04.875 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:28:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:28:04.945 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:28:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:28:04.947 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:28:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:28:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:28:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:28:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:28:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:28:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 10:28:10.057 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T10:28:10.021+0800');
2020-08-05 10:28:17.946 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:28:22.377 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:28:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:28:22.448 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:28:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:28:22.450 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:28:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:28:37.035 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:28:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:28:37.105 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:28:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:28:37.107 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:28:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:28:45.035 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:28:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:28:45.105 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:28:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:28:45.107 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:28:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:29:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:29:00.014 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:29:00.011+0800');
2020-08-05 10:29:07.117 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 10:29:07.119 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 10:29:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:29:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:29:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:29:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:29:10.036 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:29:10.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T10:29:10.011+0800');
2020-08-05 10:29:12.138 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_send_command;
2020-08-05 10:29:12.139 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:29:12.145 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:12 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20009');
2020-08-05 10:29:12.154 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20001');
2020-08-05 10:29:17.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:29:24.562 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:29:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 10:29:24.564 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:29:24 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:29:28.141 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:29:28 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-05 10:29:31.310 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:29:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:29:31.312 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:29:31 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:29:31.313 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:29:31 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:29:41.477 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T10:29:41.473+0800' WHERE ROLE_ID = 82;
2020-08-05 10:29:41.488 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 10:29:41.517 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 10:29:41.520 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 10:29:41.524 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 10:29:41.534 febs [aps-Async-Thread5] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 55, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 10:29:41 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,385,387,384,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T10:29:41.529+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:29:41.562 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:29:41.565 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:29:41 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:29:43.728 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:29:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:29:43.768 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:29:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:29:43.771 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:29:43 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:29:43.774 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:29:43 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:29:45.225 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:29:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:29:45.227 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:29:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:29:57.314 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:29:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:29:57.372 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:29:57.374 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:29:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:30:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:30:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:30:00.018+0800');
2020-08-05 10:30:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:30:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:30:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:30:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:30:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:30:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T10:30:10.019+0800');
2020-08-05 10:30:17.299 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:30:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:30:17.951 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:30:27.176 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:30:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-05 10:30:37.441 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:30:37 | 耗时 1 ms | SQL 语句：
UPDATE a_mydept SET name = '开发部', head = '张扬', address = '许昌市', category = 1, state = 0, modifier = '1', mod_date = '2020-08-05T10:30:37.438' WHERE id = 1;
2020-08-05 10:30:37.462 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:30:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:30:37.464 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:30:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:30:45.690 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:30:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:30:45.692 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:30:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:30:46.361 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:30:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:30:46.362 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:30:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:31:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:31:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 10:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:31:00.020+0800');
2020-08-05 10:31:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:31:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:31:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:31:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:31:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 10:31:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 10:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T10:31:10.018+0800');
2020-08-05 10:31:12.784 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:31:12 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 383, MENU_NAME = '新增', PERMS = 'mydept:add', TYPE = '1', MODIFY_TIME = '2020-08-05T10:31:12.782+0800' WHERE MENU_ID = 384;
2020-08-05 10:31:12.793 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 10:31:12 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=384, parentId=383, menuName=新增, url=null, perms=mydept:add, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:31:12 CST 2020)"', '192.168.1.113', '2020-08-05T10:31:12.787+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:31:12.800 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:31:12 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:31:17.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:32:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:32:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 10:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:32:00.021+0800');
2020-08-05 10:32:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:32:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:32:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:32:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 10:32:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T10:32:10.016+0800');
2020-08-05 10:32:10.629 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 383, MENU_NAME = '查询', PERMS = 'mydept:search', TYPE = '1', MODIFY_TIME = '2020-08-05T10:32:10.627+0800' WHERE MENU_ID = 387;
2020-08-05 10:32:10.648 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 16, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=387, parentId=383, menuName=查询, url=null, perms=mydept:search, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 10:32:10 CST 2020)"', '192.168.1.113', '2020-08-05T10:32:10.643+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:32:10.654 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:32:12.089 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:32:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:32:12.092 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:32:12 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:32:12.096 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:32:12 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:32:17.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:32:20.434 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T10:32:20.432+0800' WHERE ROLE_ID = 82;
2020-08-05 10:32:20.437 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 10:32:20.457 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 10:32:20.460 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 10:32:20.463 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 10:32:20.472 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 35, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 10:32:20 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,385,387,384,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T10:32:20.466+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:32:20.498 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:32:20.501 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:32:20 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:32:21.773 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:32:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:32:21.813 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:32:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:32:21.815 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:32:21 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:32:21.818 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:32:21 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:32:23.454 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:32:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:32:23.455 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:32:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:33:00.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:33:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 10:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:33:00.018+0800');
2020-08-05 10:33:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:33:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:33:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:33:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:33:10.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 10:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T10:33:10.017+0800');
2020-08-05 10:33:17.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:33:44.401 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:33:44 | 耗时 0 ms | SQL 语句：
INSERT INTO a_mydept (name, head, address, category, state, creator, create_date, modifier, mod_date) VALUES ('管理部', '打春', '北京', 1, 1, '1', '2020-08-05T10:33:44.399', '1', '2020-08-05T10:33:44.399');
2020-08-05 10:33:44.423 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:33:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:33:44.425 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:33:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:33:46.602 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:33:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:33:46.655 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:33:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:33:46.657 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:33:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:33:59.161 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:33:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 10:33:59.163 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:33:59 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:34:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:34:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 10:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:34:00.020+0800');
2020-08-05 10:34:01.419 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:34:01 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:34:10.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:34:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:34:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:34:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:34:10.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:34:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 10:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T10:34:10.010+0800');
2020-08-05 10:34:16.495 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:34:16 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, PERMS, TYPE, CREATE_TIME) VALUES (383, '修改', 'mydept:mod', '1', '2020-08-05T10:34:16.492+0800');
2020-08-05 10:34:16.511 febs [aps-Async-Thread4] INFO  p6spy - 2020-08-05 10:34:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 15, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=396, parentId=383, menuName=修改, url=null, perms=mydept:mod, icon=null, type=1, orderNum=null, createTime=Wed Aug 05 10:34:16 CST 2020, modifyTime=null)"', '192.168.1.113', '2020-08-05T10:34:16.507+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:34:16.520 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:34:16 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:34:17.959 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:34:17.981 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:34:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:34:17.984 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:34:17 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:34:17.987 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:34:17 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:34:23.025 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T10:34:23.023+0800' WHERE ROLE_ID = 82;
2020-08-05 10:34:23.028 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 10:34:23.047 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 10:34:23.050 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 10:34:23.053 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 10:34:23.061 febs [aps-Async-Thread5] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 34, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 10:34:23 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T10:34:23.056+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 10:34:23.086 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:34:23.088 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:34:23 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:34:24.386 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:34:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:34:24.427 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:34:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:34:24.430 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:34:24 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:34:24.433 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:34:24 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:34:25.765 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:34:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:34:25.767 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:34:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:34:27.253 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:34:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-05 10:34:40.139 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:34:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:34:40.141 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:34:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:34:59.147 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:34:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:34:59.198 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:34:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:34:59.200 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:34:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:35:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:35:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:35:00.020+0800');
2020-08-05 10:35:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:35:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:35:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:35:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:35:10 | 耗时 4 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:35:10.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 10:35:10.052 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T10:35:10.018+0800');
2020-08-05 10:35:17.963 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:35:43.679 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:35:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:35:43.731 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:35:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:35:43.733 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:35:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:36:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:36:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:36:00.018+0800');
2020-08-05 10:36:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:36:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:36:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:36:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:36:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 10:36:10.045 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T10:36:10.009+0800');
2020-08-05 10:36:17.967 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:36:22.231 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:36:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:36:22.289 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:36:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:36:22.291 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:36:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:36:39.768 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:36:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:36:39.818 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:36:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:36:39.820 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:36:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:37:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:37:00.021+0800');
2020-08-05 10:37:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:37:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:37:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:37:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:37:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:37:10.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T10:37:10.016+0800');
2020-08-05 10:37:13.979 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:37:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:13.980 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:37:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:14.969 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:37:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:14.970 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:37:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:15.471 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:37:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:15.473 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:37:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:16.151 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:16.153 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:16.360 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:16.362 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:16.832 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:16.833 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:37:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:17.951 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:37:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:17.953 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:37:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:17.967 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:37:19.193 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:37:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:19.195 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:19.656 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:37:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:19.658 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:37:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:24.260 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:37:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:24.262 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:37:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:28.787 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:37:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:37:28.789 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:37:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:37:55.957 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:37:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:37:55.960 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:37:55 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:37:55.965 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:37:55 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:38:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:38:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:38:00.018+0800');
2020-08-05 10:38:00.793 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:38:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:38:00.836 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:38:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:38:00.838 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:38:00 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:38:00.842 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:38:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:38:06.420 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:38:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ) TOTAL;
2020-08-05 10:38:06.423 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:38:06 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:38:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:38:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:38:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:38:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:38:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T10:38:10.017+0800');
2020-08-05 10:38:17.968 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:38:20.928 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:38:20 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:38:42.919 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:38:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ) TOTAL;
2020-08-05 10:38:42.921 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:38:42 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:39:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:39:00.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:39:00.046+0800');
2020-08-05 10:39:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:39:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:39:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:39:10.059 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-05 10:39:10.062 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-05T10:39:10.020+0800');
2020-08-05 10:39:17.970 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:40:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:40:00.020 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:40:00.018+0800');
2020-08-05 10:40:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:40:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:40:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:40:10.040 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 10:40:10.042 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T10:40:10.016+0800');
2020-08-05 10:40:17.972 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:41:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:41:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 10:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:41:00.018+0800');
2020-08-05 10:41:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:41:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:41:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:41:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:41:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:41:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 10:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T10:41:10.017+0800');
2020-08-05 10:41:17.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:42:00.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:42:00.012 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 10:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:42:00.009+0800');
2020-08-05 10:42:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:42:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:42:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:42:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 10:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T10:42:10.019+0800');
2020-08-05 10:42:17.975 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:42:30.954 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:42:30 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:42:31.027 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:42:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 10:42:31.030 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:42:31 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 10:42:31.033 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:42:31 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 10:42:33.324 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:42:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:42:33.325 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:42:52.738 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:42:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:42:52.740 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:42:53.576 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:42:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:42:53.578 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:42:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:43:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:43:00.013 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 10:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:43:00.009+0800');
2020-08-05 10:43:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:43:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:43:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 10:43:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 10:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T10:43:10.017+0800');
2020-08-05 10:43:17.977 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:44:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:44:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 10:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:44:00.018+0800');
2020-08-05 10:44:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:44:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:44:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:44:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:44:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:44:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 10:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T10:44:10.017+0800');
2020-08-05 10:44:17.980 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:45:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:45:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:45:00.018+0800');
2020-08-05 10:45:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:45:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:45:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:45:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:45:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 10:45:10.045 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T10:45:10.017+0800');
2020-08-05 10:45:17.983 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:46:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:46:00.014 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:46:00.011+0800');
2020-08-05 10:46:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:46:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:46:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:46:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T10:46:10.017+0800');
2020-08-05 10:46:17.985 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:47:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:47:00.013 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:47:00.010+0800');
2020-08-05 10:47:10.006 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:47:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:47:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:47:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:47:10.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 10:47:10.040 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T10:47:10.006+0800');
2020-08-05 10:47:17.986 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:47:35.112 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:47:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:47:35.114 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:47:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:48:00.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:48:00.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:48:00.045+0800');
2020-08-05 10:48:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:48:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:48:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:48:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T10:48:10.018+0800');
2020-08-05 10:48:17.989 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:49:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:49:00.016 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:49:00.012+0800');
2020-08-05 10:49:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:49:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:49:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:49:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:49:10.066 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 10:49:10.068 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T10:49:10.041+0800');
2020-08-05 10:49:17.993 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:50:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:50:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:50:00.019+0800');
2020-08-05 10:50:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:50:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:50:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:50:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:50:10.055 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-05 10:50:10.058 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-05T10:50:10.016+0800');
2020-08-05 10:50:17.997 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:50:47.948 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:50:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:50:48.041 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:50:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:50:48.043 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:50:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:50:56.441 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:50:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:50:56.442 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:50:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:51:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:51:00.016 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 10:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:51:00.011+0800');
2020-08-05 10:51:10.006 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:51:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:51:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:51:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:51:10.028 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 10:51:10.031 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 10:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T10:51:10.006+0800');
2020-08-05 10:51:17.999 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:51:49.012 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 1 ms | SQL 语句：
DELETE FROM a_mydept WHERE id = 5;
2020-08-05 10:51:49.040 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:51:49.041 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:51:49.052 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 0 ms | SQL 语句：
DELETE FROM a_mydept WHERE id = 5;
2020-08-05 10:51:49.090 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:51:49.092 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:51:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:52:00.046 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 10:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:52:00.044+0800');
2020-08-05 10:52:01.358 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:52:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:01.360 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:52:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:02.182 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:02.183 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:02.637 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:02.639 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:02.671 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:02.673 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:02.942 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:02.943 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:52:02 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:03.270 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:03.271 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:03.303 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:03.304 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:03.798 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:03.799 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:52:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:04.710 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:52:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:04.712 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 10:52:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:05.302 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:05.304 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:52:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:05.943 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:05.945 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 10:52:05 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:06.221 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:52:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:06.223 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 10:52:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:06.678 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:52:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:06.679 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:52:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:07.310 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:52:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:07.312 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 10:52:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:07.653 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:52:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:07.655 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:52:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:08.553 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:52:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:08.554 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:52:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:08.957 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:52:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:52:08.959 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:52:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:52:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:52:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:52:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:52:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:52:10.034 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:52:10.037 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 10:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T10:52:10.007+0800');
2020-08-05 10:52:18.003 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596593054144_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:53:00.487 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 4552 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 10:53:00.491 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 10:53:02.547 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 10:53:02.549 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 10:53:02.623 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-08-05 10:53:03.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8dda0347] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$244b9276] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$84409a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bcf95ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@46c10083' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e1cdfd62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:03.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 10:53:04.288 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 10:53:04.348 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 10:53:04.363 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 10:53:04.363 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 10:53:04.376 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 10:53:04.508 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 10:53:04.508 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3949 ms
2020-08-05 10:53:04.855 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 10:53:04.863 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 10:53:05.333 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 10:53:05.333 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 10:53:05.333 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 10:53:05.333 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 10:53:05.810 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 10:53:07.659 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 10:53:07.690 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 10:53:07.701 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 10:53:07.701 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 10:53:07.704 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 10:53:07.706 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 10:53:07.707 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596595987691'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 10:53:07.707 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 10:53:07.707 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 10:53:07.708 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@45b8bbbf
2020-08-05 10:53:07.787 febs [main] INFO  p6spy - 2020-08-05 10:53:07 | 耗时 3 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 10:53:09.454 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 10:53:09.684 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 10:53:09.754 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17c34e62, org.springframework.security.web.context.SecurityContextPersistenceFilter@dd07be8, org.springframework.security.web.header.HeaderWriterFilter@5296f00c, org.springframework.security.web.authentication.logout.LogoutFilter@3c68e82, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e9bd2c8, org.springframework.security.web.session.ConcurrentSessionFilter@4af606e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54d2f5d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bde9a22, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3a5e4f32, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@239d73ff, org.springframework.security.web.session.SessionManagementFilter@5487a8f1, org.springframework.security.web.access.ExceptionTranslationFilter@72bce309, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@337cb81d]
2020-08-05 10:53:09.804 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 10:53:09.820 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 10:53:09.822 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 10:53:10.216 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 10:53:10.924 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 10:53:10.939 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 10:53:11.003 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 10:53:11.024 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 10:53:11.038 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 10:53:11.068 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 10:53:11.072 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.422 seconds (JVM running for 12.377)
2020-08-05 10:53:11.094 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 10:53:11.094 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 10:53:11.094 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 10:53:11.094 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 10:53:11.094 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 10:53:11.668 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 10:53:11.668 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 10:53:11.684 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-05 10:53:11 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 10:53:11.684 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 10:53:12.025 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 10:53:12.035 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 10:53:12.035 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596593054144"'s failed in-progress jobs.
2020-08-05 10:53:12.041 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 10:53:12.054 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596595987691 started.
2020-08-05 10:53:12.060 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-05 10:53:12.127 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:53:19.777 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:EBF6A09782CA173681574E379891E833
2020-08-05 10:53:22.756 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:53:22 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 10:53:22.839 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:53:22 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 10:53:22.854 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:53:22 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 10:53:23.284 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 10:53:23.438 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T10:53:23.395+0800' WHERE (USERNAME = 'admin');
2020-08-05 10:53:23.452 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 10:53:23.456 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 10:53:23.460 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 10:53:23.466 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 10:53:23.470 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 10:53:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 10:53:26.762 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:53:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:53:26.777 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 10:53:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:53:42.849 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:53:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:53:42.852 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 10:53:42 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:53:53.126 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:53:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:53:53.128 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 10:53:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 10:54:00.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:54:00.052 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 10:54:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T10:54:00.036+0800');
2020-08-05 10:54:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:54:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:54:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:54:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:54:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:54:10.077 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-05 10:54:10.081 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 10:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 56, '2020-08-05T10:54:10.021+0800');
2020-08-05 10:54:12.128 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:55:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:55:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 10:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:55:00.021+0800');
2020-08-05 10:55:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:55:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:55:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:55:10.052 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 10:55:10.056 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 10:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-05T10:55:10.012+0800');
2020-08-05 10:55:12.129 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:56:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:56:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 10:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:56:00.021+0800');
2020-08-05 10:56:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:56:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:56:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:56:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 10:56:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 10:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T10:56:10.020+0800');
2020-08-05 10:56:12.133 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:57:00.015 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:57:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 10:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T10:57:00.015+0800');
2020-08-05 10:57:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:57:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:57:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:57:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:57:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:57:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 10:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T10:57:10.017+0800');
2020-08-05 10:57:12.135 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:57:40.569 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:57:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:57:40.572 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 10:57:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,5;
2020-08-05 10:58:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:58:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 10:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T10:58:00.021+0800');
2020-08-05 10:58:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:58:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:58:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:58:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:58:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 10:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T10:58:10.016+0800');
2020-08-05 10:58:12.139 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 10:58:22.596 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:58:22 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 10:58:22.598 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 10:58:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,5;
2020-08-05 10:59:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 10:59:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 10:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T10:59:00.022+0800');
2020-08-05 10:59:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 10:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 10:59:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 10:59:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 10:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 10:59:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 10:59:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 10:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T10:59:10.018+0800');
2020-08-05 10:59:12.143 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:00:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:00:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 11:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:00:00.023+0800');
2020-08-05 11:00:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:00:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:00:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:00:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 11:00:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 11:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T11:00:10.018+0800');
2020-08-05 11:00:12.184 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596595987691_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:00:49.333 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 12000 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 11:00:49.336 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 11:00:50.845 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 11:00:50.847 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 11:00:50.923 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-08-05 11:00:51.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$677efec6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fdf08df5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e1e90524] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$969e562f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7243145f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bb72f8e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:51.733 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:00:52.095 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 11:00:52.109 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 11:00:52.120 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 11:00:52.120 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 11:00:52.127 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 11:00:52.238 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 11:00:52.238 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2835 ms
2020-08-05 11:00:52.572 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 11:00:52.580 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 11:00:53.074 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 11:00:53.074 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 11:00:53.074 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 11:00:53.074 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 11:00:53.563 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 11:00:55.530 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 11:00:55.561 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 11:00:55.572 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 11:00:55.572 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 11:00:55.576 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 11:00:55.577 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 11:00:55.578 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596596455561'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 11:00:55.578 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 11:00:55.578 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 11:00:55.579 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3e2c8ef
2020-08-05 11:00:55.652 febs [main] INFO  p6spy - 2020-08-05 11:00:55 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 11:00:57.349 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 11:00:57.589 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 11:00:57.589 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 11:00:57.589 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:00:57.589 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 11:00:57.590 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 11:00:57.659 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@446a5aa5, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ab7f649, org.springframework.security.web.header.HeaderWriterFilter@1c43e84e, org.springframework.security.web.authentication.logout.LogoutFilter@6f67ece5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4d2bc56a, org.springframework.security.web.session.ConcurrentSessionFilter@2573b149, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3093b9ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5487a8f1, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3c82bac3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@628bcf2c, org.springframework.security.web.session.SessionManagementFilter@21ce2e4d, org.springframework.security.web.access.ExceptionTranslationFilter@81dfdee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@694b1ddb]
2020-08-05 11:00:57.706 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 11:00:57.723 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 11:00:57.724 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 11:00:58.088 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 11:00:58.704 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 11:00:58.719 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 11:00:58.781 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 11:00:58.801 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 11:00:58.815 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 11:00:58.847 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 11:00:58.852 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.332 seconds (JVM running for 11.35)
2020-08-05 11:00:58.875 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 11:00:58.875 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 11:00:58.875 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 11:00:58.875 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 11:00:58.875 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 11:00:59.497 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 11:00:59.497 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 11:00:59.512 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-05 11:00:59 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 11:00:59.513 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 11:00:59.817 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 11:00:59.832 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 11:00:59.832 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596595987691"'s failed in-progress jobs.
2020-08-05 11:00:59.841 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 11:00:59.846 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596596455561 started.
2020-08-05 11:00:59.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596455561_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:01:00.035 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:01:00.083 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T11:01:00.035+0800');
2020-08-05 11:01:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:01:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:01:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:01:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:01:10.108 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:01:10.110 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-08-05 11:01:10.115 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 89, '2020-08-05T11:01:10.021+0800');
2020-08-05 11:01:11.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596455561_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:01:19.656 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:03484B2C98637174B6333AEFB25BB3A6
2020-08-05 11:01:23.108 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:23 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 11:01:23.278 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:23 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 11:01:23.294 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:23 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 11:01:23.884 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:01:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:01:24.052 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T11:01:24.043+0800' WHERE (USERNAME = 'admin');
2020-08-05 11:01:24.066 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 11:01:24.069 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:01:24.073 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:01:24.081 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 11:01:24.087 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:01:24 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 11:01:27.167 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:01:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-05 11:02:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:02:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:02:00.014+0800');
2020-08-05 11:02:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:02:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:02:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:02:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-05 11:02:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-05T11:02:10.020+0800');
2020-08-05 11:02:11.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596455561_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:02:56.242 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8384 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 11:02:56.247 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 11:02:58.248 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 11:02:58.252 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 11:02:58.352 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80ms. Found 0 repository interfaces.
2020-08-05 11:02:59.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9ed743fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.178 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3548d32b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$19414a5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cdf69b65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b950f82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f2cb3e17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:02:59.700 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 11:02:59.714 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 11:02:59.723 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 11:02:59.723 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 11:02:59.733 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 11:02:59.882 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 11:02:59.882 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3554 ms
2020-08-05 11:03:00.220 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 11:03:00.228 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 11:03:00.691 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 11:03:00.691 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 11:03:00.692 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 11:03:00.692 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 11:03:01.190 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 11:03:03.140 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 11:03:03.170 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 11:03:03.181 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 11:03:03.181 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 11:03:03.185 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 11:03:03.186 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 11:03:03.187 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596596583171'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 11:03:03.187 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 11:03:03.187 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 11:03:03.189 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3359c3f6
2020-08-05 11:03:03.258 febs [main] INFO  p6spy - 2020-08-05 11:03:03 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 11:03:05.009 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 11:03:05.258 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 11:03:05.259 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 11:03:05.259 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 11:03:05.332 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c4aa701, org.springframework.security.web.context.SecurityContextPersistenceFilter@4679554d, org.springframework.security.web.header.HeaderWriterFilter@4b916cc2, org.springframework.security.web.authentication.logout.LogoutFilter@21ce2e4d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@253b1cbd, org.springframework.security.web.session.ConcurrentSessionFilter@20b67366, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49353d43, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57df09a7, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@28c7fd9d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f36267d, org.springframework.security.web.session.SessionManagementFilter@323eecf8, org.springframework.security.web.access.ExceptionTranslationFilter@1344f7fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c8b37a8]
2020-08-05 11:03:05.385 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 11:03:05.400 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 11:03:05.401 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 11:03:05.769 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 11:03:06.375 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 11:03:06.389 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 11:03:06.446 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 11:03:06.466 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 11:03:06.483 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 11:03:06.512 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 11:03:06.515 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.341 seconds (JVM running for 12.425)
2020-08-05 11:03:06.538 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 11:03:06.538 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 11:03:06.539 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 11:03:06.539 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 11:03:06.539 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 11:03:07.067 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 11:03:07.067 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 11:03:07.083 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 11:03:07 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 11:03:07.086 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-05 11:03:07.468 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 11:03:07.480 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 11:03:07.480 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596596455561"'s failed in-progress jobs.
2020-08-05 11:03:07.487 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 11:03:07.492 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596596583171 started.
2020-08-05 11:03:07.499 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:03:07.543 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:03:07.598 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:03:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T11:03:07.543+0800');
2020-08-05 11:03:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:03:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:03:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:03:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:03:10.109 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:03:10.112 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：92 毫秒
2020-08-05 11:03:10.116 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:03:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 92, '2020-08-05T11:03:10.020+0800');
2020-08-05 11:03:19.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:03:20.046 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1D3BE971670AF69CCE75942C17B97B30
2020-08-05 11:03:23.054 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 11:03:23.166 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 11:03:23.178 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 11:03:23.678 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:03:23.818 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T11:03:23.810+0800' WHERE (USERNAME = 'admin');
2020-08-05 11:03:23.831 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 11:03:23.835 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:03:23.839 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:03:23.845 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 11:03:23.851 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 11:03:26.355 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:03:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:03:26.369 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:03:26 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:03:40.270 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:03:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 11:03:40.274 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:03:40 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 11:03:40.276 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:03:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 11:03:48.703 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:03:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ) TOTAL;
2020-08-05 11:03:48.706 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:03:48 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 AND r.role_name LIKE CONCAT('%', 'admin', '%') GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 11:03:52.522 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:03:52 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 11:03:52.524 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:03:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 11:03:57.530 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 11:03:57.533 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:03:57 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 11:04:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:04:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:04:00.023+0800');
2020-08-05 11:04:04.352 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:04:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 11:04:04.354 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:04:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 11:04:06.506 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:04:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 11:04:06.508 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:04:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 11:04:07.859 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:04:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_send_command;
2020-08-05 11:04:07.861 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:04:07.869 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20009');
2020-08-05 11:04:07.877 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:04:07 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20001');
2020-08-05 11:04:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:04:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:04:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:04:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:04:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 11:04:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-05T11:04:10.021+0800');
2020-08-05 11:04:13.456 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:04:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_send_command;
2020-08-05 11:04:13.459 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:04:13 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:04:13.464 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:04:13 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20009');
2020-08-05 11:04:13.469 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:04:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20001');
2020-08-05 11:04:19.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:05:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:05:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:05:00.023+0800');
2020-08-05 11:05:00.393 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:05:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:05:00.395 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:05:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:05:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:05:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:05:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:05:10.052 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 11:05:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-05T11:05:10.018+0800');
2020-08-05 11:05:19.501 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:05:33.157 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:05:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:05:33.219 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:05:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:05:33.221 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:05:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:05:39.377 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:05:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:05:39.379 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:05:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:06:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:06:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:06:00.022+0800');
2020-08-05 11:06:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:06:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:06:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:06:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:06:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 11:06:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T11:06:10.017+0800');
2020-08-05 11:06:14.673 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:06:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:06:14.735 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:06:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:06:14.738 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:06:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:06:19.505 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:06:20.761 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:06:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:06:20.763 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:06:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:06:37.159 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:06:37 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:06:37.273 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:06:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:06:37.275 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:06:37 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:06:47.602 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:06:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:06:47.604 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:06:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:07:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:07:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 11:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:07:00.021+0800');
2020-08-05 11:07:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:07:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:07:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:07:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 11:07:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 11:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T11:07:10.019+0800');
2020-08-05 11:07:19.506 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596583171_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:08:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:08:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 11:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:08:00.012+0800');
2020-08-05 11:08:10.012 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:08:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:08:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:08:10.052 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 11:08:10.056 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 11:08:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-05T11:08:10.012+0800');
2020-08-05 11:08:20.589 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11352 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 11:08:20.592 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 11:08:22.123 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 11:08:22.125 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 11:08:22.200 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-08-05 11:08:22.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a5211b1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.797 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b92aa4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$1f8b217d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d4407288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@70b2fa10' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f915153a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:22.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:08:23.307 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 11:08:23.321 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 11:08:23.329 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 11:08:23.329 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 11:08:23.336 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 11:08:23.439 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 11:08:23.440 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2784 ms
2020-08-05 11:08:23.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 11:08:23.763 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 11:08:24.252 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 11:08:24.252 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 11:08:24.252 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 11:08:24.252 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 11:08:24.764 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 11:08:26.633 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 11:08:26.666 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 11:08:26.677 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 11:08:26.678 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 11:08:26.681 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 11:08:26.683 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 11:08:26.684 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596596906667'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 11:08:26.684 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 11:08:26.684 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 11:08:26.685 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@275902e1
2020-08-05 11:08:26.757 febs [main] INFO  p6spy - 2020-08-05 11:08:26 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 11:08:28.503 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 11:08:28.740 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 11:08:28.741 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 11:08:28.741 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 11:08:28.741 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 11:08:28.809 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76104df5, org.springframework.security.web.context.SecurityContextPersistenceFilter@4727e5fc, org.springframework.security.web.header.HeaderWriterFilter@56fa0ef, org.springframework.security.web.authentication.logout.LogoutFilter@44f23927, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@366b4a7b, org.springframework.security.web.session.ConcurrentSessionFilter@220be130, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e5c7588, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d00b469, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@283ecb4b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61246109, org.springframework.security.web.session.SessionManagementFilter@62ee1c89, org.springframework.security.web.access.ExceptionTranslationFilter@1479ed5a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@628bcf2c]
2020-08-05 11:08:28.859 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 11:08:28.873 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 11:08:28.875 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 11:08:29.242 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 11:08:29.855 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 11:08:29.870 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 11:08:29.934 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 11:08:29.976 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 11:08:29.990 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 11:08:30.021 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 11:08:30.025 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.189 seconds (JVM running for 11.166)
2020-08-05 11:08:30.049 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 11:08:30.049 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 11:08:30.049 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 11:08:30.049 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 11:08:30.049 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 11:08:30.563 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 11:08:30.563 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 11:08:30.578 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 11:08:30 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 11:08:30.578 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-05 11:08:30.977 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 11:08:30.987 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 11:08:30.987 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596596583171"'s failed in-progress jobs.
2020-08-05 11:08:30.993 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596596906667 started.
2020-08-05 11:08:30.998 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596906667_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:08:36.471 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:992AA552F427E31CC4F131AF350D8578
2020-08-05 11:08:39.222 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 11:08:39.308 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 11:08:39.321 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 11:08:39.716 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:08:39.870 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T11:08:39.831+0800' WHERE (USERNAME = 'admin');
2020-08-05 11:08:39.883 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 11:08:39.887 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:08:39.890 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:08:39.897 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 11:08:39.901 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:08:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 11:08:41.202 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:08:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:08:41.215 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:08:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:08:41.222 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:08:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:08:41.225 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:08:41 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:08:53.452 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:08:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:08:53.455 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:08:53 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:08:53.460 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:08:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:08:53.463 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:08:53 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:09:00.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:09:00.054 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-05T11:09:00.036+0800');
2020-08-05 11:09:10.025 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:09:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:09:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:09:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:09:10.079 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-05 11:09:10.083 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-05T11:09:10.025+0800');
2020-08-05 11:09:18.997 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596906667_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:10:00.027 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:10:00.035 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:10:00.027+0800');
2020-08-05 11:10:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:10:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:10:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:10:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 11:10:10.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T11:10:10.022+0800');
2020-08-05 11:10:19.001 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596906667_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:11:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:11:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:11:00.024+0800');
2020-08-05 11:11:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:11:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:11:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:11:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 11:11:10.062 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T11:11:10.023+0800');
2020-08-05 11:11:19.001 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596596906667_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:11:38.995 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15020 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 11:11:38.998 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 11:11:41.143 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 11:11:41.147 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 11:11:41.268 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99ms. Found 0 repository interfaces.
2020-08-05 11:11:42.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b4e914f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b5aa41f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$2f531b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e4086c59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@113ee1ce' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8dd0f0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:11:42.732 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 11:11:42.746 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 11:11:42.756 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 11:11:42.756 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 11:11:42.763 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 11:11:42.875 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 11:11:42.875 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3788 ms
2020-08-05 11:11:43.231 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 11:11:43.239 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 11:11:43.776 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 11:11:43.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 11:11:43.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 11:11:43.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 11:11:44.274 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 11:11:46.160 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 11:11:46.193 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 11:11:46.205 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 11:11:46.205 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 11:11:46.209 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 11:11:46.211 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 11:11:46.212 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596597106194'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 11:11:46.212 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 11:11:46.212 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 11:11:46.214 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@57a982f9
2020-08-05 11:11:46.290 febs [main] INFO  p6spy - 2020-08-05 11:11:46 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 11:11:48.063 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 11:11:48.402 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 11:11:48.402 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 11:11:48.403 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 11:11:48.486 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e66bf2d, org.springframework.security.web.context.SecurityContextPersistenceFilter@64d53f0d, org.springframework.security.web.header.HeaderWriterFilter@43cbafa6, org.springframework.security.web.authentication.logout.LogoutFilter@57e57dc5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@74a03bd5, org.springframework.security.web.session.ConcurrentSessionFilter@6c8ad6d7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b916cc2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69419d59, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@75c8d8e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7112fa5, org.springframework.security.web.session.SessionManagementFilter@64fc6470, org.springframework.security.web.access.ExceptionTranslationFilter@1760e688, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78508e6b]
2020-08-05 11:11:48.552 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 11:11:48.572 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 11:11:48.574 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 11:11:49.036 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 11:11:49.915 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 11:11:49.930 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 11:11:50.009 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 11:11:50.035 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 11:11:50.052 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 11:11:50.087 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 11:11:50.092 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.859 seconds (JVM running for 13.258)
2020-08-05 11:11:50.120 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 11:11:50.120 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 11:11:50.120 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 11:11:50.120 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 11:11:50.121 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 11:11:50.326 febs [http-nio-8099-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 11:11:50.326 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 11:11:50.343 febs [http-nio-8099-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-05 11:11:50.413 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:12DA2423D7FE9BE2E364322CC0FAB048
2020-08-05 11:11:50.504 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 11:11:50 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 11:11:51.037 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 11:11:51.053 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596597106194 started.
2020-08-05 11:11:51.061 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:11:56.657 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:11:56 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 11:11:56.738 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:11:56 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 11:11:56.750 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:11:56 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 11:11:57.140 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:11:57.288 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T11:11:57.247+0800' WHERE (USERNAME = 'admin');
2020-08-05 11:11:57.300 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 11:11:57.305 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:11:57.309 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:11:57.315 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 11:11:57.319 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:11:57 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 11:11:58.954 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:11:58 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:11:58.965 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:11:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:11:58.973 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:11:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:11:58.975 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:11:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:12:00.037 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:12:00.052 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T11:12:00.037+0800');
2020-08-05 11:12:06.054 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 11:12:06.054 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596596906667"'s failed in-progress jobs.
2020-08-05 11:12:08.862 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:12:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:12:08.864 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:12:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:12:08.869 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:12:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:12:08.872 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:12:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:12:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:12:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:12:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:12:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:12:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:12:10.080 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-05 11:12:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 56, '2020-08-05T11:12:10.024+0800');
2020-08-05 11:12:15.058 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:13:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:13:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:13:00.024+0800');
2020-08-05 11:13:10.099 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:13:10.112 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:13:10 | 耗时 5 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:13:10.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:13:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:13:10.164 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:13:10.168 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：69 毫秒
2020-08-05 11:13:10.174 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 69, '2020-08-05T11:13:10.099+0800');
2020-08-05 11:13:15.060 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:14:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:14:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:14:00.021+0800');
2020-08-05 11:14:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:14:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:14:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:14:10.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 11:14:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T11:14:10.018+0800');
2020-08-05 11:14:15.062 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597106194_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:15:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:15:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:15:00.022+0800');
2020-08-05 11:15:07.958 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13024 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 11:15:07.962 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 11:15:09.431 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 11:15:09.434 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 11:15:09.506 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60ms. Found 0 repository interfaces.
2020-08-05 11:15:10.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$31f1476f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.106 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c862d69e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$ac5b4dcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$61109ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b325930' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$85e5418a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 11:15:10.646 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 11:15:10.660 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 11:15:10.668 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 11:15:10.668 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 11:15:10.675 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 11:15:10.777 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 11:15:10.778 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2748 ms
2020-08-05 11:15:11.104 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 11:15:11.112 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 11:15:11.579 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 11:15:11.580 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 11:15:11.580 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 11:15:11.580 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 11:15:12.051 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 11:15:13.894 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 11:15:13.924 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 11:15:13.935 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 11:15:13.935 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 11:15:13.939 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 11:15:13.940 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 11:15:13.941 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596597313925'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 11:15:13.941 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 11:15:13.941 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 11:15:13.943 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2f75a9b1
2020-08-05 11:15:14.013 febs [main] INFO  p6spy - 2020-08-05 11:15:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 11:15:15.684 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 11:15:15.920 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 11:15:15.921 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 11:15:15.921 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 11:15:15.921 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 11:15:15.988 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78508e6b, org.springframework.security.web.context.SecurityContextPersistenceFilter@42db955e, org.springframework.security.web.header.HeaderWriterFilter@27d6267e, org.springframework.security.web.authentication.logout.LogoutFilter@186d6033, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@228958a, org.springframework.security.web.session.ConcurrentSessionFilter@1760e688, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c8ad6d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b916cc2, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@43de9fc9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1bde9a22, org.springframework.security.web.session.SessionManagementFilter@f96654, org.springframework.security.web.access.ExceptionTranslationFilter@5f35370b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b8fcdf2]
2020-08-05 11:15:16.035 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 11:15:16.050 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 11:15:16.051 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 11:15:16.432 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 11:15:17.036 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 11:15:17.050 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 11:15:17.113 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 11:15:17.133 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 11:15:17.147 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 11:15:17.193 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 11:15:17.197 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.068 seconds (JVM running for 10.991)
2020-08-05 11:15:17.221 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 11:15:17.221 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 11:15:17.221 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 11:15:17.221 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 11:15:17.221 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 11:15:17.901 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 11:15:17.902 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 11:15:17.918 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 11:15:17 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 11:15:17.920 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-05 11:15:18.134 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 11:15:18.145 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 11:15:18.146 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596597106194"'s failed in-progress jobs.
2020-08-05 11:15:18.151 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 11:15:18.160 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596597313925 started.
2020-08-05 11:15:18.166 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:15:21.796 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:AF5C86BF65220292BCD8A4B68ABEE65B
2020-08-05 11:15:24.940 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:15:24 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 11:15:25.023 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 11:15:25.035 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 11:15:25.425 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:15:25.575 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T11:15:25.536+0800' WHERE (USERNAME = 'admin');
2020-08-05 11:15:25.586 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 11:15:25.591 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:15:25.594 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 11:15:25.600 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 11:15:25.605 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:15:25 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 11:15:27.085 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:15:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:15:27.096 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:15:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:15:27.104 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:15:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:15:27.106 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:15:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:15:33.540 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:15:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:15:33.545 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:15:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:16:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:16:00.066 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 7, '2020-08-05T11:16:00.044+0800');
2020-08-05 11:16:10.025 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:16:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:16:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:16:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:16:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:16:10.080 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-05 11:16:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-05T11:16:10.025+0800');
2020-08-05 11:16:18.167 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:16:20.025 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:16:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:16:20.028 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:16:20.033 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:16:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:16:20.035 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:16:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:16:26.528 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:16:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:16:26.531 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:16:26 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:16:26.537 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:16:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:16:26.540 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:16:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:17:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:17:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:17:00.023+0800');
2020-08-05 11:17:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:17:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:17:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:17:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:17:10.060 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-05 11:17:10.064 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-05T11:17:10.021+0800');
2020-08-05 11:17:18.169 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:17:54.212 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:17:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:17:54.380 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:17:54 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:17:54.383 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:17:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:17:54.400 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:17:54 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:17:54.403 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:17:54 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:18:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:18:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:18:00.021+0800');
2020-08-05 11:18:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:18:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:18:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:18:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:18:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 11:18:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T11:18:10.023+0800');
2020-08-05 11:18:18.170 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:19:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:19:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:19:00.023+0800');
2020-08-05 11:19:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:19:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:19:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:19:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:19:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 11:19:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T11:19:10.021+0800');
2020-08-05 11:19:18.173 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:20:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:20:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 11:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:20:00.024+0800');
2020-08-05 11:20:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:20:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:20:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:20:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:20:10.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 11:20:10.074 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 11:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T11:20:10.040+0800');
2020-08-05 11:20:18.177 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:20:50.882 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:20:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:20:50.949 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:20:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:20:50.951 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:20:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:20:50.955 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:20:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:20:50.957 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:20:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:21:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:21:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 11:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:21:00.022+0800');
2020-08-05 11:21:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:21:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:21:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:21:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:21:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 11:21:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 11:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T11:21:10.019+0800');
2020-08-05 11:21:18.179 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:21:43.602 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:21:43 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:21:43.677 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:21:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:21:43.679 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:21:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:21:43.685 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:21:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:21:43.687 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:21:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:21:51.743 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:21:51 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:21:51.802 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:21:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:21:51.803 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:21:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:21:51.808 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:21:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:21:51.811 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:21:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:22:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 11:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:22:00.023+0800');
2020-08-05 11:22:06.340 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:22:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:22:06.401 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:22:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:06.403 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:06.407 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:22:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:06.409 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:22:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:22:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:22:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:22:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:22:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 11:22:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 11:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T11:22:10.019+0800');
2020-08-05 11:22:18.184 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:22:26.592 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:22:26 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:22:26.658 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:22:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:26.660 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:22:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:26.665 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:22:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:26.667 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:22:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:43.284 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:22:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:22:43.339 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:22:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:43.341 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:22:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:22:43.345 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:22:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:22:43.348 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:22:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:23:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:23:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 11:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:23:00.024+0800');
2020-08-05 11:23:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:23:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:23:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:23:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:23:10.050 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 11:23:10.054 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 11:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-05T11:23:10.017+0800');
2020-08-05 11:23:18.185 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:23:21.398 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:23:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:23:21.482 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:23:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:23:21.484 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:23:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:23:21.488 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:23:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:23:21.490 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:23:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:23:48.404 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:23:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:23:48.471 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:23:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:23:48.473 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:23:48.477 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:23:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:23:48.479 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:23:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:24:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:24:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 11:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:24:00.020+0800');
2020-08-05 11:24:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:24:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:24:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:24:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:24:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 11:24:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 11:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T11:24:10.020+0800');
2020-08-05 11:24:18.187 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:25:00.013 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:25:00.018 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 11:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:25:00.013+0800');
2020-08-05 11:25:03.231 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:25:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:25:03.281 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:25:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:25:03.283 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:25:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:25:03.287 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:25:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:25:03.288 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:25:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:25:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:25:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:25:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:25:10.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 11:25:10.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 11:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T11:25:10.019+0800');
2020-08-05 11:25:18.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:26:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:26:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:26:00.020+0800');
2020-08-05 11:26:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:26:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:26:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:26:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:26:10.049 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 11:26:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T11:26:10.021+0800');
2020-08-05 11:26:18.216 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:27:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:27:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:27:00.022+0800');
2020-08-05 11:27:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:27:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:27:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:27:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 11:27:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T11:27:10.018+0800');
2020-08-05 11:27:18.218 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:28:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:28:00.013 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:28:00.009+0800');
2020-08-05 11:28:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:28:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:28:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:28:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:28:10.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 11:28:10.039 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T11:28:10.009+0800');
2020-08-05 11:28:18.222 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:28:25.622 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:28:25 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:28:25.686 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:28:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:28:25.688 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:28:25.692 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:28:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:28:25.694 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:28:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:29:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:29:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:29:00.021+0800');
2020-08-05 11:29:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:29:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:29:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:29:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 11:29:10.047 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T11:29:10.019+0800');
2020-08-05 11:29:18.224 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:30:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:30:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 11:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:30:00.019+0800');
2020-08-05 11:30:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:30:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:30:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:30:10.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 11:30:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 11:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T11:30:10.020+0800');
2020-08-05 11:30:18.227 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:31:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:31:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 11:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:31:00.022+0800');
2020-08-05 11:31:10.012 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:31:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:31:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:31:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:31:10.037 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 11:31:10.040 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 11:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T11:31:10.012+0800');
2020-08-05 11:31:18.230 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:31:45.477 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:31:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:31:45.536 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:31:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:31:45.538 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:31:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:31:45.541 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:31:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:31:45.543 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:31:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:32:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 11:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:32:00.020+0800');
2020-08-05 11:32:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:32:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:32:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:32:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:32:10.035 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:32:10.038 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 11:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T11:32:10.009+0800');
2020-08-05 11:32:18.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:32:20.031 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:32:20 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:32:20.103 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:32:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:20.105 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:32:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:20.109 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:32:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:20.112 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:32:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:27.941 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:32:27 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:32:28.002 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:32:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:28.004 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:32:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:28.007 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:32:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:28.009 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:32:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:34.519 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:32:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:34.522 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:32:34 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:34.533 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:32:34 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:34.536 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:32:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:40.408 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:32:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:40.410 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:32:40.414 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:32:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:32:40.416 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:32:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:33:00.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:33:00.016 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 11:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:33:00.011+0800');
2020-08-05 11:33:10.008 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:33:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:33:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:33:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:33:10.033 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 11:33:10.036 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 11:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T11:33:10.008+0800');
2020-08-05 11:33:18.233 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:34:00.010 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:34:00.014 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 11:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:34:00.010+0800');
2020-08-05 11:34:10.007 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:34:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:34:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:34:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:34:10.031 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:34:10.033 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 11:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T11:34:10.007+0800');
2020-08-05 11:34:18.237 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:35:00.044 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:35:00.047 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 11:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:35:00.044+0800');
2020-08-05 11:35:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:35:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:35:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:35:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:35:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:35:10.036 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 11:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T11:35:10.008+0800');
2020-08-05 11:35:18.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:36:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:36:00.038 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:36:00.019+0800');
2020-08-05 11:36:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:36:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:36:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:36:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:36:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:36:10.038 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 11:36:10.040 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T11:36:10.007+0800');
2020-08-05 11:36:18.241 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:37:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:37:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:37:00.019+0800');
2020-08-05 11:37:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:37:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:37:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:37:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:37:10.037 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 11:37:10.040 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T11:37:10.008+0800');
2020-08-05 11:37:18.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:38:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:38:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:38:00.022+0800');
2020-08-05 11:38:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:38:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:38:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:38:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:38:10.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:38:10.036 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T11:38:10.007+0800');
2020-08-05 11:38:18.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:38:33.872 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 11:38:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:38:33.948 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:38:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:38:33.950 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:38:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:38:33.954 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:38:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:38:33.956 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:38:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:38:48.423 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:38:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:38:48.426 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:38:48.430 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:38:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 11:38:48.432 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:38:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:39:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:39:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:39:00.018+0800');
2020-08-05 11:39:10.008 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '1');
2020-08-05 11:39:10.012 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '1');
2020-08-05 11:39:10.012 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:39:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:39:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:39:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:39:10.063 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-05 11:39:10.067 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 51, '2020-08-05T11:39:10.012+0800');
2020-08-05 11:39:18.259 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:39:56.309 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:39:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '1');
2020-08-05 11:39:56.313 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:39:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '1');
2020-08-05 11:39:59.880 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:39:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:39:59.882 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:39:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:39:59.886 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:39:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:39:59.888 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:39:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:40:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:40:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 11:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:40:00.019+0800');
2020-08-05 11:40:09.654 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:40:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:40:09.658 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:40:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:40:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:40:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:40:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:40:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:40:10.065 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:40:10.067 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 11:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T11:40:10.041+0800');
2020-08-05 11:40:18.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:40:47.108 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:40:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:40:47.177 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:40:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:40:47.178 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:40:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:40:47.182 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:40:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:40:47.183 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:40:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:41:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:41:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 11:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:41:00.019+0800');
2020-08-05 11:41:05.096 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:41:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:41:05.100 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:41:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '张扬');
2020-08-05 11:41:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:41:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:41:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:41:10.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 11:41:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 11:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T11:41:10.017+0800');
2020-08-05 11:41:18.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:41:40.314 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:41:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:41:40.383 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:41:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:41:40.385 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:41:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:41:40.389 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:41:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:41:40.391 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:41:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:41:47.380 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:41:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '阿萨的');
2020-08-05 11:41:47.384 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 11:41:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '阿萨的');
2020-08-05 11:41:57.937 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:41:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 11:41:57.939 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:41:57 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:41:57.945 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:41:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 11:41:57.947 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:41:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:42:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:42:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 11:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:42:00.020+0800');
2020-08-05 11:42:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:42:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:42:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:42:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:42:10.040 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:42:10.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 11:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T11:42:10.016+0800');
2020-08-05 11:42:16.586 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:42:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:42:16.591 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:42:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:42:18.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:43:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:43:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 11:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:43:00.019+0800');
2020-08-05 11:43:08.711 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:43:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:43:08.769 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:43:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:43:08.770 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:43:08.774 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:43:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:43:08.776 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:43:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:43:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:43:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:43:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 11:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T11:43:10.018+0800');
2020-08-05 11:43:17.328 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:43:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:43:17.331 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:43:17 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:43:17.336 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:43:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:43:17.338 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 11:43:17 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:43:18.268 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:43:37.132 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:43:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:43:37.138 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:43:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:44:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:44:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 11:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:44:00.020+0800');
2020-08-05 11:44:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:44:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:44:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:44:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:44:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 11:44:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 11:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T11:44:10.019+0800');
2020-08-05 11:44:18.271 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:44:33.418 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:44:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:44:33.515 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:44:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:44:33.517 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:44:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:44:33.520 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:44:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:44:33.522 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:44:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:44:43.457 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:44:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:44:43.459 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:44:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:44:43.463 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:44:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:44:43.465 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:44:43 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:44:52.568 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:44:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:44:52.574 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 11:44:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '刘庄');
2020-08-05 11:45:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:45:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 11:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:45:00.022+0800');
2020-08-05 11:45:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:45:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:45:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:45:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 11:45:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 11:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T11:45:10.018+0800');
2020-08-05 11:45:18.274 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:46:00.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:46:00.020 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:46:00.017+0800');
2020-08-05 11:46:03.456 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 11:46:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 11:46:03.640 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:46:03 | 耗时 54 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:46:03.642 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:46:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:46:03.654 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:46:03 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 11:46:03.657 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 11:46:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:46:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:46:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:46:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:46:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T11:46:10.017+0800');
2020-08-05 11:46:11.682 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:46:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:46:11.685 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:46:11 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:46:11.690 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:46:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '刘庄');
2020-08-05 11:46:11.692 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 11:46:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (address = '刘庄') ORDER BY id ASC LIMIT 0,10;
2020-08-05 11:46:18.143 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:46:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '张扬');
2020-08-05 11:46:18.149 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 11:46:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (address = '张扬');
2020-08-05 11:46:18.276 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:46:28.999 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:46:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '张扬');
2020-08-05 11:46:29.003 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 11:46:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬' AND address = '张扬');
2020-08-05 11:47:00.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:47:00.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:47:00.044+0800');
2020-08-05 11:47:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:47:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:47:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:47:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:47:10.068 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:47:10.070 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T11:47:10.044+0800');
2020-08-05 11:47:18.280 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:48:00.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:48:00.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:48:00.047+0800');
2020-08-05 11:48:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:48:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:48:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:48:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:48:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T11:48:10.019+0800');
2020-08-05 11:48:18.282 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:49:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:49:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:49:00.020+0800');
2020-08-05 11:49:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:49:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:49:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:49:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:49:10.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:49:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T11:49:10.018+0800');
2020-08-05 11:49:18.284 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:50:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:50:00.014 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 11:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:50:00.011+0800');
2020-08-05 11:50:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:50:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:50:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 11:50:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 11:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T11:50:10.019+0800');
2020-08-05 11:50:18.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:51:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:51:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 11:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:51:00.018+0800');
2020-08-05 11:51:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:51:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:51:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:51:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:51:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 11:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T11:51:10.019+0800');
2020-08-05 11:51:18.289 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:52:00.010 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:52:00.013 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 11:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:52:00.010+0800');
2020-08-05 11:52:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:52:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:52:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:52:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:52:10.033 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 11:52:10.036 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 11:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T11:52:10.010+0800');
2020-08-05 11:52:18.292 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:53:00.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:53:00.046 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 11:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:53:00.043+0800');
2020-08-05 11:53:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:53:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:53:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:53:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:53:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:53:10.067 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 11:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T11:53:10.041+0800');
2020-08-05 11:53:18.294 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:54:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:54:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 11:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:54:00.019+0800');
2020-08-05 11:54:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:54:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:54:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:54:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:54:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 11:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T11:54:10.018+0800');
2020-08-05 11:54:18.296 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:55:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:55:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 11:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:55:00.019+0800');
2020-08-05 11:55:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:55:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:55:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:55:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:55:10.070 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:55:10.072 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 11:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T11:55:10.044+0800');
2020-08-05 11:55:18.300 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:56:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:56:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 11:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T11:56:00.019+0800');
2020-08-05 11:56:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:56:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:56:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:56:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:56:10.065 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 11:56:10.068 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 11:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T11:56:10.042+0800');
2020-08-05 11:56:18.303 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:57:00.043 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:57:00.045 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 11:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:57:00.043+0800');
2020-08-05 11:57:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:57:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:57:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:57:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:57:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 11:57:10.046 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 11:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T11:57:10.020+0800');
2020-08-05 11:57:18.305 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:58:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:58:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 11:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:58:00.020+0800');
2020-08-05 11:58:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:58:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:58:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:58:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:58:10.063 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 11:58:10.065 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 11:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T11:58:10.041+0800');
2020-08-05 11:58:18.308 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 11:59:00.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 11:59:00.046 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 11:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T11:59:00.043+0800');
2020-08-05 11:59:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 11:59:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 11:59:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 11:59:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 11:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 11:59:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 11:59:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 11:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T11:59:10.017+0800');
2020-08-05 11:59:18.310 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:00:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:00:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 12:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:00:00.019+0800');
2020-08-05 12:00:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:00:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:00:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:00:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:00:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:00:10.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 12:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T12:00:10.018+0800');
2020-08-05 12:00:18.311 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:01:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:01:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 12:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:01:00.021+0800');
2020-08-05 12:01:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:01:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:01:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:01:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 12:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:01:10.018+0800');
2020-08-05 12:01:18.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:02:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:02:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 12:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:02:00.018+0800');
2020-08-05 12:02:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:02:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:02:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:02:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 12:02:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 12:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T12:02:10.017+0800');
2020-08-05 12:02:18.317 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:03:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:03:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 12:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:03:00.020+0800');
2020-08-05 12:03:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:03:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:03:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:03:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:03:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 12:03:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 12:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T12:03:10.018+0800');
2020-08-05 12:03:18.319 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:04:00.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:04:00.021 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 12:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:04:00.018+0800');
2020-08-05 12:04:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:04:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:04:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:04:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:04:10.039 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:04:10.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 12:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T12:04:10.016+0800');
2020-08-05 12:04:18.322 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:05:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:05:00.022 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 12:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:05:00.018+0800');
2020-08-05 12:05:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:05:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:05:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:05:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 12:05:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 12:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T12:05:10.019+0800');
2020-08-05 12:05:18.323 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:06:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:06:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 12:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:06:00.020+0800');
2020-08-05 12:06:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:06:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:06:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:06:10.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 12:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T12:06:10.019+0800');
2020-08-05 12:06:18.325 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:07:00.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:07:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 12:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:07:00.017+0800');
2020-08-05 12:07:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:07:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:07:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:07:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:07:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 12:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:07:10.019+0800');
2020-08-05 12:07:18.326 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:08:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:08:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 12:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:08:00.018+0800');
2020-08-05 12:08:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:08:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:08:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:08:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 12:08:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 12:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T12:08:10.016+0800');
2020-08-05 12:08:18.329 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:09:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:09:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 12:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:09:00.021+0800');
2020-08-05 12:09:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:09:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:09:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:09:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:09:10.064 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:09:10.067 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 12:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T12:09:10.042+0800');
2020-08-05 12:09:18.330 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:10:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:10:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 12:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:10:00.021+0800');
2020-08-05 12:10:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:10:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:10:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:10:10.067 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 12:10:10.069 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 12:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T12:10:10.042+0800');
2020-08-05 12:10:18.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:11:00.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:11:00.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 12:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:11:00.044+0800');
2020-08-05 12:11:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:11:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:11:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:11:10.067 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:11:10.069 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 12:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:11:10.044+0800');
2020-08-05 12:11:18.333 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:12:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:12:00.047 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 12:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:12:00.045+0800');
2020-08-05 12:12:10.043 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:12:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:12:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:12:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:12:10.071 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 12:12:10.074 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 12:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T12:12:10.043+0800');
2020-08-05 12:12:18.337 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:13:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:13:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 12:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:13:00.021+0800');
2020-08-05 12:13:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:13:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:13:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:13:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:13:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:13:10.067 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 12:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:13:10.042+0800');
2020-08-05 12:13:18.340 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:14:00.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:14:00.047 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 12:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:14:00.044+0800');
2020-08-05 12:14:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:14:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:14:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:14:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 12:14:10.046 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 12:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T12:14:10.020+0800');
2020-08-05 12:14:18.342 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:15:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:15:00.022 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 12:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:15:00.018+0800');
2020-08-05 12:15:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:15:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:15:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:15:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:15:10.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 12:15:10.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 12:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T12:15:10.045+0800');
2020-08-05 12:15:18.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:16:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:16:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 12:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:16:00.020+0800');
2020-08-05 12:16:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:16:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:16:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:16:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:16:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 12:16:10.068 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 12:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T12:16:10.042+0800');
2020-08-05 12:16:18.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:17:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:17:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 12:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:17:00.019+0800');
2020-08-05 12:17:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:17:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:17:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:17:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:17:10.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:17:10.066 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 12:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T12:17:10.041+0800');
2020-08-05 12:17:12.415 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:C6057A1DD868CA0901A62D47F076D6E2
2020-08-05 12:17:18.349 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:17:52.422 febs [http-nio-8099-exec-6] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B47DF786BD2911830F32DC9E379BFCA6
2020-08-05 12:18:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:18:00.022 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 12:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:18:00.020+0800');
2020-08-05 12:18:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:18:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:18:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:18:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:18:10.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 12:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T12:18:10.020+0800');
2020-08-05 12:18:18.352 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:19:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:19:00.020 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 12:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:19:00.018+0800');
2020-08-05 12:19:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:19:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:19:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:19:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:19:10.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:19:10.044 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 12:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:19:10.018+0800');
2020-08-05 12:19:18.354 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:20:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:20:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 12:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:20:00.020+0800');
2020-08-05 12:20:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:20:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:20:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:20:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 12:20:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 12:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T12:20:10.020+0800');
2020-08-05 12:20:18.356 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:21:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:21:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 12:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:21:00.021+0800');
2020-08-05 12:21:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:21:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:21:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:21:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:21:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 12:21:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 12:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T12:21:10.019+0800');
2020-08-05 12:21:18.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:22:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:22:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 12:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:22:00.019+0800');
2020-08-05 12:22:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:22:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:22:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:22:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:22:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 12:22:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 12:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T12:22:10.016+0800');
2020-08-05 12:22:18.363 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:23:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:23:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 12:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:23:00.019+0800');
2020-08-05 12:23:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:23:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:23:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:23:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:23:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 12:23:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 12:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T12:23:10.016+0800');
2020-08-05 12:23:18.364 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:24:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:24:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 12:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:24:00.020+0800');
2020-08-05 12:24:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:24:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:24:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:24:10.039 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:24:10.042 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 12:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T12:24:10.017+0800');
2020-08-05 12:24:18.366 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:25:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:25:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 12:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:25:00.019+0800');
2020-08-05 12:25:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:25:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:25:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:25:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:25:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 12:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:25:10.017+0800');
2020-08-05 12:25:18.370 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:26:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:26:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 12:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:26:00.019+0800');
2020-08-05 12:26:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:26:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:26:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:26:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:26:10.069 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 12:26:10.071 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 12:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T12:26:10.042+0800');
2020-08-05 12:26:18.373 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:27:00.017 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:27:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 12:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:27:00.017+0800');
2020-08-05 12:27:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:27:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:27:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:27:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:27:10.031 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 12:27:10.033 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 12:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T12:27:10.008+0800');
2020-08-05 12:27:18.375 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:28:00.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:28:00.047 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 12:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:28:00.044+0800');
2020-08-05 12:28:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:28:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:28:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:28:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:28:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 12:28:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 12:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T12:28:10.021+0800');
2020-08-05 12:28:18.377 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:29:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:29:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 12:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:29:00.018+0800');
2020-08-05 12:29:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:29:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:29:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:29:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:29:10.072 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 12:29:10.074 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 12:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T12:29:10.043+0800');
2020-08-05 12:29:18.379 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:30:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:30:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 12:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T12:30:00.019+0800');
2020-08-05 12:30:10.006 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:30:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:30:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:30:10.028 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:30:10.030 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 12:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T12:30:10.006+0800');
2020-08-05 12:30:18.381 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:31:00.046 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:31:00.048 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 12:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:31:00.046+0800');
2020-08-05 12:31:10.009 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:31:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:31:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:31:10.031 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 12:31:10.033 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 12:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T12:31:10.009+0800');
2020-08-05 12:31:18.382 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:32:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:32:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 12:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:32:00.020+0800');
2020-08-05 12:32:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:32:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:32:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:32:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:32:10.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 12:32:10.036 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 12:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T12:32:10.009+0800');
2020-08-05 12:32:18.384 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:58:24.554 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:58:24.579 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:58:24.583 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 12:58:24 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:58:24.579+0800');
2020-08-05 12:58:36.552 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 12:58:42.762 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:B47DF786BD2911830F32DC9E379BFCA6
2020-08-05 12:59:00.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 12:59:00.016 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 12:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T12:59:00.010+0800');
2020-08-05 12:59:10.008 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 12:59:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 12:59:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 12:59:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 12:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 12:59:10.038 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 12:59:10.040 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 12:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T12:59:10.008+0800');
2020-08-05 12:59:12.554 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:00:00.012 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:00:00.015 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:00:00.012+0800');
2020-08-05 13:00:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:00:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:00:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:00:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:00:10.067 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:00:10.070 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T13:00:10.042+0800');
2020-08-05 13:00:12.556 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:01:00.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:01:00.021 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:01:00.018+0800');
2020-08-05 13:01:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:01:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:01:10.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:01:10.042 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:01:10.018+0800');
2020-08-05 13:01:12.559 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:02:00.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:02:00.015 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:02:00.012+0800');
2020-08-05 13:02:10.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:02:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:02:10.046 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 13:02:10.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T13:02:10.018+0800');
2020-08-05 13:02:12.562 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:03:00.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:03:00.022 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:03:00.019+0800');
2020-08-05 13:03:10.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:03:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:03:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:03:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:03:10.043 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:03:10.046 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T13:03:10.020+0800');
2020-08-05 13:03:12.566 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:04:00.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:04:00.012 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:04:00.009+0800');
2020-08-05 13:04:10.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:04:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:04:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:04:10.039 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:04:10.041 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:04:10.016+0800');
2020-08-05 13:04:12.567 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:05:00.009 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:05:00.012 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:05:00.009+0800');
2020-08-05 13:05:10.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:05:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:05:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:05:10.041 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:05:10.043 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:05:10.019+0800');
2020-08-05 13:05:12.568 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:06:00.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:06:00.013 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:06:00.010+0800');
2020-08-05 13:06:10.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:06:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:06:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:06:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:06:10.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 13:06:10.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T13:06:10.018+0800');
2020-08-05 13:06:12.571 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:07:00.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:07:00.022 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:07:00.020+0800');
2020-08-05 13:07:10.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:07:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:07:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:07:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:07:10.041 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:07:10.043 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:07:10.019+0800');
2020-08-05 13:07:12.572 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:08:00.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:08:00.011 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:08:00.008+0800');
2020-08-05 13:08:10.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:08:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:08:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:08:10.040 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:08:10.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T13:08:10.018+0800');
2020-08-05 13:08:12.574 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:09:00.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:09:00.012 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:09:00.009+0800');
2020-08-05 13:09:10.014 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:09:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:09:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:09:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:09:10.037 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:09:10.039 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 13:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T13:09:10.014+0800');
2020-08-05 13:09:12.577 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:10:00.010 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:10:00.013 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:10:00.010+0800');
2020-08-05 13:10:10.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:10:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:10:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:10:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:10:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:10:10.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:10:10.019+0800');
2020-08-05 13:10:12.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:11:00.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:11:00.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:11:00.044+0800');
2020-08-05 13:11:10.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:11:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:11:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:11:10.069 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:11:10.071 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T13:11:10.044+0800');
2020-08-05 13:11:12.582 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:12:00.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:12:00.021 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:12:00.018+0800');
2020-08-05 13:12:10.041 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:12:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:12:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:12:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:12:10.063 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:12:10.065 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T13:12:10.041+0800');
2020-08-05 13:12:12.585 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:13:00.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:13:00.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:13:00.044+0800');
2020-08-05 13:13:10.040 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:13:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:13:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:13:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:13:10.066 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:13:10.068 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:13:10.040+0800');
2020-08-05 13:13:12.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:14:00.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:14:00.014 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:14:00.011+0800');
2020-08-05 13:14:10.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:14:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:14:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:14:10.045 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:14:10.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T13:14:10.020+0800');
2020-08-05 13:14:12.589 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:15:00.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:15:00.022 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:15:00.019+0800');
2020-08-05 13:15:10.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:15:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:15:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:15:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:15:10.039 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:15:10.041 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:15:10.017+0800');
2020-08-05 13:15:12.594 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:16:00.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:16:00.020 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:16:00.018+0800');
2020-08-05 13:16:10.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:16:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:16:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:16:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:16:10.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:16:10.045 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:16:10.020+0800');
2020-08-05 13:16:12.595 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:17:00.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:17:00.024 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:17:00.021+0800');
2020-08-05 13:17:10.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:17:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:17:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:17:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:17:10.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:17:10.046 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T13:17:10.019+0800');
2020-08-05 13:17:12.596 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:18:00.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:18:00.024 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:18:00.021+0800');
2020-08-05 13:18:10.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:18:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:18:10.043 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:18:10.046 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T13:18:10.018+0800');
2020-08-05 13:18:12.598 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:19:00.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:19:00.025 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:19:00.023+0800');
2020-08-05 13:19:10.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:19:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:19:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:19:10.044 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 13:19:10.046 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 13:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T13:19:10.017+0800');
2020-08-05 13:19:12.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:20:00.010 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:20:00.012 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:20:00.010+0800');
2020-08-05 13:20:10.008 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:20:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:20:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:20:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:20:10.031 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:20:10.033 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:20:10.008+0800');
2020-08-05 13:20:12.604 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:21:00.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:21:00.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:21:00.043+0800');
2020-08-05 13:21:10.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:21:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:21:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:21:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:21:10.067 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:21:10.069 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T13:21:10.042+0800');
2020-08-05 13:21:12.605 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:22:00.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:22:00.023 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:22:00.020+0800');
2020-08-05 13:22:10.041 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:22:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:22:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:22:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:22:10.067 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:22:10.069 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T13:22:10.041+0800');
2020-08-05 13:22:12.607 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:23:00.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:23:00.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:23:00.042+0800');
2020-08-05 13:23:10.043 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:23:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:23:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:23:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:23:10.064 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-08-05 13:23:10.066 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 21, '2020-08-05T13:23:10.043+0800');
2020-08-05 13:23:12.611 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:24:00.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:24:00.024 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:24:00.021+0800');
2020-08-05 13:24:10.041 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:24:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:24:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:24:10.066 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 13:24:10.068 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T13:24:10.041+0800');
2020-08-05 13:24:12.612 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:25:00.044 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:25:00.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:25:00.044+0800');
2020-08-05 13:25:10.007 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:25:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:25:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:25:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:25:10.033 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:25:10.035 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:25:10.007+0800');
2020-08-05 13:25:12.614 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:26:00.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:26:00.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:26:00.043+0800');
2020-08-05 13:26:10.016 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:26:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:26:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:26:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:26:10.043 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 13:26:10.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T13:26:10.016+0800');
2020-08-05 13:26:12.617 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:27:00.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:27:00.022 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:27:00.019+0800');
2020-08-05 13:27:10.042 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:27:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:27:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:27:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:27:10.071 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 13:27:10.073 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T13:27:10.042+0800');
2020-08-05 13:27:12.619 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:28:00.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:28:00.022 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:28:00.018+0800');
2020-08-05 13:28:10.017 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:28:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:28:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:28:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:28:10.040 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:28:10.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:28:10.017+0800');
2020-08-05 13:28:12.622 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:29:00.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:29:00.021 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:29:00.018+0800');
2020-08-05 13:29:10.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:29:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:29:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:29:10.045 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:29:10.047 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 13:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:29:10.019+0800');
2020-08-05 13:29:12.623 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:30:39.103 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:30:39.106 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:30:39 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:30:39.103+0800');
2020-08-05 13:30:39.708 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:31:00.009 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:31:00.012 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:31:00.009+0800');
2020-08-05 13:31:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:31:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:31:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:31:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:31:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:31:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:31:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:31:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T13:31:10.016+0800');
2020-08-05 13:31:15.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:32:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:32:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:32:00.018+0800');
2020-08-05 13:32:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:32:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:32:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:32:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:32:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 13:32:10.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T13:32:10.019+0800');
2020-08-05 13:32:15.711 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:33:00.012 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:33:00.016 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:33:00.012+0800');
2020-08-05 13:33:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:33:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:33:10.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 13:33:10.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T13:33:10.021+0800');
2020-08-05 13:33:15.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:33:29.432 febs [http-nio-8099-exec-5] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:92D588891F1C537787D144A129F02577
2020-08-05 13:33:32.069 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 13:33:32.073 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 13:33:32.078 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 13:33:32.613 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:33:32.687 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T13:33:32.684+0800' WHERE (USERNAME = 'admin');
2020-08-05 13:33:32.694 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 13:33:32.696 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 13:33:32.699 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 13:33:32.702 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 13:33:32.704 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:33:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 13:33:35.632 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:33:35 | 耗时 116 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:33:35.634 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:33:35.640 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:33:35 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:33:35.642 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:33:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:33:48.341 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:33:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 13:33:48.343 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:33:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:33:48.346 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:33:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 13:33:48.348 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:33:48 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:34:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:34:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:34:00.012+0800');
2020-08-05 13:34:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:34:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:34:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 13:34:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T13:34:10.019+0800');
2020-08-05 13:34:15.717 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:34:26.016 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部' AND head = '张扬');
2020-08-05 13:34:26.018 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部' AND head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:34:26.022 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部' AND head = '张扬');
2020-08-05 13:34:26.024 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部' AND head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:35:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:35:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:35:00.011+0800');
2020-08-05 13:35:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:35:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:35:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:35:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:35:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-05 13:35:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-05T13:35:10.008+0800');
2020-08-05 13:35:15.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:35:16.582 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:35:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '运维部' AND head = '张扬');
2020-08-05 13:35:16.586 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:35:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '运维部' AND head = '张扬');
2020-08-05 13:36:00.013 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:36:00.017 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:36:00.013+0800');
2020-08-05 13:36:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:36:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:36:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:36:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:36:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T13:36:10.018+0800');
2020-08-05 13:36:15.720 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:37:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:37:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:37:00.020+0800');
2020-08-05 13:37:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:37:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:37:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:37:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:37:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:37:10.043 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T13:37:10.016+0800');
2020-08-05 13:37:15.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:37:18.383 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:37:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:37:18.452 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:37:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:37:18.453 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:37:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:37:18.457 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:37:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:37:18.459 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:37:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:37:25.896 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:37:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 13:37:25.899 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:37:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:37:25.903 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:37:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (name = '开发部');
2020-08-05 13:37:25.904 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:37:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (name = '开发部') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:37:40.219 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:37:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '马冬梅');
2020-08-05 13:37:40.221 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:37:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '马冬梅') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:37:40.225 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:37:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '马冬梅');
2020-08-05 13:37:40.228 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:37:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '马冬梅') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:38:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:38:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:38:00.023+0800');
2020-08-05 13:38:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:38:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:38:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:38:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:38:10.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:38:10.041 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T13:38:10.016+0800');
2020-08-05 13:38:15.725 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:39:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:39:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:39:00.020+0800');
2020-08-05 13:39:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:39:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:39:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:39:10.040 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:39:10.043 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:39:10.017+0800');
2020-08-05 13:39:15.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:40:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:40:00.012 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 13:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:40:00.009+0800');
2020-08-05 13:40:10.103 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:40:10.106 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:40:10.109 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:40:10.135 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:40:10.137 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 13:40:10.140 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T13:40:10.103+0800');
2020-08-05 13:40:15.739 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:41:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:41:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:41:00.019+0800');
2020-08-05 13:41:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:41:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:41:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:41:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:41:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T13:41:10.018+0800');
2020-08-05 13:41:15.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:41:47.010 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:41:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:41:47.091 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:41:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:41:47.093 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:41:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:41:47.096 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:41:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:41:47.098 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:41:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:41:54.234 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:41:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (category = 4);
2020-08-05 13:41:54.235 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:41:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = 4) ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:41:54.239 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:41:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (category = 4);
2020-08-05 13:41:54.241 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:41:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = 4) ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:42:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:42:00.022+0800');
2020-08-05 13:42:06.216 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:42:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (category = 3);
2020-08-05 13:42:06.218 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:42:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = 3) ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:06.222 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:42:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (category = 3);
2020-08-05 13:42:06.224 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:42:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (category = 3) ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:42:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:42:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:42:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:42:10.040 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:42:10.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:42:10.018+0800');
2020-08-05 13:42:15.625 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:42:15 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:42:15.700 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:42:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:42:15.703 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:42:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:15.705 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:42:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:42:15.707 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:42:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:15.743 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:42:57.986 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:42:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:42:58.056 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:42:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:42:58.057 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:42:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:42:58.061 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:42:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:42:58.063 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:42:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:43:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:43:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:43:00.022+0800');
2020-08-05 13:43:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:43:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:43:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:43:10.042 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:43:10.017+0800');
2020-08-05 13:43:15.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:43:57.599 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:43:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:43:57.671 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:43:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:43:57.673 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:43:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:43:57.677 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:43:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:43:57.678 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:43:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:44:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:44:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:44:00.020+0800');
2020-08-05 13:44:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:44:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:44:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:44:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:44:10.067 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:44:10.069 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:44:10.041+0800');
2020-08-05 13:44:15.749 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:45:00.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:45:00.012 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:45:00.009+0800');
2020-08-05 13:45:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:45:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:45:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:45:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:45:10.036 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:45:10.038 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T13:45:10.010+0800');
2020-08-05 13:45:15.752 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:45:22.554 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:45:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:45:22.634 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:45:22 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:45:22.636 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:45:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:45:22.640 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:45:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:45:22.642 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:45:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:45:35.696 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:45:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:45:35.913 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:45:35 | 耗时 91 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:45:35.916 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:45:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:45:35.920 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:45:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:45:35.922 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:45:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:46:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:46:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:46:00.019+0800');
2020-08-05 13:46:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:46:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:46:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:46:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:46:10.018+0800');
2020-08-05 13:46:15.754 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:46:44.705 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:46:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:46:44.783 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:46:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:46:44.785 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:46:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:46:44.788 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:46:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:46:44.790 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:46:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:46:53.740 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:46:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:46:53.821 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:46:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:46:53.823 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:46:53.826 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:46:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:46:53.828 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:47:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:47:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:47:00.019+0800');
2020-08-05 13:47:10.069 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:47:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:47:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:47:10.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:47:10.103 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 13:47:10.105 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-05T13:47:10.069+0800');
2020-08-05 13:47:14.910 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:47:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:47:14.966 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:47:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:47:14.968 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:47:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:47:14.970 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:47:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:47:14.972 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:47:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:47:15.758 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:47:57.831 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:47:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:47:57.895 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 13:47:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:47:57.897 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 13:47:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:47:57.900 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 13:47:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:47:57.902 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 13:47:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:48:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:48:00.021+0800');
2020-08-05 13:48:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:48:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:48:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:48:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T13:48:10.018+0800');
2020-08-05 13:48:15.760 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:48:17.376 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 13:48:17 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:48:17.426 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:48:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:48:17.428 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:48:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:17.431 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:48:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:48:17.433 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:48:17 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:34.238 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:48:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 13:48:34.240 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:48:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:34.243 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:48:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept WHERE (head = '张扬');
2020-08-05 13:48:34.245 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:48:34 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE (head = '张扬') ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:54.227 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:48:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:48:54.304 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:48:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:48:54.306 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:48:54 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:48:54.310 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:48:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:48:54.312 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:48:54 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:49:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:49:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:49:00.020+0800');
2020-08-05 13:49:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:49:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:49:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:49:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:49:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 13:49:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T13:49:10.017+0800');
2020-08-05 13:49:15.764 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:49:50.737 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 13:49:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:49:50.808 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:49:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:49:50.809 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:49:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:49:50.812 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:49:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:49:50.814 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:49:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:50:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:50:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 13:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:50:00.020+0800');
2020-08-05 13:50:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:50:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:50:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:50:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 13:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:50:10.019+0800');
2020-08-05 13:50:15.766 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:50:25.291 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 13:50:25 | 耗时 0 ms | SQL 语句：
INSERT INTO a_mydept (name, head, address, category, state, creator, create_date, modifier, mod_date) VALUES ('管理部', '789', '河南省', 1, 1, '1', '2020-08-05T13:50:25.289', '1', '2020-08-05T13:50:25.289');
2020-08-05 13:50:25.317 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:50:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:50:25.319 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:50:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:50:25.322 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:50:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:50:25.324 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 13:50:25 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:50:40.167 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:50:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 6;
2020-08-05 13:51:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:51:00.022 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 13:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:51:00.019+0800');
2020-08-05 13:51:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:51:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:51:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:51:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:51:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:51:10.036 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 13:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T13:51:10.008+0800');
2020-08-05 13:51:12.109 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:51:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 13:51:12.164 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:51:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:51:12.165 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:51:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:51:12.168 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:51:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:51:12.170 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 13:51:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:51:13.355 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:51:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-05 13:51:15.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:51:22.532 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 13:51:22 | 耗时 1 ms | SQL 语句：
DELETE FROM a_mydept WHERE id = 6;
2020-08-05 13:51:22.563 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:51:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:51:22.564 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:51:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:51:22.567 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:51:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 13:51:22.569 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 13:51:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:52:00.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:52:00.018 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 13:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:52:00.016+0800');
2020-08-05 13:52:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:52:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:52:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:52:10.041 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:52:10.043 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 13:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T13:52:10.019+0800');
2020-08-05 13:52:15.772 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:52:38.054 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:52:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 13:52:38.055 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 13:52:38 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 13:52:38.056 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 13:52:38 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 13:53:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:53:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 13:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:53:00.019+0800');
2020-08-05 13:53:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:53:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:53:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:53:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:53:10.039 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 13:53:10.041 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 13:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T13:53:10.017+0800');
2020-08-05 13:53:15.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:53:17.003 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:53:17 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-08-05 13:53:17.005 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 13:53:17 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-08-05 13:54:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:54:00.022 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 13:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:54:00.020+0800');
2020-08-05 13:54:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:54:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:54:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:54:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:54:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 13:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T13:54:10.019+0800');
2020-08-05 13:54:15.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:55:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:55:00.015 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 13:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:55:00.012+0800');
2020-08-05 13:55:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:55:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:55:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:55:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:55:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 13:55:10.042 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 13:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T13:55:10.017+0800');
2020-08-05 13:55:15.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:56:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:56:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 13:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:56:00.019+0800');
2020-08-05 13:56:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:56:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:56:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:56:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:56:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-08-05 13:56:10.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 13:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 21, '2020-08-05T13:56:10.020+0800');
2020-08-05 13:56:15.782 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:57:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:57:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 13:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T13:57:00.021+0800');
2020-08-05 13:57:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:57:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:57:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:57:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:57:10.039 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 13:57:10.041 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 13:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T13:57:10.010+0800');
2020-08-05 13:57:15.785 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:58:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:58:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 13:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:58:00.021+0800');
2020-08-05 13:58:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:58:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:58:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 13:58:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 13:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T13:58:10.016+0800');
2020-08-05 13:58:15.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 13:59:00.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 13:59:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 13:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T13:59:00.018+0800');
2020-08-05 13:59:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 13:59:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 13:59:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 13:59:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 13:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 13:59:10.044 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 13:59:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 13:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T13:59:10.020+0800');
2020-08-05 13:59:15.789 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:00:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:00:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:00:00.019+0800');
2020-08-05 14:00:10.007 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:00:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:00:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:00:10.028 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-08-05 14:00:10.030 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 21, '2020-08-05T14:00:10.007+0800');
2020-08-05 14:00:15.791 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:01:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:01:00.013 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:01:00.010+0800');
2020-08-05 14:01:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:01:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:01:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:01:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 14:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:01:10.017+0800');
2020-08-05 14:01:15.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:02:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:02:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:02:00.022+0800');
2020-08-05 14:02:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:02:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:02:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:02:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:02:10.064 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-08-05 14:02:10.067 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 21, '2020-08-05T14:02:10.043+0800');
2020-08-05 14:02:15.795 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:03:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:03:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:03:00.019+0800');
2020-08-05 14:03:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:03:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:03:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:03:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:03:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:03:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:03:10.018+0800');
2020-08-05 14:03:15.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:04:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:04:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:04:00.018+0800');
2020-08-05 14:04:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:04:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:04:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:04:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:04:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 14:04:10.043 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T14:04:10.018+0800');
2020-08-05 14:04:15.800 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:05:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:05:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:05:00.018+0800');
2020-08-05 14:05:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:05:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:05:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:05:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 14:05:10.042 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T14:05:10.017+0800');
2020-08-05 14:05:15.802 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:06:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:06:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:06:00.020+0800');
2020-08-05 14:06:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:06:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:06:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:06:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:06:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:06:10.018+0800');
2020-08-05 14:06:15.816 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:07:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:07:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:07:00.018+0800');
2020-08-05 14:07:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:07:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:07:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:07:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:07:10.070 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 14:07:10.072 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T14:07:10.045+0800');
2020-08-05 14:07:15.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:08:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:08:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:08:00.021+0800');
2020-08-05 14:08:10.006 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:08:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:08:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:08:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:08:10.031 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 14:08:10.033 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T14:08:10.006+0800');
2020-08-05 14:08:15.822 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:09:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:09:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:09:00.022+0800');
2020-08-05 14:09:10.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:09:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:09:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:09:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:09:10.037 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 14:09:10.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-05T14:09:10.015+0800');
2020-08-05 14:09:15.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:10:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:10:00.021 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:10:00.019+0800');
2020-08-05 14:10:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:10:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:10:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:10:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:10:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 14:10:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T14:10:10.016+0800');
2020-08-05 14:10:15.824 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:11:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:11:00.020 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:11:00.018+0800');
2020-08-05 14:11:10.008 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:11:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:11:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:11:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:11:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:11:10.036 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 14:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T14:11:10.008+0800');
2020-08-05 14:11:15.826 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:12:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:12:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:12:00.021+0800');
2020-08-05 14:12:10.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:12:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:12:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:12:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:12:10.031 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 14:12:10.033 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T14:12:10.009+0800');
2020-08-05 14:12:15.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:13:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:13:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:13:00.018+0800');
2020-08-05 14:13:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:13:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:13:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:13:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:13:10.033 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:13:10.035 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:13:10.009+0800');
2020-08-05 14:13:15.832 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:14:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:14:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:14:00.018+0800');
2020-08-05 14:14:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:14:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:14:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:14:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:14:10.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 14:14:10.042 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T14:14:10.011+0800');
2020-08-05 14:14:15.834 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:14:30.127 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:14:30 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:15:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:15:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:15:00.020+0800');
2020-08-05 14:15:10.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:15:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:15:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:15:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:15:10.031 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:15:10.033 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:15:10.007+0800');
2020-08-05 14:15:15.835 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:16:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:16:00.016 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:16:00.012+0800');
2020-08-05 14:16:10.007 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:16:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:16:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:16:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:16:10.030 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 14:16:10.032 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T14:16:10.007+0800');
2020-08-05 14:16:15.837 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:17:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:17:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:17:00.019+0800');
2020-08-05 14:17:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:17:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:17:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:17:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:17:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 14:17:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T14:17:10.019+0800');
2020-08-05 14:17:14.283 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:17:14 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-05 14:17:14.294 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:17:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-05 14:17:14.303 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:17:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-05 14:17:15.838 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:18:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:18:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:18:00.021+0800');
2020-08-05 14:18:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:18:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:18:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:18:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 14:18:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T14:18:10.016+0800');
2020-08-05 14:18:15.843 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:18:20.879 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:18:20 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 357, MENU_NAME = '用户管理', URL = '/administrator/administrator/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-08-05T14:18:20.875+0800' WHERE MENU_ID = 363;
2020-08-05 14:18:20.902 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:18:20 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:18:20.912 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 14:18:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 7, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=用户管理, url=/administrator/administrator/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Wed Aug 05 14:18:20 CST 2020)"', '192.168.1.113', '2020-08-05T14:18:20.897+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:18:36.698 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:18:36 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '新增', PERMS = 'administrator:add', TYPE = '1', MODIFY_TIME = '2020-08-05T14:18:36.695+0800' WHERE MENU_ID = 365;
2020-08-05 14:18:36.716 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 14:18:36 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 15, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=365, parentId=363, menuName=新增, url=null, perms=administrator:add, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 14:18:36 CST 2020)"', '192.168.1.113', '2020-08-05T14:18:36.711+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:18:36.724 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:18:36 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:18:44.720 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:18:44 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '删除', PERMS = 'administrator:del', TYPE = '1', MODIFY_TIME = '2020-08-05T14:18:44.718+0800' WHERE MENU_ID = 366;
2020-08-05 14:18:44.729 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 14:18:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=366, parentId=363, menuName=删除, url=null, perms=administrator:del, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 14:18:44 CST 2020)"', '192.168.1.113', '2020-08-05T14:18:44.724+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:18:44.740 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:18:44 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:18:54.273 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:18:54 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '修改', PERMS = 'administrator:mod', TYPE = '1', MODIFY_TIME = '2020-08-05T14:18:54.271+0800' WHERE MENU_ID = 367;
2020-08-05 14:18:54.316 febs [aps-Async-Thread4] INFO  p6spy - 2020-08-05 14:18:54 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 39, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=367, parentId=363, menuName=修改, url=null, perms=administrator:mod, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 14:18:54 CST 2020)"', '192.168.1.113', '2020-08-05T14:18:54.311+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:18:54.323 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:18:54 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:18:56.157 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:18:56 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:18:56.207 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:18:56 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:18:58.706 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:18:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_send_command;
2020-08-05 14:18:58.708 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:18:58 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:18:58.713 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:18:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20009');
2020-08-05 14:18:58.725 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:18:58 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20001');
2020-08-05 14:19:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:19:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:19:00.022+0800');
2020-08-05 14:19:08.288 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:19:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:19:10.008 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:19:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:19:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:19:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:19:10.029 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：21 毫秒
2020-08-05 14:19:10.031 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 21, '2020-08-05T14:19:10.008+0800');
2020-08-05 14:19:15.844 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:19:26.089 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:19:26 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:19:27.920 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:19:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:19:27.923 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:19:27 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:19:27.925 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:19:27 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:19:39.885 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T14:19:39.883+0800' WHERE ROLE_ID = 82;
2020-08-05 14:19:39.895 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 14:19:39.918 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 14:19:39.920 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 14:19:39.923 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 14:19:39.936 febs [aps-Async-Thread5] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 49, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 14:19:39 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T14:19:39.932+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:19:39.964 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:19:39.966 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:19:39 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:19:41.399 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:19:41.432 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:19:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:19:41.434 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:19:41 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:19:41.436 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:19:41 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:19:42.225 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:19:42 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:19:42.251 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:19:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:19:42.253 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:19:42 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:19:42.254 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:19:42 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:19:43.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:19:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_send_command;
2020-08-05 14:19:43.108 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:19:43 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:19:43.111 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:19:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20009');
2020-08-05 14:19:43.114 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:19:43 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment WHERE (code = '20001');
2020-08-05 14:19:45.013 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:19:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:20:00.033 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:20:00.038 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:20:00.033+0800');
2020-08-05 14:20:00.174 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:20:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:20:00.232 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:20:00 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:20:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:20:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:20:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:20:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:20:10.032 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 14:20:10.034 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T14:20:10.009+0800');
2020-08-05 14:20:15.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:20:38.352 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:20:38 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:20:40.401 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:20:40 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:20:52.474 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:20:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:20:52.476 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:20:52 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:20:52.488 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:20:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:20:57.019 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T14:20:57.018+0800' WHERE ROLE_ID = 82;
2020-08-05 14:20:57.022 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 14:20:57.039 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 14:20:57.042 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 14:20:57.046 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 14:20:57.055 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 32, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 14:20:57 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T14:20:57.050+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:20:57.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:20:57.084 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:20:57 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:20:58.439 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:20:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:20:58.474 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:20:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:20:58.477 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:20:58 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:20:58.481 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:20:58 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:21:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:21:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:21:00.020+0800');
2020-08-05 14:21:09.647 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:21:09 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:21:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:21:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:21:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:21:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:21:10.041 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 14:21:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 14:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T14:21:10.018+0800');
2020-08-05 14:21:10.493 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:21:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:21:11.965 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:21:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 14:21:11.967 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:21:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:21:11.970 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:21:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-05 14:21:11.971 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:21:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:21:15.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:21:47.457 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:21:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:22:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:22:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:22:00.018+0800');
2020-08-05 14:22:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:22:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:22:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:22:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:22:10.040 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:22:10.042 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T14:22:10.016+0800');
2020-08-05 14:22:15.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:23:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:23:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:23:00.022+0800');
2020-08-05 14:23:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:23:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:23:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:23:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:23:10.042 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:23:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:23:10.018+0800');
2020-08-05 14:23:15.854 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:24:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:24:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:24:00.018+0800');
2020-08-05 14:24:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:24:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:24:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:24:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:24:10.040 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 14:24:10.042 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T14:24:10.018+0800');
2020-08-05 14:24:15.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:24:52.803 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:24:52 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:25:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:25:00.011+0800');
2020-08-05 14:25:00.458 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 357, MENU_NAME = '用户管理', URL = '/administer/administrator/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-08-05T14:25:00.456+0800' WHERE MENU_ID = 363;
2020-08-05 14:25:00.466 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 5, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=用户管理, url=/administer/administrator/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Wed Aug 05 14:25:00 CST 2020)"', '192.168.1.113', '2020-08-05T14:25:00.461+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:25:00.473 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 357, MENU_NAME = '用户管理', URL = '/administer/administrator/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-08-05T14:25:00.471+0800' WHERE MENU_ID = 363;
2020-08-05 14:25:00.480 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 4, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=用户管理, url=/administer/administrator/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Wed Aug 05 14:25:00 CST 2020)"', '192.168.1.113', '2020-08-05T14:25:00.475+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:25:00.482 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:00.497 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:25:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:25:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:25:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:25:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：20 毫秒
2020-08-05 14:25:10.042 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 20, '2020-08-05T14:25:10.020+0800');
2020-08-05 14:25:15.855 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:25:22.179 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:25:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:25:22.232 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:22.618 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:25:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:25:22.657 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:25:22 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:23.104 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:25:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:25:23.145 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:25:23.534 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:25:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:25:23.585 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:25:23 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:26:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:26:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:26:00.021+0800');
2020-08-05 14:26:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:26:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:26:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:26:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:26:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:26:10.044 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:26:10.016+0800');
2020-08-05 14:26:15.858 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:26:16.693 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:26:16 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:26:19.232 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:26:19 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:26:21.747 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:26:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:26:21.807 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:26:21 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:27:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:27:00.022 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:27:00.019+0800');
2020-08-05 14:27:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:27:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:27:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:27:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:27:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 14:27:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T14:27:10.017+0800');
2020-08-05 14:27:15.861 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:28:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:28:00.029 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:28:00.021+0800');
2020-08-05 14:28:10.011 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:28:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:28:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:28:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:28:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:28:10.058 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-05 14:28:10.061 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-05T14:28:10.011+0800');
2020-08-05 14:28:15.863 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:29:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:29:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:29:00.020+0800');
2020-08-05 14:29:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:29:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:29:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 14:29:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T14:29:10.018+0800');
2020-08-05 14:29:13.621 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:29:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:29:15.865 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596597313925_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:29:51.767 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9104 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 14:29:51.770 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 14:29:53.355 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 14:29:53.361 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 14:29:53.473 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92ms. Found 0 repository interfaces.
2020-08-05 14:29:54.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$962e98fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2ca0282c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.578 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$10989f5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c54df066] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.741 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b7c58e7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ea229318] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:54.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 14:29:55.215 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 14:29:55.232 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 14:29:55.243 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 14:29:55.243 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 14:29:55.252 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 14:29:55.385 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 14:29:55.385 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3545 ms
2020-08-05 14:29:55.789 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 14:29:55.798 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 14:29:56.455 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 14:29:56.455 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 14:29:56.456 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 14:29:56.456 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 14:29:57.049 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 14:29:59.729 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 14:29:59.782 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 14:29:59.795 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 14:29:59.795 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 14:29:59.799 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 14:29:59.802 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 14:29:59.803 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596608999783'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 14:29:59.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 14:29:59.803 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 14:29:59.805 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@56f72909
2020-08-05 14:29:59.891 febs [main] INFO  p6spy - 2020-08-05 14:29:59 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 14:30:01.721 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 14:30:01.952 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 14:30:01.952 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 14:30:01.953 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 14:30:02.022 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7dc92a06, org.springframework.security.web.context.SecurityContextPersistenceFilter@44de3b46, org.springframework.security.web.header.HeaderWriterFilter@7c8b37a8, org.springframework.security.web.authentication.logout.LogoutFilter@17e2835c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30333941, org.springframework.security.web.session.ConcurrentSessionFilter@55e4dd68, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@320fc4b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cc44207, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@675230cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2419a5db, org.springframework.security.web.session.SessionManagementFilter@75f2ff80, org.springframework.security.web.access.ExceptionTranslationFilter@3a8ead9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b2acb12]
2020-08-05 14:30:02.071 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 14:30:02.086 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 14:30:02.088 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 14:30:02.448 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 14:30:03.068 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 14:30:03.082 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 14:30:03.158 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 14:30:03.177 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 14:30:03.190 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 14:30:03.218 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 14:30:03.223 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.294 seconds (JVM running for 13.322)
2020-08-05 14:30:03.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 14:30:03.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 14:30:03.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 14:30:03.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 14:30:03.244 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 14:30:03.848 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 14:30:03.849 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 14:30:03.863 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-05 14:30:03 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 14:30:03.864 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-05 14:30:04.179 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 14:30:04.190 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596608999783 started.
2020-08-05 14:30:04.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:30:10.035 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:30:10.093 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:30:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:30:10.123 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:30:10.161 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:30:10.164 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：129 毫秒
2020-08-05 14:30:10.178 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 129, '2020-08-05T14:30:10.035+0800');
2020-08-05 14:30:15.561 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D89E50A51C207F30E21394209E9045BA
2020-08-05 14:30:16.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:30:18.431 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:30:18 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 14:30:18.521 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:30:18 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 14:30:18.534 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:30:18 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 14:30:19.038 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:30:19.158 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T14:30:19.149+0800' WHERE (USERNAME = 'admin');
2020-08-05 14:30:19.180 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 14:30:19.185 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 14:30:19.188 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 14:30:19.194 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 14:30:19.194 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596597313925"'s failed in-progress jobs.
2020-08-05 14:30:19.195 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 14:30:19.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 14:30:19.200 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:19 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 14:30:22.121 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:30:22 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:30:28.195 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:30:30.058 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:30:30 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 357, MENU_NAME = '用户管理', URL = '/administrator/administrator/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-08-05T14:30:30.052+0800' WHERE MENU_ID = 363;
2020-08-05 14:30:30.093 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:30:30 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:30:30.097 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 14:30:30 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 21, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=用户管理, url=/administrator/administrator/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Wed Aug 05 14:30:30 CST 2020)"', '192.168.1.113', '2020-08-05T14:30:30.083+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:30:46.951 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:30:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:30:47.007 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:30:47 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:30:48.651 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:30:48 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:30:48.660 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:30:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:30:48.675 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:30:48 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:30:55.762 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T14:30:55.758+0800' WHERE ROLE_ID = 82;
2020-08-05 14:30:55.774 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 14:30:55.808 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 14:30:55.811 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 14:30:55.815 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 14:30:55.827 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 64, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 14:30:55 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T14:30:55.821+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 14:30:55.853 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:30:55.856 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:30:55 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:30:58.268 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:30:58 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:30:58.313 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:30:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 14:30:58.317 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:30:58 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 14:30:58.318 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:30:58 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:31:00.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:31:00.029 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T14:31:00.022+0800');
2020-08-05 14:31:00.486 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:31:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:31:10.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:31:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:31:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:31:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:31:10.055 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 14:31:10.058 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-05T14:31:10.021+0800');
2020-08-05 14:31:13.197 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:31:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:31:16.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:31:49.295 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:31:49 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:31:49.360 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:31:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:32:00.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:32:00.030 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:32:00.023+0800');
2020-08-05 14:32:00.572 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:32:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:32:00.647 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:32:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:32:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:32:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:32:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:32:10.050 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 14:32:10.053 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T14:32:10.019+0800');
2020-08-05 14:32:16.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:33:00.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:33:00.026 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:33:00.022+0800');
2020-08-05 14:33:10.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:33:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:33:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:33:10.053 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 14:33:10.056 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-05T14:33:10.019+0800');
2020-08-05 14:33:16.202 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:33:57.212 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:33:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:33:57.305 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:33:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:34:00.013 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:34:00.017 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:34:00.013+0800');
2020-08-05 14:34:10.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:34:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:34:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:34:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:34:10.053 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 14:34:10.056 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T14:34:10.021+0800');
2020-08-05 14:34:11.102 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:34:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:34:11.170 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:34:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:34:16.205 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:34:37.067 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:34:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:34:37.128 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:34:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:35:00.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:35:00.015 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:35:00.011+0800');
2020-08-05 14:35:05.922 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:35:05 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:35:10.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:35:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:35:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:35:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:35:10.048 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 14:35:10.050 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T14:35:10.020+0800');
2020-08-05 14:35:16.208 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:36:00.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:36:00.027 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:36:00.022+0800');
2020-08-05 14:36:03.231 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:36:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:36:03.392 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:36:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:36:03.450 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:36:03 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:36:04.063 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:36:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:36:04.099 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:36:04 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 14:36:10.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:36:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:36:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:36:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:36:10.044 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:36:10.046 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:36:10.018+0800');
2020-08-05 14:36:16.210 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:37:00.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:37:00.024 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:37:00.020+0800');
2020-08-05 14:37:10.018 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:37:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:37:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:37:10.047 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 14:37:10.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T14:37:10.018+0800');
2020-08-05 14:37:16.213 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:37:20.916 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:37:20 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:37:36.856 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:37:36 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:37:36.918 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:37:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:38:00.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:38:00.017 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:38:00.011+0800');
2020-08-05 14:38:10.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:38:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:38:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:38:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:38:10.045 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:38:10.047 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:38:10.019+0800');
2020-08-05 14:38:16.215 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:39:00.014 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:39:00.017 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:39:00.014+0800');
2020-08-05 14:39:10.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:39:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:39:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:39:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:39:10.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:39:10.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:39:10.019+0800');
2020-08-05 14:39:16.217 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:39:58.398 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:39:58 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:39:58.450 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:39:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:39:58.466 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:39:58 | 耗时 14 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:40:00.011 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:40:00.015 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 14:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:40:00.011+0800');
2020-08-05 14:40:06.560 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:40:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:40:06.624 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:40:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:40:06.626 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:40:06 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:40:10.017 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:40:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:40:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:40:10.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 14:40:10.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T14:40:10.017+0800');
2020-08-05 14:40:16.221 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:40:53.844 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 14:40:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:40:53.913 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:40:53 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:40:53.915 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:40:53 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:40:57.110 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:40:57 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator WHERE id = 1;
2020-08-05 14:41:00.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:41:00.017 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:41:00.012+0800');
2020-08-05 14:41:10.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:41:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:41:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:41:10.047 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 14:41:10.050 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T14:41:10.018+0800');
2020-08-05 14:41:16.222 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:42:00.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:42:00.024 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:42:00.021+0800');
2020-08-05 14:42:04.880 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:42:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:42:04.946 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:42:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:42:04.948 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:42:04 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:42:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:42:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:42:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:42:10.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:42:10.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:42:10.019+0800');
2020-08-05 14:42:16.224 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:43:00.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:43:00.014 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:43:00.011+0800');
2020-08-05 14:43:10.015 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:43:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:43:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:43:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:43:10.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 14:43:10.045 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T14:43:10.015+0800');
2020-08-05 14:43:16.226 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:43:54.067 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 14:43:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:43:54.121 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:43:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:43:54.123 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:43:54 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:44:00.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:44:00.025 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:44:00.022+0800');
2020-08-05 14:44:10.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:44:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:44:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:44:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:44:10.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:44:10.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:44:10.020+0800');
2020-08-05 14:44:16.227 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:45:00.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:45:00.023 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:45:00.020+0800');
2020-08-05 14:45:10.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:45:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:45:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:45:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:45:10.052 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 14:45:10.054 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T14:45:10.020+0800');
2020-08-05 14:45:16.230 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:45:32.272 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:45:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:45:32.354 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:45:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:45:32.357 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:45:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:46:00.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:46:00.025 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:46:00.022+0800');
2020-08-05 14:46:10.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:46:10.042 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:46:10.044 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T14:46:10.018+0800');
2020-08-05 14:46:16.232 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:47:00.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:47:00.015 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:47:00.010+0800');
2020-08-05 14:47:10.008 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:47:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:47:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:47:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:47:10.036 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 14:47:10.038 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T14:47:10.008+0800');
2020-08-05 14:47:16.236 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:47:41.364 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:47:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:47:41.422 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:47:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:47:41.424 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:47:41 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:48:00.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:48:00.015 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:48:00.011+0800');
2020-08-05 14:48:10.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:48:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:48:10.043 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:48:10.045 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:48:10.017+0800');
2020-08-05 14:48:16.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:48:17.867 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:48:17 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:48:17.933 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:48:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:48:17.934 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:48:17 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:48:41.338 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:48:41 | 耗时 0 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, account_num, account_pwd, wechart_num, state, creator, create_date, modifier, mod_date) VALUES ('', '', '', '', '', 1, '1', '2020-08-05T14:48:41.335', '1', '2020-08-05T14:48:41.335');
2020-08-05 14:48:41.366 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:48:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:48:41.368 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:48:41 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:48:59.348 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:48:59 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator WHERE id = 2;
2020-08-05 14:49:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:49:00.023 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:49:00.020+0800');
2020-08-05 14:49:10.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:49:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:49:10.043 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:49:10.046 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:49:10.019+0800');
2020-08-05 14:49:16.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:50:00.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:50:00.022 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 14:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:50:00.019+0800');
2020-08-05 14:50:10.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:50:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:50:10.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:50:10.045 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 14:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T14:50:10.019+0800');
2020-08-05 14:50:16.240 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:50:31.724 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:50:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:50:31.821 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:50:31 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:50:31.823 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 14:50:31 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:50:33.063 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator WHERE id = 1;
2020-08-05 14:50:33.078 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:50:33 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator WHERE id = 1;
2020-08-05 14:50:46.613 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 14:50:46 | 耗时 1 ms | SQL 语句：
UPDATE a_administrator SET admin_name = '盖伦', dept_name = '开发部', account_pwd = '123', modifier = '1', mod_date = '2020-08-05T14:50:46.610' WHERE id = 1;
2020-08-05 14:50:46.633 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:50:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:50:46.634 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:50:46 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:50:50.876 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 14:50:50 | 耗时 0 ms | SQL 语句：
DELETE FROM a_administrator WHERE id = 2;
2020-08-05 14:50:50.905 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:50:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:50:50.907 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:50:50 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:51:00.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:51:00.025 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 14:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:51:00.021+0800');
2020-08-05 14:51:10.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:51:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:51:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:51:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:51:10.048 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 14:51:10.050 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 14:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T14:51:10.018+0800');
2020-08-05 14:51:16.242 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:52:00.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:52:00.022 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 14:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:52:00.019+0800');
2020-08-05 14:52:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:52:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:52:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:52:10.054 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-05 14:52:10.056 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 14:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-05T14:52:10.019+0800');
2020-08-05 14:52:16.244 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:53:00.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:53:00.013 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 14:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:53:00.010+0800');
2020-08-05 14:53:10.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:53:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:53:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:53:10.042 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:53:10.044 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 14:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:53:10.018+0800');
2020-08-05 14:53:16.246 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:54:00.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:54:00.022 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 14:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:54:00.019+0800');
2020-08-05 14:54:10.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:54:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:54:10.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 14:54:10.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 14:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T14:54:10.018+0800');
2020-08-05 14:54:16.252 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:54:19.532 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:54:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:54:19.702 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:54:19 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:54:19.705 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:54:19 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:55:00.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:55:00.023 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 14:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:55:00.020+0800');
2020-08-05 14:55:00.767 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 14:55:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:55:00.831 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:55:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:55:00.832 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:55:00 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:55:10.008 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:55:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:55:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:55:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:55:10.035 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 14:55:10.038 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 14:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T14:55:10.008+0800');
2020-08-05 14:55:16.251 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:55:38.721 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 14:55:38 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:55:38.817 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:55:38 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:55:38.819 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 14:55:38 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:56:00.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:56:00.026 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 14:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:56:00.022+0800');
2020-08-05 14:56:10.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:56:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:56:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:56:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:56:10.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 14:56:10.053 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 14:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T14:56:10.020+0800');
2020-08-05 14:56:16.253 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:57:00.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:57:00.024 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 14:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:57:00.020+0800');
2020-08-05 14:57:10.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:57:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:57:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:57:10.040 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 14:57:10.043 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 14:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T14:57:10.016+0800');
2020-08-05 14:57:16.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:58:00.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:58:00.021 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 14:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T14:58:00.018+0800');
2020-08-05 14:58:10.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:58:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:58:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:58:10.047 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 14:58:10.050 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 14:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T14:58:10.018+0800');
2020-08-05 14:58:16.257 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 14:58:26.231 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 14:58:26 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 14:58:26.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:58:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 14:58:26.315 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 14:58:26 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 14:59:00.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 14:59:00.023 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 14:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T14:59:00.020+0800');
2020-08-05 14:59:10.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 14:59:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 14:59:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 14:59:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 14:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 14:59:10.042 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 14:59:10.045 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 14:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T14:59:10.017+0800');
2020-08-05 14:59:16.259 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:00:00.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:00:00.025 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 15:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:00:00.020+0800');
2020-08-05 15:00:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:00:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:00:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:00:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:00:10.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:00:10.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T15:00:10.018+0800');
2020-08-05 15:00:16.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:01:00.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:01:00.023 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:01:00.020+0800');
2020-08-05 15:01:10.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:01:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:01:10.047 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:01:10.049 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T15:01:10.019+0800');
2020-08-05 15:01:16.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:02:00.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:02:00.015 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:02:00.011+0800');
2020-08-05 15:02:07.726 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:02:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:02:07.816 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:02:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:02:07.818 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:02:07 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:02:10.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:02:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:02:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:02:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:02:10.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:02:10.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T15:02:10.016+0800');
2020-08-05 15:02:16.152 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:02:16 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, state, creator, create_date, modifier, mod_date) VALUES ('165', '15', 12, '12', '12', 12, '12', 1, '1', '2020-08-05T15:02:16.149', '1', '2020-08-05T15:02:16.149');
2020-08-05 15:02:16.176 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:02:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:02:16.178 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:02:16 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:02:16.269 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:02:46.147 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:02:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:02:46.225 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:02:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:02:46.228 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:02:46 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:02:53.832 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:02:53 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, state, creator, create_date, modifier, mod_date) VALUES ('123', '1456', 123, '456', '13', 123, '46', 1, '1', '2020-08-05T15:02:53.830', '1', '2020-08-05T15:02:53.830');
2020-08-05 15:02:53.861 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:02:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:02:53.862 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:02:53 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:03:00.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:03:00.023 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:03:00.020+0800');
2020-08-05 15:03:10.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:03:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:03:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:03:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:03:10.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:03:10.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T15:03:10.016+0800');
2020-08-05 15:03:16.273 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:03:26.294 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:03:26 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:03:26.383 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:03:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:03:26.385 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:03:26 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:04:00.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:04:00.022 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:04:00.018+0800');
2020-08-05 15:04:10.043 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:04:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:04:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:04:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:04:10.070 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 15:04:10.073 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T15:04:10.043+0800');
2020-08-05 15:04:16.273 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596608999783_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:05:05.860 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8664 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:05:05.863 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:05:07.489 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:05:07.491 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:05:07.555 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-05 15:05:08.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c5559c6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5bc72b99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3fbfa2c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f474f3d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@553d2579' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$19499685] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:05:08.699 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:05:08.712 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:05:08.721 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:05:08.722 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:05:08.728 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:05:08.830 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:05:08.831 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2903 ms
2020-08-05 15:05:09.154 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:05:09.161 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:05:09.610 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:05:09.610 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:05:09.610 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:05:09.611 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:05:10.108 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:05:12.017 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:05:12.051 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:05:12.063 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:05:12.063 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:05:12.066 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:05:12.068 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:05:12.069 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596611112052'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:05:12.069 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:05:12.069 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:05:12.071 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1d06801f
2020-08-05 15:05:12.143 febs [main] INFO  p6spy - 2020-08-05 15:05:12 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:05:13.842 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:05:14.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:05:14.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:05:14.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:05:14.072 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:05:14.073 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:05:14.141 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c4be45f, org.springframework.security.web.context.SecurityContextPersistenceFilter@59929ac, org.springframework.security.web.header.HeaderWriterFilter@4b76251c, org.springframework.security.web.authentication.logout.LogoutFilter@6694fb1b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f9de1fd, org.springframework.security.web.session.ConcurrentSessionFilter@283ecb4b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f13756, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@696105c4, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5dc9d25a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4be7acd9, org.springframework.security.web.session.SessionManagementFilter@366b4a7b, org.springframework.security.web.access.ExceptionTranslationFilter@3ddac0b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@359ea595]
2020-08-05 15:05:14.190 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:05:14.205 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:05:14.206 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:05:14.570 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:05:15.178 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:05:15.192 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:05:15.257 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:05:15.277 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:05:15.292 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:05:15.321 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:05:15.324 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.253 seconds (JVM running for 11.187)
2020-08-05 15:05:15.347 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:05:15.348 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:05:15.348 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:05:15.348 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:05:15.348 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:05:15.843 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:05:15.844 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:05:15.858 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-05 15:05:15 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:05:15.860 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-05 15:05:16.277 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:05:16.288 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:05:16.289 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596608999783"'s failed in-progress jobs.
2020-08-05 15:05:16.295 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:05:16.307 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596611112052 started.
2020-08-05 15:05:16.313 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-05 15:05:16.381 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:05:39.965 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:4821343E4FDBAD8051E7816407D28DA0
2020-08-05 15:05:40.125 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A6FDC38DAE010D3564B7043F3B70970B
2020-08-05 15:05:43.325 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:05:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:05:43.406 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:05:43 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:05:43.418 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:05:43 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:05:43.922 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:05:43 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:05:44.081 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:05:44.043+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:05:44.102 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:05:44.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:05:44.110 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:05:44.116 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:05:44.120 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:05:44 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:05:46.777 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:05:46 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:05:46.789 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:05:46 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:06:00.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:06:00.054 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:06:00.038+0800');
2020-08-05 15:06:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:06:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:06:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:06:10.070 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-05 15:06:10.074 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 59, '2020-08-05T15:06:10.011+0800');
2020-08-05 15:06:16.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:07:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:07:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:07:00.022+0800');
2020-08-05 15:07:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:07:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:07:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:07:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:07:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-05 15:07:10.062 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-05T15:07:10.021+0800');
2020-08-05 15:07:16.385 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:08:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:08:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:08:00.021+0800');
2020-08-05 15:08:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:08:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:08:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:08:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:08:10.062 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-05 15:08:10.067 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-05T15:08:10.021+0800');
2020-08-05 15:08:16.386 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:09:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:09:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:09:00.022+0800');
2020-08-05 15:09:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:09:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:09:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:09:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:09:10.061 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 15:09:10.064 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-05T15:09:10.021+0800');
2020-08-05 15:09:16.388 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:10:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:10:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:10:00.023+0800');
2020-08-05 15:10:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:10:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:10:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:10:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:10:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:10:10.051 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 15:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T15:10:10.018+0800');
2020-08-05 15:10:16.391 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:11:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:11:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 15:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:11:00.022+0800');
2020-08-05 15:11:10.027 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:11:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:11:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:11:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:11:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:11:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:11:10.074 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-05 15:11:10.077 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 15:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-05T15:11:10.027+0800');
2020-08-05 15:11:16.397 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611112052_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:11:34.517 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20292 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:11:34.523 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:11:36.526 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:11:36.529 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:11:36.648 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94ms. Found 0 repository interfaces.
2020-08-05 15:11:37.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$941b53b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.522 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a8ce2e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e855a15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c33aab20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6c538eb2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e80f4dd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:37.845 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:11:38.407 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:11:38.422 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:11:38.431 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:11:38.432 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:11:38.439 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:11:38.556 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:11:38.557 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3965 ms
2020-08-05 15:11:38.929 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:11:38.937 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:11:39.386 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:11:39.386 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:11:39.386 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:11:39.387 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:11:39.884 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:11:41.791 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:11:41.825 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:11:41.838 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:11:41.838 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:11:41.841 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:11:41.843 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:11:41.843 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596611501827'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:11:41.843 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:11:41.843 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:11:41.845 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@727956bb
2020-08-05 15:11:41.914 febs [main] INFO  p6spy - 2020-08-05 15:11:41 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:11:43.745 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:11:43.982 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:11:43.983 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:11:44.055 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@575c23f1, org.springframework.security.web.context.SecurityContextPersistenceFilter@61ce238e, org.springframework.security.web.header.HeaderWriterFilter@2b0494a8, org.springframework.security.web.authentication.logout.LogoutFilter@455d04d2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4be1dce6, org.springframework.security.web.session.ConcurrentSessionFilter@21ab919c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c02b3cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@807c1e8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@361b3ca6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62f7d7bd, org.springframework.security.web.session.SessionManagementFilter@239d73ff, org.springframework.security.web.access.ExceptionTranslationFilter@446a692f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@163fbbc9]
2020-08-05 15:11:44.109 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:11:44.125 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:11:44.126 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:11:44.504 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:11:45.129 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:11:45.143 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:11:45.201 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:11:45.223 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:11:45.239 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:11:45.272 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:11:45.277 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 11.852 seconds (JVM running for 13.378)
2020-08-05 15:11:45.304 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:11:45.304 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:11:45.306 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:11:45.306 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:11:45.306 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:11:45.652 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-05 15:11:45 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:11:46.100 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:11:46.100 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:11:46.117 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-05 15:11:46.224 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:11:46.234 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:11:46.234 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596611112052"'s failed in-progress jobs.
2020-08-05 15:11:46.250 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596611501827 started.
2020-08-05 15:11:46.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:11:57.414 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C99322FE36A615F2A3AA8FD3B15077C8
2020-08-05 15:12:00.041 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:12:00.089 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:12:00.041+0800');
2020-08-05 15:12:00.728 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:12:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:12:00.810 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:12:00 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:12:00.823 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:12:00 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:12:01.342 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:12:01.495 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:12:01.461+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:12:01.506 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:12:01.510 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:12:01.513 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:12:01.519 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:12:01.524 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:12:01 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:12:04.113 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:12:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:12:04.126 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:12:04 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:12:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:12:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:12:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:12:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:12:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-05 15:12:10.085 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-05T15:12:10.023+0800');
2020-08-05 15:12:10.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:13:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:13:00.030 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:13:00.025+0800');
2020-08-05 15:13:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:13:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:13:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:13:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-05 15:13:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-05T15:13:10.021+0800');
2020-08-05 15:13:10.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:14:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:14:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:14:00.022+0800');
2020-08-05 15:14:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:14:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:14:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:14:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:14:10.055 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 15:14:10.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-05T15:14:10.019+0800');
2020-08-05 15:14:10.257 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:15:00.025 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:15:00.032 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:15:00.025+0800');
2020-08-05 15:15:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:15:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:15:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:15:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:15:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:15:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T15:15:10.010+0800');
2020-08-05 15:15:10.259 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:16:00.015 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:16:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:16:00.015+0800');
2020-08-05 15:16:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:16:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:16:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:16:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:16:10.040 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 15:16:10.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 15:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T15:16:10.009+0800');
2020-08-05 15:16:10.262 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:16:29.466 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:16:29 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:16:29.537 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:16:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:16:29.539 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:16:29 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:17:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:17:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 15:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:17:00.024+0800');
2020-08-05 15:17:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:17:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:17:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:17:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:17:10.076 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 15:17:10.079 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 15:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T15:17:10.045+0800');
2020-08-05 15:17:10.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:17:19.304 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:17:19 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:17:19.375 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:17:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:17:19.377 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:17:19 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:17:26.299 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:17:26 | 耗时 0 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, state, creator, create_date, modifier, mod_date) VALUES ('123', '123', 123, '123', '123', 123, '123', 1, '1', '2020-08-05T15:17:26.295', '1', '2020-08-05T15:17:26.295');
2020-08-05 15:17:26.332 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:17:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:17:26.334 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:17:26 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:18:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:18:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 15:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:18:00.020+0800');
2020-08-05 15:18:10.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:18:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:18:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:18:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:18:10.034 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 15:18:10.037 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 15:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T15:18:10.007+0800');
2020-08-05 15:18:10.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611501827_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:19:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:19:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 15:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:19:00.022+0800');
2020-08-05 15:19:16.394 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 10300 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:19:16.397 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:19:18.878 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:19:18.880 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:19:19.023 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126ms. Found 0 repository interfaces.
2020-08-05 15:19:19.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:19.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$61f58a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:19.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:19.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:19.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c90e7d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:19.887 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$80895f01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$353eb00c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c9ef6e9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5a1352be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:19:20.502 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:19:20.521 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:19:20.533 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:19:20.534 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:19:20.543 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:19:20.674 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:19:20.675 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4218 ms
2020-08-05 15:19:21.127 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:19:21.136 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:19:21.715 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:19:21.715 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:19:21.715 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:19:21.715 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:19:22.420 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:19:24.463 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:19:24.514 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:19:24.527 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:19:24.528 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:19:24.532 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:19:24.533 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:19:24.535 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596611964515'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:19:24.535 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:19:24.535 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:19:24.537 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@32513dea
2020-08-05 15:19:24.614 febs [main] INFO  p6spy - 2020-08-05 15:19:24 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:19:26.650 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:19:26.901 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:19:26.902 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:19:26.974 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c871ce4, org.springframework.security.web.context.SecurityContextPersistenceFilter@61246109, org.springframework.security.web.header.HeaderWriterFilter@3c82bac3, org.springframework.security.web.authentication.logout.LogoutFilter@5db90818, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@37b470df, org.springframework.security.web.session.ConcurrentSessionFilter@366b4a7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@337cb81d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17c34e62, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@f9de1fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d3b4e09, org.springframework.security.web.session.SessionManagementFilter@446a5aa5, org.springframework.security.web.access.ExceptionTranslationFilter@7cbfbcd1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3436d3d7]
2020-08-05 15:19:27.024 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:19:27.039 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:19:27.040 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:19:27.436 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:19:28.116 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:19:28.131 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:19:28.202 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:19:28.225 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:19:28.240 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:19:28.271 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:19:28.276 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.672 seconds (JVM running for 13.633)
2020-08-05 15:19:28.302 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:19:28.303 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:19:28.303 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:19:28.303 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:19:28.303 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:19:28.803 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:19:28.803 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:19:28.824 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-05 15:19:28 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:19:28.830 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-08-05 15:19:29.226 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:19:29.234 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:19:29.235 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596611501827"'s failed in-progress jobs.
2020-08-05 15:19:29.239 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:19:29.252 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596611964515 started.
2020-08-05 15:19:29.257 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:19:49.641 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E362DCD63BE94CBAB003CA6DDCB31B62
2020-08-05 15:20:00.053 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:20:00.095 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:20:00.052+0800');
2020-08-05 15:20:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:20:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:20:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:20:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:20:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:20:10.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:20:10.099 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：87 毫秒
2020-08-05 15:20:10.103 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 87, '2020-08-05T15:20:10.012+0800');
2020-08-05 15:20:17.259 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:21:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:21:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:21:00.024+0800');
2020-08-05 15:21:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:21:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:21:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:21:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-05 15:21:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-05T15:21:10.018+0800');
2020-08-05 15:21:17.263 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:22:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:22:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:22:00.021+0800');
2020-08-05 15:22:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:22:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:22:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:22:10.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 15:22:10.053 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-05T15:22:10.008+0800');
2020-08-05 15:22:17.264 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:22:53.934 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:4BF520965D1B64AC7943569D7014BF6B
2020-08-05 15:22:57.340 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:22:57 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:22:57.419 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:22:57 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:22:57.430 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:22:57 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:22:57.920 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:22:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:22:58.049 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:22:58.041+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:22:58.069 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:22:58.072 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:22:58.074 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:22:58.081 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:22:58.086 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:22:58 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:23:00.025 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:23:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:23:00.025+0800');
2020-08-05 15:23:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:23:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:23:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:23:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:23:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 15:23:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T15:23:10.020+0800');
2020-08-05 15:23:13.587 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:23:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:23:13.598 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:23:13 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:23:17.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:24:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:24:00.026 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:24:00.021+0800');
2020-08-05 15:24:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:24:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:24:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:24:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:24:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 15:24:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 15:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-05T15:24:10.019+0800');
2020-08-05 15:24:17.269 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596611964515_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:24:48.251 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14144 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:24:48.254 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:24:49.796 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:24:49.798 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:24:49.872 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-08-05 15:24:50.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d9d0091c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7041984b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$543a0f7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8ef6085] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30bbcf91' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2dc40337] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:24:50.985 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:24:51.000 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:24:51.008 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:24:51.008 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:24:51.015 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:24:51.115 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:24:51.116 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2794 ms
2020-08-05 15:24:51.435 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:24:51.443 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:24:51.901 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:24:51.902 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:24:51.902 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:24:51.902 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:24:52.378 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:24:54.299 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:24:54.331 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:24:54.342 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:24:54.343 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:24:54.346 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:24:54.348 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:24:54.348 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596612294332'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:24:54.348 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:24:54.348 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:24:54.350 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5896b9f5
2020-08-05 15:24:54.420 febs [main] INFO  p6spy - 2020-08-05 15:24:54 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:24:56.164 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:24:56.397 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:24:56.398 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:24:56.469 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fa6fb7f, org.springframework.security.web.context.SecurityContextPersistenceFilter@239d73ff, org.springframework.security.web.header.HeaderWriterFilter@76104df5, org.springframework.security.web.authentication.logout.LogoutFilter@1e01b195, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58afecfd, org.springframework.security.web.session.ConcurrentSessionFilter@4e9bd2c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64dcf763, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61ce238e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6f7b8ae1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2520010e, org.springframework.security.web.session.SessionManagementFilter@3f9e8af5, org.springframework.security.web.access.ExceptionTranslationFilter@446a692f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@686fb58a]
2020-08-05 15:24:56.516 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:24:56.530 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:24:56.532 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:24:56.894 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:24:57.507 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:24:57.521 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:24:57.587 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:24:57.609 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:24:57.624 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:24:57.672 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:24:57.676 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.203 seconds (JVM running for 11.095)
2020-08-05 15:24:57.698 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:24:57.699 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:24:57.699 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:24:57.699 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:24:57.699 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:24:58.253 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:24:58.253 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:24:58.270 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-05 15:24:58 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:24:58.272 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-05 15:24:58.611 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:24:58.622 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:24:58.622 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596611964515"'s failed in-progress jobs.
2020-08-05 15:24:58.639 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596612294332 started.
2020-08-05 15:24:58.644 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612294332_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:25:00.044 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:25:00.091 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T15:25:00.044+0800');
2020-08-05 15:25:08.785 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2F33B7D4097DC9B0501725CF820FCE94
2020-08-05 15:25:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:25:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:25:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:25:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:25:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:25:10.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:25:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:25:10.107 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：96 毫秒
2020-08-05 15:25:10.111 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 96, '2020-08-05T15:25:10.011+0800');
2020-08-05 15:25:10.643 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612294332_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:25:11.771 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:25:11 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:25:11.850 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:25:11 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:25:11.862 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:25:11 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:25:12.361 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:25:12.486 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:25:12.478+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:25:12.507 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:25:12.510 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:25:12.514 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:25:12.520 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:25:12.525 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:25:12 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:25:32.438 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:25:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:25:32.450 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:25:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:26:00.028 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:26:00.034 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:26:00.028+0800');
2020-08-05 15:26:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:26:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:26:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:26:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:26:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-05 15:26:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-05T15:26:10.021+0800');
2020-08-05 15:26:10.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612294332_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:27:01.462 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19512 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:27:01.465 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:27:02.968 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:27:02.970 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:27:03.042 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-08-05 15:27:03.596 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8a673d60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20d8cc8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4d143be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b98694c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2f054f70' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.855 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$de5b377b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:03.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:27:04.217 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:27:04.230 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:27:04.241 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:27:04.241 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:27:04.247 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:27:04.350 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:27:04.350 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2819 ms
2020-08-05 15:27:04.681 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:27:04.689 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:27:05.150 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:27:05.150 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:27:05.151 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:27:05.151 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:27:05.631 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:27:07.541 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:27:07.572 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:27:07.586 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:27:07.586 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:27:07.590 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:27:07.591 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:27:07.592 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596612427574'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:27:07.592 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:27:07.592 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:27:07.594 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7ac1b6c0
2020-08-05 15:27:07.673 febs [main] INFO  p6spy - 2020-08-05 15:27:07 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:27:09.412 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:27:09.654 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:27:09.725 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5dc9d25a, org.springframework.security.web.context.SecurityContextPersistenceFilter@337cb81d, org.springframework.security.web.header.HeaderWriterFilter@446a5aa5, org.springframework.security.web.authentication.logout.LogoutFilter@414d2821, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@8d7718e, org.springframework.security.web.session.ConcurrentSessionFilter@70819ba8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59929ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6bf28f61, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7c871ce4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@686fb58a, org.springframework.security.web.session.SessionManagementFilter@4b76251c, org.springframework.security.web.access.ExceptionTranslationFilter@2f112ade, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e47a71e]
2020-08-05 15:27:09.772 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:27:09.786 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:27:09.788 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:27:10.156 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:27:10.808 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:27:10.822 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:27:10.881 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:27:10.901 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:27:10.914 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:27:10.942 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:27:10.946 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.27 seconds (JVM running for 11.376)
2020-08-05 15:27:10.967 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:27:10.968 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:27:10.968 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:27:10.968 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:27:10.968 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:27:11.414 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:27:11.414 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:27:11.427 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-05 15:27:11 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:27:11.430 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 15:27:11.903 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:27:11.914 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:27:11.914 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596612294332"'s failed in-progress jobs.
2020-08-05 15:27:11.919 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:27:11.932 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596612427574 started.
2020-08-05 15:27:11.936 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612427574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:27:11.969 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:27:12.009 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:27:12 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T15:27:11.969+0800');
2020-08-05 15:27:27.669 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C75632DFE6DB000A24ACEA1A6A569946
2020-08-05 15:27:30.839 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:27:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:27:30.921 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:27:30 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:27:30.933 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:27:30 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:27:31.403 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:27:31.558 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:27:31.521+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:27:31.579 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:27:31.583 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:27:31.587 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:27:31.593 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:27:31.597 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:27:31 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:27:34.745 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:27:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:27:34.759 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:27:34 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, state, creator, create_date, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:28:00.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:28:00.027 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:28:00.023+0800');
2020-08-05 15:28:10.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:28:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:28:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:28:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:28:10.076 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-05 15:28:10.080 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-05T15:28:10.021+0800');
2020-08-05 15:28:11.937 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612427574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:29:00.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:29:00.030 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:29:00.025+0800');
2020-08-05 15:29:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:29:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:29:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:29:10.051 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 15:29:10.054 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T15:29:10.019+0800');
2020-08-05 15:29:11.942 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612427574_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:29:55.725 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14344 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:29:55.729 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:29:57.333 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:29:57.335 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:29:57.408 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-08-05 15:29:57.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$17ac9633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae1e2562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$92169c91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$46cbed9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7aaad0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6ba0904e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:29:58.570 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:29:58.585 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:29:58.594 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:29:58.594 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:29:58.601 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:29:58.713 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:29:58.713 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2903 ms
2020-08-05 15:29:59.050 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:29:59.057 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:29:59.544 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:29:59.544 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:29:59.544 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:29:59.544 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:30:00.044 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:30:02.327 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:30:02.376 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:30:02.389 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:30:02.389 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:30:02.393 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:30:02.395 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:30:02.396 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596612602377'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:30:02.396 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:30:02.396 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:30:02.397 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@520c3dcb
2020-08-05 15:30:02.470 febs [main] INFO  p6spy - 2020-08-05 15:30:02 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:30:04.184 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:30:04.414 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:30:04.415 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:30:04.415 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:30:04.415 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:30:04.415 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:30:04.415 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:30:04.481 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@282c5075, org.springframework.security.web.context.SecurityContextPersistenceFilter@8ecc457, org.springframework.security.web.header.HeaderWriterFilter@d65e744, org.springframework.security.web.authentication.logout.LogoutFilter@a251135, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@336070ab, org.springframework.security.web.session.ConcurrentSessionFilter@10301d6f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f1184e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c82bac3, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@10f10230, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ed35f24, org.springframework.security.web.session.SessionManagementFilter@1a85e86e, org.springframework.security.web.access.ExceptionTranslationFilter@1c4aa701, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@654db80b]
2020-08-05 15:30:04.536 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:30:04.554 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:30:04.556 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:30:04.925 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:30:05.557 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:30:05.570 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:30:05.625 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:30:05.645 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:30:05.658 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:30:05.688 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:30:05.693 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.71 seconds (JVM running for 11.695)
2020-08-05 15:30:05.715 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:30:05.715 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:30:05.715 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:30:05.715 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:30:05.715 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:30:06.198 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:30:06.198 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:30:06.215 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 15:30:06 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:30:06.217 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-05 15:30:06.646 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:30:06.654 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:30:06.654 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596612427574"'s failed in-progress jobs.
2020-08-05 15:30:06.660 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:30:06.668 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596612602377 started.
2020-08-05 15:30:06.673 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612602377_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:30:06.708 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:30:06.752 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:30:06 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:30:06.708+0800');
2020-08-05 15:30:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:30:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:30:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:30:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:30:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:30:10.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:30:10.110 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：91 毫秒
2020-08-05 15:30:10.114 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 91, '2020-08-05T15:30:10.019+0800');
2020-08-05 15:30:14.622 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:480AC5A0DB1B3211AE2513D689B8B36B
2020-08-05 15:30:17.841 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:30:17 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:30:17.920 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:30:17 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:30:17.932 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:30:17 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:30:18.427 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:30:18.559 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:30:18.550+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:30:18.581 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:30:18.585 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:30:18.590 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:30:18.596 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:30:18.601 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:30:18 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:30:18.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612602377_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:30:21.003 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:30:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:30:21.014 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:30:21 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:31:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:31:00.032 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:31:00.026+0800');
2020-08-05 15:31:13.440 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11344 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:31:13.443 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:31:14.963 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:31:14.965 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:31:15.036 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-05 15:31:15.569 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$34f451eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.661 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cb65e11a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$af5e5849] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.808 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6413a954] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1ac730cd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$88e84c06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:15.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:31:16.170 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:31:16.184 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:31:16.192 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:31:16.192 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:31:16.199 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:31:16.301 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:31:16.302 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2793 ms
2020-08-05 15:31:16.627 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:31:16.634 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:31:17.093 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:31:17.093 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:31:17.093 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:31:17.093 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:31:17.571 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:31:19.445 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:31:19.478 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:31:19.490 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:31:19.490 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:31:19.493 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:31:19.495 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:31:19.496 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596612679479'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:31:19.496 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:31:19.496 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:31:19.497 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7f77e065
2020-08-05 15:31:19.568 febs [main] INFO  p6spy - 2020-08-05 15:31:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:31:21.302 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:31:21.532 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:31:21.533 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:31:21.533 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:31:21.533 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:31:21.533 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:31:21.533 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:31:21.600 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19d9ba89, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c82bac3, org.springframework.security.web.header.HeaderWriterFilter@1ecec098, org.springframework.security.web.authentication.logout.LogoutFilter@4e9bd2c8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d405fe5, org.springframework.security.web.session.ConcurrentSessionFilter@694b1ddb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@446a5aa5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a30dbc0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@dbca149, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@484876a1, org.springframework.security.web.session.SessionManagementFilter@8ecc457, org.springframework.security.web.access.ExceptionTranslationFilter@5ef591af, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@362b384c]
2020-08-05 15:31:21.650 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:31:21.667 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:31:21.668 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:31:22.057 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:31:22.754 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:31:22.767 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:31:22.829 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:31:22.849 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:31:22.862 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:31:22.895 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:31:22.899 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.244 seconds (JVM running for 11.199)
2020-08-05 15:31:22.922 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:31:22.922 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:31:22.922 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:31:22.922 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:31:22.922 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:31:23.488 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:31:23.489 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:31:23.503 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-05 15:31:23 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:31:23.507 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-05 15:31:23.850 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:31:23.870 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596612679479 started.
2020-08-05 15:31:23.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:31:28.291 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C507F83A44DD4B1C5FDD00456AD821D6
2020-08-05 15:31:31.275 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:31:31 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:31:31.357 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:31:31 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:31:31.369 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:31:31 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:31:31.853 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:31:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:31:32.027 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:31:31.981+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:31:32.050 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:31:32.054 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:31:32.059 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:31:32.065 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:31:32.069 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:31:32 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:31:34.087 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:31:34 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:31:34.098 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:31:34 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:31:38.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:31:38.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596612602377"'s failed in-progress jobs.
2020-08-05 15:31:38.881 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:31:42.251 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:31:42 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, account_num, account_pwd, wechart_num, create_date, state, creator, modifier, mod_date) VALUES ('123水水水水水', '', '', '', '', '2020-08-05T15:31:42.245', 1, '1', '1', '2020-08-05T15:31:42.245');
2020-08-05 15:31:42.289 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:31:42 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:31:42.291 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:31:42 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:32:00.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:32:00.061 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:32:00.046+0800');
2020-08-05 15:32:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:32:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:32:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:32:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:32:10.082 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-08-05 15:32:10.087 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 60, '2020-08-05T15:32:10.022+0800');
2020-08-05 15:32:11.877 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:33:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:33:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:33:00.023+0800');
2020-08-05 15:33:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:33:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:33:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:33:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-05 15:33:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-05T15:33:10.020+0800');
2020-08-05 15:33:11.905 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:34:00.028 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:34:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:34:00.028+0800');
2020-08-05 15:34:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:34:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:34:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:34:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 15:34:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-05T15:34:10.018+0800');
2020-08-05 15:34:11.886 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:35:00.013 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:35:00.019 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:35:00.013+0800');
2020-08-05 15:35:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:35:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:35:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:35:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:35:10.067 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-05 15:35:10.072 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-05T15:35:10.022+0800');
2020-08-05 15:35:11.889 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612679479_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:36:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:36:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:36:00.024+0800');
2020-08-05 15:36:11.608 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 2268 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:36:11.613 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:36:13.252 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:36:13.254 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:36:13.326 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-08-05 15:36:13.845 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:13.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6bfe05f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:13.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:13.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:13.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d316f8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$8129e6bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$35df37c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3cdff901' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ab3da7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:36:14.495 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:36:14.509 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:36:14.518 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:36:14.519 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:36:14.528 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:36:14.648 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:36:14.648 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2968 ms
2020-08-05 15:36:15.046 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:36:15.062 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:36:15.881 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:36:15.881 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:36:15.881 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:36:15.881 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:36:16.497 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:36:19.331 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:36:19.374 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:36:19.389 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:36:19.389 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:36:19.410 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:36:19.412 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:36:19.413 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596612979376'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:36:19.413 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:36:19.413 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:36:19.414 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1d1b3620
2020-08-05 15:36:19.486 febs [main] INFO  p6spy - 2020-08-05 15:36:19 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:36:21.735 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:36:22.028 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:36:22.029 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:36:22.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58afecfd, org.springframework.security.web.context.SecurityContextPersistenceFilter@18f13756, org.springframework.security.web.header.HeaderWriterFilter@366b4a7b, org.springframework.security.web.authentication.logout.LogoutFilter@49ea13b6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7c871ce4, org.springframework.security.web.session.ConcurrentSessionFilter@76104df5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ac3d530, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5edd9b4f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2c4be45f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d79d187, org.springframework.security.web.session.SessionManagementFilter@70819ba8, org.springframework.security.web.access.ExceptionTranslationFilter@628bcf2c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bbb48dd]
2020-08-05 15:36:22.157 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:36:22.172 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:36:22.174 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:36:22.544 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:36:23.173 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:36:23.186 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:36:23.241 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:36:23.260 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:36:23.275 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:36:23.304 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:36:23.308 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.479 seconds (JVM running for 13.446)
2020-08-05 15:36:23.330 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:36:23.330 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:36:23.330 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:36:23.330 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:36:23.330 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:36:23.760 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:36:23.761 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:36:23.776 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-05 15:36:23 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:36:23.776 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-05 15:36:24.261 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:36:24.271 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:36:24.271 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596612679479"'s failed in-progress jobs.
2020-08-05 15:36:24.276 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 15:36:24.286 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596612979376 started.
2020-08-05 15:36:24.291 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612979376_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:36:36.024 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:51D606E4587997024EEA25CF4627672C
2020-08-05 15:36:39.305 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:36:39 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:36:39.441 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:36:39 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:36:39.457 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:36:39 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:36:40.190 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:36:40.414 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:36:40.366+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:36:40.438 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:36:40.443 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:36:40.447 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:36:40.454 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:36:40.458 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:36:40 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:36:43.841 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:36:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:36:43.853 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:36:43 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:37:00.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:37:00.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T15:37:00.036+0800');
2020-08-05 15:37:10.107 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:37:10.127 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:37:10.147 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:37:10.191 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:37:10.196 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-08-05 15:37:10.203 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 89, '2020-08-05T15:37:10.107+0800');
2020-08-05 15:37:12.291 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596612979376_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:38:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:38:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:38:00.021+0800');
2020-08-05 15:38:10.013 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:38:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:38:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:38:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-05 15:38:10.053 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-05T15:38:10.013+0800');
2020-08-05 15:38:17.815 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6212 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:38:17.819 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:38:19.326 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:38:19.328 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:38:19.397 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57ms. Found 0 repository interfaces.
2020-08-05 15:38:19.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:19.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8538b622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:19.997 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1baa4551] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$ffa2bc80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b4580d8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2c18a3ea' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d92cb03d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:38:20.523 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:38:20.537 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:38:20.545 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:38:20.546 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:38:20.553 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:38:20.662 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:38:20.662 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2778 ms
2020-08-05 15:38:20.982 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:38:20.990 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:38:21.456 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:38:21.456 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:38:21.456 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:38:21.456 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:38:21.952 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:38:23.928 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:38:23.958 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:38:23.969 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:38:23.969 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:38:23.973 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:38:23.974 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:38:23.975 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596613103959'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:38:23.975 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:38:23.975 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:38:23.976 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@323efafe
2020-08-05 15:38:24.049 febs [main] INFO  p6spy - 2020-08-05 15:38:24 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:38:25.788 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:38:26.034 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:38:26.035 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:38:26.035 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:38:26.035 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:38:26.035 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:38:26.109 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c02b3cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@87fc0fc, org.springframework.security.web.header.HeaderWriterFilter@7b8fcdf2, org.springframework.security.web.authentication.logout.LogoutFilter@28c7fd9d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3c17794e, org.springframework.security.web.session.ConcurrentSessionFilter@59cde35, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c335b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c8b37a8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@61ce238e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d8fd373, org.springframework.security.web.session.SessionManagementFilter@c29b0dc, org.springframework.security.web.access.ExceptionTranslationFilter@5c9e6d95, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21ab919c]
2020-08-05 15:38:26.156 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:38:26.170 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:38:26.172 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:38:26.543 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:38:27.173 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:38:27.187 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:38:27.252 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:38:27.273 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:38:27.288 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:38:27.318 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:38:27.323 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.275 seconds (JVM running for 11.212)
2020-08-05 15:38:27.345 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:38:27.345 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:38:27.345 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:38:27.345 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:38:27.345 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:38:27.930 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:38:27.930 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:38:27.943 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-05 15:38:27 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:38:27.945 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-08-05 15:38:28.274 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:38:28.295 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596613103959 started.
2020-08-05 15:38:28.301 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613103959_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:38:34.715 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:0AC9A2A83A26D503490A352AA59D7723
2020-08-05 15:38:37.996 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:38:37 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:38:38.083 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:38:38.096 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:38:38.600 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:38:38.751 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:38:38.714+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:38:38.773 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:38:38.777 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:38:38.782 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:38:38.788 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:38:38.792 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:38:38 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:38:41.576 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:38:41 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:38:41.589 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:38:41 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:38:43.297 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613103959_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:38:43.297 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613103959_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596612979376"'s failed in-progress jobs.
2020-08-05 15:38:53.525 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:38:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:38:53.583 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:38:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:38:53.586 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:38:53 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:38:54.683 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:38:54 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:38:54.745 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:38:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:38:54.750 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:38:54 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:39:00.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:39:00.053 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:39:00.038+0800');
2020-08-05 15:39:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:39:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:39:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:39:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:39:10.074 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-05 15:39:10.078 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 54, '2020-08-05T15:39:10.020+0800');
2020-08-05 15:39:16.302 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613103959_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:39:29.247 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 9028 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 15:39:29.250 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 15:39:30.788 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 15:39:30.790 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 15:39:30.860 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-05 15:39:31.378 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$38f7fcb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cf698bdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$b362030e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$68175419] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.636 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1df5c7e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8cebf6cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.643 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 15:39:31.994 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 15:39:32.010 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 15:39:32.020 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 15:39:32.020 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 15:39:32.027 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 15:39:32.131 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 15:39:32.131 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2810 ms
2020-08-05 15:39:32.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 15:39:32.458 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 15:39:32.923 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 15:39:32.923 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 15:39:32.923 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 15:39:32.923 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 15:39:33.396 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 15:39:35.280 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 15:39:35.310 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 15:39:35.322 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 15:39:35.322 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 15:39:35.325 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 15:39:35.326 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 15:39:35.327 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596613175311'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 15:39:35.327 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 15:39:35.327 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 15:39:35.329 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4e26564d
2020-08-05 15:39:35.405 febs [main] INFO  p6spy - 2020-08-05 15:39:35 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 15:39:37.143 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 15:39:37.384 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 15:39:37.385 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 15:39:37.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 15:39:37.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 15:39:37.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 15:39:37.386 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 15:39:37.457 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@282c5075, org.springframework.security.web.context.SecurityContextPersistenceFilter@8ecc457, org.springframework.security.web.header.HeaderWriterFilter@d65e744, org.springframework.security.web.authentication.logout.LogoutFilter@a251135, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@336070ab, org.springframework.security.web.session.ConcurrentSessionFilter@10301d6f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f1184e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c82bac3, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@10f10230, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ed35f24, org.springframework.security.web.session.SessionManagementFilter@1a85e86e, org.springframework.security.web.access.ExceptionTranslationFilter@1c4aa701, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@654db80b]
2020-08-05 15:39:37.509 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 15:39:37.524 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 15:39:37.525 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 15:39:37.946 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 15:39:38.644 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 15:39:38.660 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 15:39:38.748 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 15:39:38.783 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 15:39:38.801 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 15:39:38.837 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 15:39:38.842 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.318 seconds (JVM running for 11.272)
2020-08-05 15:39:38.870 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 15:39:38.870 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 15:39:38.870 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 15:39:38.870 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 15:39:38.870 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 15:39:39.348 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 15:39:39.348 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 15:39:39.362 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 15:39:39 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 15:39:39.364 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 15:39:39.785 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 15:39:39.796 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 15:39:39.796 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596613103959"'s failed in-progress jobs.
2020-08-05 15:39:39.802 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596613175311 started.
2020-08-05 15:39:39.809 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:39:43.335 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:26DF3656CE794C6F8625854BFE316600
2020-08-05 15:39:46.261 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:39:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 15:39:46.354 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:39:46 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 15:39:46.367 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:39:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 15:39:46.892 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:39:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:39:47.057 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T15:39:47.013+0800' WHERE (USERNAME = 'admin');
2020-08-05 15:39:47.070 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 15:39:47.075 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:39:47.078 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 15:39:47.085 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 15:39:47.090 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:39:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 15:39:49.360 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:39:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:39:49.374 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:39:49 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:39:54.314 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:39:54 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, account_num, account_pwd, wechart_num, create_time, create_date, state, creator, modifier, mod_date) VALUES ('123', '', '', '', '', '2020-08-31T15:39:54.305', '2020-08-05T15:39:54.310', 1, '1', '1', '2020-08-05T15:39:54.311');
2020-08-05 15:39:54.349 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:39:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:39:54.352 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:39:54 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:40:00.027 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:40:00.043 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T15:40:00.027+0800');
2020-08-05 15:40:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:40:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:40:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:40:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:40:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:40:10.075 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-08-05 15:40:10.079 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 63, '2020-08-05T15:40:10.012+0800');
2020-08-05 15:40:15.809 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:40:48.040 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:40:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:48.042 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:40:48 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:40:49.334 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:40:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:49.336 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:40:49 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 5,5;
2020-08-05 15:40:51.149 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:40:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:51.151 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:40:51 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:40:55.420 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:40:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:55.423 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:40:55 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 5,5;
2020-08-05 15:40:56.796 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:40:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:56.798 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:40:56 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:40:59.805 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:40:59 | 耗时 0 ms | SQL 语句：
DELETE FROM a_administrator WHERE id = 5;
2020-08-05 15:40:59.843 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:40:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:40:59.845 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 15:40:59 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:41:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:41:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:41:00.014+0800');
2020-08-05 15:41:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:41:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:41:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:41:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:41:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-05 15:41:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-05T15:41:10.011+0800');
2020-08-05 15:41:13.132 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:41:13 | 耗时 1 ms | SQL 语句：
DELETE FROM a_administrator WHERE id IN (3, 4, 6, 7);
2020-08-05 15:41:13.166 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:41:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:41:13.169 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:41:13 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:41:15.810 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:41:38.200 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:41:38 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, create_time, create_date, state, creator, modifier, mod_date) VALUES ('艾瑞利亚', '艾欧尼亚', 231561, '19338', '23123', 120, '115315', '2020-08-05T15:41:38.193', '2020-08-05T15:41:38.195', 1, '1', '1', '2020-08-05T15:41:38.195');
2020-08-05 15:41:38.232 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:41:38 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:41:38.234 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,5;
2020-08-05 15:42:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:42:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:42:00.022+0800');
2020-08-05 15:42:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:42:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:42:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:42:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:42:10.037 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:42:10.041 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T15:42:10.008+0800');
2020-08-05 15:42:15.812 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:43:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:43:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:43:00.023+0800');
2020-08-05 15:43:10.010 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:43:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:43:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:43:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:43:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 15:43:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T15:43:10.010+0800');
2020-08-05 15:43:15.815 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:44:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:44:00.052 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T15:44:00.046+0800');
2020-08-05 15:44:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:44:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:44:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:44:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:44:10.062 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-05 15:44:10.067 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 15:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-05T15:44:10.021+0800');
2020-08-05 15:44:15.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:44:31.980 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:44:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:44:32.054 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:44:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:44:32.056 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:44:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:45:00.010 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:45:00.014 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 15:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:45:00.010+0800');
2020-08-05 15:45:08.917 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:45:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:45:08.996 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:45:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:45:08.999 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:45:08 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:45:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:45:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:45:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:45:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:45:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-05 15:45:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 15:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-05T15:45:10.011+0800');
2020-08-05 15:45:15.825 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:46:00.012 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:46:00.017 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 15:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:46:00.012+0800');
2020-08-05 15:46:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:46:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:46:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:46:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:46:10.038 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 15:46:10.042 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 15:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T15:46:10.008+0800');
2020-08-05 15:46:15.829 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:46:32.517 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:46:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:46:32.602 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:46:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:46:32.605 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:46:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:47:00.013 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:47:00.018 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 15:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:47:00.013+0800');
2020-08-05 15:47:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:47:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:47:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:47:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:47:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 15:47:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 15:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T15:47:10.009+0800');
2020-08-05 15:47:15.831 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:47:22.706 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:47:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:47:22.775 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:47:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:47:22.778 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 15:47:22 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:48:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:48:00.015 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 15:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:48:00.011+0800');
2020-08-05 15:48:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:48:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:48:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:48:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:48:10.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:48:10.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T15:48:10.009+0800');
2020-08-05 15:48:10.821 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:48:10.894 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:48:10.896 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:48:15.833 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:48:30.376 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:48:30 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:48:30.476 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:48:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:48:30.478 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:48:30 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:49:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:49:00.027 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 15:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:49:00.024+0800');
2020-08-05 15:49:10.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:49:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:49:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:49:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:49:10.039 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 15:49:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 15:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T15:49:10.010+0800');
2020-08-05 15:49:15.838 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:50:00.011 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:50:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 15:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:50:00.011+0800');
2020-08-05 15:50:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:50:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:50:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:50:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:50:10.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:50:10.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 15:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T15:50:10.007+0800');
2020-08-05 15:50:15.840 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:50:32.585 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:50:32 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:50:32.742 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:50:32 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:50:32.745 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:50:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:50:55.630 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:50:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:50:55.706 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:50:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:50:55.707 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:50:55 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:51:00.012 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:51:00.017 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 15:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:51:00.012+0800');
2020-08-05 15:51:09.356 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:51:09 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:51:09.427 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:51:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:51:09.429 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:51:09 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:51:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:51:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:51:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:51:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:51:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 15:51:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 15:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T15:51:10.009+0800');
2020-08-05 15:51:15.844 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:51:32.762 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:51:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:51:32.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:51:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:51:32.843 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:51:32 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:51:58.152 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:51:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:51:58.227 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:51:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:51:58.228 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:51:58 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:52:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:52:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 15:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:52:00.013+0800');
2020-08-05 15:52:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:52:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:52:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:52:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:52:10.034 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 15:52:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 15:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T15:52:10.009+0800');
2020-08-05 15:52:15.846 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:53:00.019 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:53:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 15:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:53:00.019+0800');
2020-08-05 15:53:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:53:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:53:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:53:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:53:10.036 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:53:10.039 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 15:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T15:53:10.008+0800');
2020-08-05 15:53:13.892 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:53:13 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:53:13.971 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:53:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:53:13.973 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:53:13 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:53:15.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:53:50.072 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 15:53:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:53:50.142 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:53:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:53:50.143 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:53:50 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:54:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:54:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 15:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:54:00.019+0800');
2020-08-05 15:54:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:54:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:54:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:54:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:54:10.036 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 15:54:10.039 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 15:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T15:54:10.009+0800');
2020-08-05 15:54:15.850 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:54:38.293 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:54:38 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:54:38.381 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:54:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:54:38.384 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:54:38 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:55:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:55:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 15:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:55:00.020+0800');
2020-08-05 15:55:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:55:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:55:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:55:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:55:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:55:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-05 15:55:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 15:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-05T15:55:10.010+0800');
2020-08-05 15:55:15.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:56:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:56:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 15:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:56:00.019+0800');
2020-08-05 15:56:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:56:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:56:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:56:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:56:10.036 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 15:56:10.039 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 15:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T15:56:10.008+0800');
2020-08-05 15:56:15.856 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:56:46.791 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:56:46 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:56:46.869 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:56:46 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:56:46.871 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 15:56:46 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:57:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:57:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 15:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:57:00.019+0800');
2020-08-05 15:57:04.426 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 15:57:04 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:57:04.497 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:57:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:57:04.498 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 15:57:04 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:57:10.008 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:57:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:57:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:57:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:57:10.035 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 15:57:10.038 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 15:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T15:57:10.008+0800');
2020-08-05 15:57:15.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:58:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:58:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 15:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T15:58:00.019+0800');
2020-08-05 15:58:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:58:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:58:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:58:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:58:10.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 15:58:10.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 15:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T15:58:10.008+0800');
2020-08-05 15:58:15.861 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 15:58:34.971 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 15:58:34 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:58:35.058 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:58:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:58:35.060 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 15:58:35 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:59:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 15:59:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 15:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T15:59:00.021+0800');
2020-08-05 15:59:06.253 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 15:59:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 15:59:06.330 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:59:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 15:59:06.332 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 15:59:06 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 15:59:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 15:59:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 15:59:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 15:59:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 15:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 15:59:10.036 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 15:59:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 15:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T15:59:10.009+0800');
2020-08-05 15:59:15.863 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:00:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:00:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:00:00.020+0800');
2020-08-05 16:00:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:00:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:00:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:00:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:00:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:00:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T16:00:10.011+0800');
2020-08-05 16:00:15.865 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:00:20.904 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:00:20 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:00:20.979 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:00:20 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:00:20.980 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:00:20 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:01:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:01:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:01:00.020+0800');
2020-08-05 16:01:10.007 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:01:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:01:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:01:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:01:10.032 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:01:10.034 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T16:01:10.007+0800');
2020-08-05 16:01:15.866 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:01:17.240 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:01:17 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:01:17.300 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:01:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:01:17.302 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:01:17 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:01:25.863 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:01:25 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:01:25.930 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:01:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:01:25.932 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:01:25 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:01:41.587 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:01:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:01:41.666 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:01:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:01:41.668 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:01:41 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:02:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:02:00.022 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:02:00.019+0800');
2020-08-05 16:02:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:02:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:02:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:02:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:02:10.034 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:02:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T16:02:10.009+0800');
2020-08-05 16:02:15.874 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:03:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:03:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:03:00.020+0800');
2020-08-05 16:03:10.007 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:03:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:03:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:03:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:03:10.035 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 16:03:10.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T16:03:10.007+0800');
2020-08-05 16:03:15.878 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:04:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:04:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:04:00.020+0800');
2020-08-05 16:04:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:04:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:04:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:04:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:04:10.032 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:04:10.034 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:04:10.008+0800');
2020-08-05 16:04:15.880 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:05:00.036 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:05:00.043 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:05:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:05:00.036+0800');
2020-08-05 16:05:09.246 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:05:09 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:05:09.396 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:05:09 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:05:09.399 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:05:09 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:05:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:05:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:05:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:05:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:05:10.036 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:05:10.039 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T16:05:10.010+0800');
2020-08-05 16:05:15.883 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:06:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:06:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:06:00.021+0800');
2020-08-05 16:06:10.009 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:06:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:06:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:06:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:06:10.037 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 16:06:10.039 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T16:06:10.009+0800');
2020-08-05 16:06:15.886 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:07:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:07:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:07:00.025+0800');
2020-08-05 16:07:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:07:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:07:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:07:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:07:10.032 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 16:07:10.035 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 16:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T16:07:10.009+0800');
2020-08-05 16:07:15.887 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:08:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:08:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 16:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:08:00.021+0800');
2020-08-05 16:08:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:08:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:08:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:08:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:08:10.032 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:08:10.035 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 16:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:08:10.008+0800');
2020-08-05 16:08:15.889 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:09:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:09:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 16:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:09:00.010+0800');
2020-08-05 16:09:10.005 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:09:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:09:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:09:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:09:10.035 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 16:09:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 16:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T16:09:10.005+0800');
2020-08-05 16:09:15.890 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:09:23.999 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:09:23 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:09:24.069 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:09:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:09:24.071 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:09:24 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:10:00.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:10:00.015 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:10:00.010+0800');
2020-08-05 16:10:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:10:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:10:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:10:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:10:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:10:10.035 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T16:10:10.008+0800');
2020-08-05 16:10:15.892 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:10:22.598 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:10:22 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:10:22.669 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:10:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:10:22.671 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:10:22 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:11:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:11:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:11:00.020+0800');
2020-08-05 16:11:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:11:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:11:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:11:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:11:10.036 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:11:10.038 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:11:10.012+0800');
2020-08-05 16:11:15.893 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:11:22.713 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:11:22 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:11:22.784 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:11:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:11:22.786 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:11:22 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:12:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:12:00.013 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:12:00.010+0800');
2020-08-05 16:12:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:12:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:12:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:12:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:12:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:12:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T16:12:10.017+0800');
2020-08-05 16:12:15.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:12:33.098 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:12:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:12:33.167 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:12:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:12:33.169 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:12:33 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:12:48.045 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:12:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:12:48.108 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:12:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:12:48.110 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:12:48 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:13:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:13:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:13:00.010+0800');
2020-08-05 16:13:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:13:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:13:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:13:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 16:13:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T16:13:10.020+0800');
2020-08-05 16:13:15.898 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:14:00.010 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:14:00.014 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:14:00.010+0800');
2020-08-05 16:14:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:14:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:14:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:14:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:14:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:14:10.020+0800');
2020-08-05 16:14:15.900 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:15:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:15:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:15:00.011+0800');
2020-08-05 16:15:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:15:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:15:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:15:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:15:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:15:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T16:15:10.019+0800');
2020-08-05 16:15:15.909 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:15:31.486 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:15:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:15:31.581 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:15:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:15:31.583 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:15:31 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:16:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:16:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:16:00.023+0800');
2020-08-05 16:16:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:16:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:16:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:16:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:16:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:16:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:16:10.017+0800');
2020-08-05 16:16:15.913 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:16:17.713 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:16:17 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:16:17.784 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:16:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:16:17.786 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:16:17 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:17:00.009 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:17:00.014 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:17:00.009+0800');
2020-08-05 16:17:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:17:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:17:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:17:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:17:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 16:17:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 16:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T16:17:10.018+0800');
2020-08-05 16:17:15.916 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:17:35.989 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:17:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:17:36.105 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:17:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:17:36.107 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:17:36 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:18:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:18:00.021 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 16:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:18:00.019+0800');
2020-08-05 16:18:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:18:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:18:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:18:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:18:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 16:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T16:18:10.019+0800');
2020-08-05 16:18:15.917 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:18:47.812 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:18:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:18:47.883 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:18:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:18:47.885 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:18:47 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:19:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:19:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 16:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:19:00.022+0800');
2020-08-05 16:19:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:19:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:19:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:19:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:19:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 16:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:19:10.016+0800');
2020-08-05 16:19:15.920 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:20:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:20:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:20:00.020+0800');
2020-08-05 16:20:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:20:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:20:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:20:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:20:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T16:20:10.016+0800');
2020-08-05 16:20:15.924 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:20:37.381 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:20:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:20:37.460 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:20:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:20:37.462 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:20:37 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:21:00.009 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:21:00.012 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:21:00.009+0800');
2020-08-05 16:21:10.015 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:21:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:21:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:21:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:21:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:21:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T16:21:10.015+0800');
2020-08-05 16:21:15.927 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:22:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:22:00.014 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:22:00.011+0800');
2020-08-05 16:22:03.752 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:22:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:22:03.869 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:22:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:22:03.871 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:22:03 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:22:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:22:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:22:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:22:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:22:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:22:10.043 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:22:10.017+0800');
2020-08-05 16:22:15.928 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:23:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:23:00.013 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:23:00.010+0800');
2020-08-05 16:23:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:23:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:23:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:23:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:23:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-05 16:23:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 22, '2020-08-05T16:23:10.020+0800');
2020-08-05 16:23:15.931 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:24:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:24:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:24:00.019+0800');
2020-08-05 16:24:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:24:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:24:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:24:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:24:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 16:24:10.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T16:24:10.018+0800');
2020-08-05 16:24:15.932 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:24:41.931 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:24:41 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:24:42.004 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:24:42 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:24:42.006 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:24:42 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:25:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:25:00.014 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:25:00.011+0800');
2020-08-05 16:25:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:25:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:25:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:25:10.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:25:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T16:25:10.017+0800');
2020-08-05 16:25:15.933 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:26:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:26:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:26:00.019+0800');
2020-08-05 16:26:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:26:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:26:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:26:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:26:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:26:10.044 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:26:10.018+0800');
2020-08-05 16:26:15.937 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596613175311_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:27:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:27:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:27:00.021+0800');
2020-08-05 16:27:10.994 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 7020 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 16:27:10.999 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 16:27:12.520 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 16:27:12.522 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 16:27:12.595 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-08-05 16:27:13.134 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.217 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c5559c6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.231 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5bc72b99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3fbfa2c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f474f3d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2a8f6e6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$19499685] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 16:27:13.754 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 16:27:13.768 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 16:27:13.776 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 16:27:13.777 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 16:27:13.783 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 16:27:13.885 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 16:27:13.885 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2809 ms
2020-08-05 16:27:14.222 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 16:27:14.230 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 16:27:14.687 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 16:27:14.687 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 16:27:14.687 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 16:27:14.688 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 16:27:15.170 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 16:27:17.069 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 16:27:17.099 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 16:27:17.111 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 16:27:17.111 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 16:27:17.115 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 16:27:17.116 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 16:27:17.117 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596616037100'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 16:27:17.117 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 16:27:17.117 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 16:27:17.119 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@53a09566
2020-08-05 16:27:17.195 febs [main] INFO  p6spy - 2020-08-05 16:27:17 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 16:27:18.959 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 16:27:19.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 16:27:19.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 16:27:19.263 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@359ea595, org.springframework.security.web.context.SecurityContextPersistenceFilter@70819ba8, org.springframework.security.web.header.HeaderWriterFilter@17e2835c, org.springframework.security.web.authentication.logout.LogoutFilter@6bf28f61, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@20163008, org.springframework.security.web.session.ConcurrentSessionFilter@3ddac0b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@283ecb4b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f13756, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2e47a71e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8d7718e, org.springframework.security.web.session.SessionManagementFilter@7cbfbcd1, org.springframework.security.web.access.ExceptionTranslationFilter@7ebaf0d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68550d86]
2020-08-05 16:27:19.315 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 16:27:19.329 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 16:27:19.330 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 16:27:19.698 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 16:27:20.308 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 16:27:20.323 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 16:27:20.401 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 16:27:20.419 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 16:27:20.432 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 16:27:20.461 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 16:27:20.465 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.496 seconds (JVM running for 11.481)
2020-08-05 16:27:20.487 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 16:27:20.487 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 16:27:20.487 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 16:27:20.487 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 16:27:20.487 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 16:27:21.117 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 16:27:21.117 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 16:27:21.133 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 16:27:21.136 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 16:27:21 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 16:27:21.421 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 16:27:21.432 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 16:27:21.432 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596613175311"'s failed in-progress jobs.
2020-08-05 16:27:21.438 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 16:27:21.449 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596616037100 started.
2020-08-05 16:27:21.455 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:27:41.783 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F29F309A62209E48EF6A2BC17A6FFC23
2020-08-05 16:28:00.063 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:28:00.107 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T16:28:00.063+0800');
2020-08-05 16:28:09.530 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2C541E0CFE0E5F4F316525D2D912ECE0
2020-08-05 16:28:10.024 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:28:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:28:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:28:10.123 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:28:10.167 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:28:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:28:10.179 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：155 毫秒
2020-08-05 16:28:10.186 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 155, '2020-08-05T16:28:10.024+0800');
2020-08-05 16:28:12.707 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:28:12 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 16:28:12.785 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:28:12 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 16:28:12.797 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:28:12 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 16:28:13.302 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:28:13.435 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T16:28:13.427+0800' WHERE (USERNAME = 'admin');
2020-08-05 16:28:13.458 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 16:28:13.461 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 16:28:13.465 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 16:28:13.473 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 16:28:13.478 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:28:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 16:28:16.000 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:28:16 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:28:16.011 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:28:16 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:28:21.457 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:28:35.008 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:28:35 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, create_time, create_date, state, creator, modifier, mod_date) VALUES ('1023', '156', '1651315', '12346', '152923', '15238203923', '16515', '2020-08-25T16:28:34.999', '2020-08-05T16:28:35.004', 1, '1', '1', '2020-08-05T16:28:35.004');
2020-08-05 16:28:35.044 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:28:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:28:35.047 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:28:35 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:29:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:29:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:29:00.022+0800');
2020-08-05 16:29:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:29:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:29:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:29:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:29:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-05 16:29:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-05T16:29:10.009+0800');
2020-08-05 16:29:21.458 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:30:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:30:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:30:00.022+0800');
2020-08-05 16:30:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:30:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:30:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:30:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:30:10.038 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 16:30:10.042 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T16:30:10.007+0800');
2020-08-05 16:30:21.464 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:30:49.161 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:30:49 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:30:49.244 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:30:49 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:30:49.248 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:30:49 | 耗时 1 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:31:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:31:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:31:00.021+0800');
2020-08-05 16:31:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:31:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:31:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:31:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:31:10.040 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 16:31:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T16:31:10.008+0800');
2020-08-05 16:31:15.461 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:31:15 | 耗时 1 ms | SQL 语句：
INSERT INTO a_administrator (admin_name, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, create_time, create_date, state, creator, modifier, mod_date) VALUES ('123', '123', '412702199707156931', '123', '152923', '15238203923', '123', '2020-08-24T16:31:15.454', '2020-08-05T16:31:15.456', 1, '1', '1', '2020-08-05T16:31:15.456');
2020-08-05 16:31:15.488 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:31:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:31:15.491 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:31:15 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:31:21.464 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:32:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:32:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:32:00.023+0800');
2020-08-05 16:32:10.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:32:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:32:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:32:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:32:10.038 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 16:32:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:32:10 | 耗时 8 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T16:32:10.010+0800');
2020-08-05 16:32:18.943 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:32:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:32:19.012 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:32:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:32:19.015 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:32:19 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:32:21.466 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:33:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:33:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:33:00.023+0800');
2020-08-05 16:33:10.016 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:33:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:33:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:33:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:33:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:33:10.068 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-05 16:33:10.073 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-05T16:33:10.021+0800');
2020-08-05 16:33:10.163 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:33:10.165 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:33:21.120 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:33:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:33:21.199 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:33:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:33:21.201 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:33:21 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:33:21.469 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:33:39.508 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:33:39 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:33:39.577 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:33:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:33:39.579 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:33:39 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:33:50.739 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:33:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:33:50.812 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:33:50 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:33:50.815 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:33:50 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:34:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:34:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:34:00.019+0800');
2020-08-05 16:34:10.010 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:34:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:34:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:34:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:34:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 16:34:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T16:34:10.010+0800');
2020-08-05 16:34:21.471 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:34:50.095 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:34:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:34:50.161 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:34:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:34:50.163 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:34:50 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:35:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:35:00.027 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:35:00.022+0800');
2020-08-05 16:35:10.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:35:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:35:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:35:10 | 耗时 4 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:35:10.101 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：90 毫秒
2020-08-05 16:35:10.105 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 16:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 90, '2020-08-05T16:35:10.011+0800');
2020-08-05 16:35:12.419 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:35:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:35:12.505 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:35:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:35:12.507 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 16:35:12 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:35:21.474 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:35:25.975 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 16:35:25 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:35:26.050 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:35:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:35:26.053 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:35:26 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:35:52.226 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:35:52 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:35:52.300 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:35:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 16:35:52.302 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:35:52 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 16:36:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:36:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 16:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:36:00.021+0800');
2020-08-05 16:36:10.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:36:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:36:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:36:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:36:10.039 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 16:36:10.042 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 16:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T16:36:10.010+0800');
2020-08-05 16:36:21.475 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:37:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:37:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 16:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:37:00.021+0800');
2020-08-05 16:37:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:37:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:37:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:37:10.046 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:37:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 16:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T16:37:10.019+0800');
2020-08-05 16:37:21.477 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:38:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:38:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:38:00.020+0800');
2020-08-05 16:38:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:38:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:38:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:38:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:38:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T16:38:10.017+0800');
2020-08-05 16:38:21.478 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:39:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:39:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:39:00.019+0800');
2020-08-05 16:39:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:39:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:39:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:39:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:39:10.035 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:39:10.038 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T16:39:10.009+0800');
2020-08-05 16:39:21.480 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:40:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:40:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:40:00.012+0800');
2020-08-05 16:40:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:40:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:40:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:40:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:40:10.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:40:10.036 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:40:10.009+0800');
2020-08-05 16:40:21.482 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:41:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:41:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:41:00.024+0800');
2020-08-05 16:41:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:41:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:41:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:41:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 16:41:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T16:41:10.018+0800');
2020-08-05 16:41:21.485 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:42:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:42:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:42:00.021+0800');
2020-08-05 16:42:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:42:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:42:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:42:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 16:42:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-05T16:42:10.019+0800');
2020-08-05 16:42:21.488 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:43:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:43:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:43:00.022+0800');
2020-08-05 16:43:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:43:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:43:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 16:43:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T16:43:10.020+0800');
2020-08-05 16:43:11.159 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:43:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 16:43:11.162 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 16:43:11 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 16:43:11.164 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 16:43:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 16:43:21.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:43:34.840 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:43:34 | 耗时 0 ms | SQL 语句：
INSERT INTO t_role (ROLE_NAME, REMARK, CREATE_TIME) VALUES ('普通用户', '', '2020-08-05T16:43:34.836+0800');
2020-08-05 16:43:34.874 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 16:43:34 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增角色', 17, 'com.cx.system.controller.RoleController.addRole()', ' role: "Role(roleId=86, roleName=普通用户, remark=, createTime=Wed Aug 05 16:43:34 CST 2020, modifyTime=null, menuIds=)"', '192.168.1.113', '2020-08-05T16:43:34.864+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 16:43:34.885 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:43:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 16:43:34.888 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 16:43:34 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 16:44:00.046 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:44:00.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:44:00.046+0800');
2020-08-05 16:44:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:44:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:44:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:44:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:44:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:44:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T16:44:10.021+0800');
2020-08-05 16:44:21.493 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:45:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:45:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:45:00.019+0800');
2020-08-05 16:45:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:45:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:45:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:45:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:45:10.046 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 16:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:45:10.019+0800');
2020-08-05 16:45:21.495 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:46:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:46:00.013 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 16:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:46:00.009+0800');
2020-08-05 16:46:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:46:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:46:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:46:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:46:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:46:10.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 16:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T16:46:10.017+0800');
2020-08-05 16:46:21.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:47:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:47:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 16:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:47:00.019+0800');
2020-08-05 16:47:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:47:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:47:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:47:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:47:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:47:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 16:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:47:10.020+0800');
2020-08-05 16:47:21.501 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:48:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:48:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:48:00.019+0800');
2020-08-05 16:48:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:48:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:48:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:48:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T16:48:10.019+0800');
2020-08-05 16:48:21.502 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:49:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:49:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:49:00.021+0800');
2020-08-05 16:49:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:49:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:49:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:49:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 16:49:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-05T16:49:10.017+0800');
2020-08-05 16:49:21.504 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:50:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:50:00.022 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 16:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:50:00.019+0800');
2020-08-05 16:50:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:50:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:50:10.059 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 16:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:50:10.019+0800');
2020-08-05 16:50:21.507 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:51:00.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:51:00.013 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 16:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:51:00.009+0800');
2020-08-05 16:51:10.017 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:51:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:51:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:51:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:51:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:51:10.045 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 16:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T16:51:10.017+0800');
2020-08-05 16:51:21.509 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:52:00.010 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:52:00.013 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 16:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:52:00.010+0800');
2020-08-05 16:52:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:52:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:52:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:52:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:52:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 16:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:52:10.019+0800');
2020-08-05 16:52:21.513 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:52:29.136 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:52:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_equipment;
2020-08-05 16:52:29.137 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 16:52:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment ORDER BY sb_status DESC LIMIT 0,10;
2020-08-05 16:53:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:53:00.015 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 16:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:53:00.011+0800');
2020-08-05 16:53:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:53:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:53:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:53:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:53:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:53:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 16:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T16:53:10.018+0800');
2020-08-05 16:53:21.514 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:53:46.368 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = '普通用户', REMARK = '', MODIFY_TIME = '2020-08-05T16:53:46.365+0800' WHERE ROLE_ID = 86;
2020-08-05 16:53:46.378 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('86'));
2020-08-05 16:53:46.389 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 16:53:46.392 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 16:53:46.395 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 16:53:46.439 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 68, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=86, roleName=普通用户, remark=, createTime=null, modifyTime=Wed Aug 05 16:53:46 CST 2020, menuIds=1,357,358,369,373)"', '192.168.1.113', '2020-08-05T16:53:46.434+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 16:53:46.463 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 16:53:46.466 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 16:53:46 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 16:54:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:54:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 16:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:54:00.018+0800');
2020-08-05 16:54:03.130 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 16:54:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 16:54:03.169 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:54:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 16:54:03.171 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 16:54:03 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 16:54:03.173 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 16:54:03 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 16:54:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:54:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:54:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 16:54:10.047 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 16:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T16:54:10.018+0800');
2020-08-05 16:54:21.518 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:55:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:55:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 16:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:55:00.021+0800');
2020-08-05 16:55:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:55:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:55:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:55:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:55:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 16:55:10.043 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 16:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T16:55:10.018+0800');
2020-08-05 16:55:21.519 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:56:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:56:00.012 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 16:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T16:56:00.009+0800');
2020-08-05 16:56:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:56:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:56:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:56:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:56:10.043 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 16:56:10.045 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 16:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T16:56:10.018+0800');
2020-08-05 16:56:21.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:57:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:57:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 16:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:57:00.019+0800');
2020-08-05 16:57:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:57:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:57:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:57:10.048 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 16:57:10.051 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 16:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T16:57:10.017+0800');
2020-08-05 16:57:21.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:58:00.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:58:00.021 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 16:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:58:00.018+0800');
2020-08-05 16:58:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:58:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:58:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:58:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:58:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 16:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T16:58:10.019+0800');
2020-08-05 16:58:15.358 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:F29F309A62209E48EF6A2BC17A6FFC23
2020-08-05 16:58:21.531 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 16:59:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 16:59:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 16:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T16:59:00.021+0800');
2020-08-05 16:59:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 16:59:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 16:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 16:59:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 16:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 16:59:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 16:59:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 16:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T16:59:10.017+0800');
2020-08-05 16:59:21.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:00:00.009 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:00:00.012 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:00:00.009+0800');
2020-08-05 17:00:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:00:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:00:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:00:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:00:10.032 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 17:00:10.034 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T17:00:10.009+0800');
2020-08-05 17:00:21.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:01:00.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:01:00.039 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:01:00.036+0800');
2020-08-05 17:01:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:01:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:01:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 17:01:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T17:01:10.019+0800');
2020-08-05 17:01:21.537 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:02:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:02:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:02:00.019+0800');
2020-08-05 17:02:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:02:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:02:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:02:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:02:10.043 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:02:10.046 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:02:10.019+0800');
2020-08-05 17:02:21.541 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:03:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:03:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 17:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:03:00.022+0800');
2020-08-05 17:03:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:03:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:03:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:03:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:03:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 17:03:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 17:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-05T17:03:10.017+0800');
2020-08-05 17:03:21.541 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:04:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:04:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 17:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:04:00.021+0800');
2020-08-05 17:04:10.041 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:04:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:04:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:04:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:04:10.066 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:04:10.069 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 17:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T17:04:10.041+0800');
2020-08-05 17:04:21.543 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:05:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:05:00.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 17:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:05:00.044+0800');
2020-08-05 17:05:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:05:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:05:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:05:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:05:10.044 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 17:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T17:05:10.018+0800');
2020-08-05 17:05:21.546 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:06:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:06:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 17:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:06:00.021+0800');
2020-08-05 17:06:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:06:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:06:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:06:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:06:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 17:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T17:06:10.016+0800');
2020-08-05 17:06:21.549 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:07:00.018 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:07:00.021 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 17:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:07:00.018+0800');
2020-08-05 17:07:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:07:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:07:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:07:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:07:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:07:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 17:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T17:07:10.019+0800');
2020-08-05 17:07:21.551 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:08:00.045 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:08:00.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:08:00.045+0800');
2020-08-05 17:08:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:08:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:08:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:08:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:08:10.042 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:08:10.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:08:10.018+0800');
2020-08-05 17:08:21.554 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:08:46.329 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:08:46 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 17:08:46.331 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:08:46 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 17:09:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:09:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:09:00.023+0800');
2020-08-05 17:09:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:09:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:09:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:09:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:09:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:09:10.044 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T17:09:10.017+0800');
2020-08-05 17:09:21.555 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:10:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:10:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:10:00.020+0800');
2020-08-05 17:10:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:10:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:10:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:10:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:10:10.073 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 17:10:10.076 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T17:10:10.043+0800');
2020-08-05 17:10:21.555 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:11:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:11:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:11:00.021+0800');
2020-08-05 17:11:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:11:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:11:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:11:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:11:10.069 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 17:11:10.071 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T17:11:10.042+0800');
2020-08-05 17:11:21.558 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:12:00.018 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:12:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:12:00.018+0800');
2020-08-05 17:12:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:12:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:12:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:12:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 17:12:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T17:12:10.017+0800');
2020-08-05 17:12:21.560 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:13:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:13:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 17:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:13:00.020+0800');
2020-08-05 17:13:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:13:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:13:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:13:10.068 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:13:10.070 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 17:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T17:13:10.044+0800');
2020-08-05 17:13:21.563 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:14:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:14:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 17:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:14:00.021+0800');
2020-08-05 17:14:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:14:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:14:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:14:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:14:10.070 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:14:10.072 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 17:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T17:14:10.045+0800');
2020-08-05 17:14:20.024 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = '普通用户', REMARK = '1315151', MODIFY_TIME = '2020-08-05T17:14:20.020+0800' WHERE ROLE_ID = 86;
2020-08-05 17:14:20.027 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('86'));
2020-08-05 17:14:20.035 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 17:14:20.038 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 17:14:20.041 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 17:14:20.073 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 46, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=86, roleName=普通用户, remark=1315151, createTime=null, modifyTime=Wed Aug 05 17:14:20 CST 2020, menuIds=1,357,358,369,373)"', '192.168.1.113', '2020-08-05T17:14:20.067+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 17:14:20.098 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:14:20.101 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:14:20 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:14:21.564 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:15:00.044 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:15:00.047 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 17:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:15:00.044+0800');
2020-08-05 17:15:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:15:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:15:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:15:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:15:10.047 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 17:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T17:15:10.020+0800');
2020-08-05 17:15:21.567 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:16:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:16:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 17:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:16:00.020+0800');
2020-08-05 17:16:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:16:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:16:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:16:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:16:10.066 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:16:10.068 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 17:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:16:10.042+0800');
2020-08-05 17:16:11.304 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:16:11 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:16:11.340 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:16:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:16:11.344 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:16:11 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:16:11.348 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:16:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:16:21.569 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:16:28.121 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:16:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:16:28.166 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:16:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:16:28.168 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:16:28 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:16:28.171 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:16:28 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:17:00.022 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:17:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 17:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:17:00.022+0800');
2020-08-05 17:17:10.016 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:17:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:17:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:17:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:17:10.039 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 17:17:10.042 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 17:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T17:17:10.016+0800');
2020-08-05 17:17:21.571 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:18:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:18:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:18:00.021+0800');
2020-08-05 17:18:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:18:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:18:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:18:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:18:10.041 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:18:10.043 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T17:18:10.016+0800');
2020-08-05 17:18:21.574 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:19:00.021 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:19:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:19:00.021+0800');
2020-08-05 17:19:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:19:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:19:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:19:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 17:19:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T17:19:10.017+0800');
2020-08-05 17:19:21.576 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:20:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:20:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:20:00.019+0800');
2020-08-05 17:20:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:20:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:20:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:20:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:20:10.019+0800');
2020-08-05 17:20:21.579 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:21:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:21:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:21:00.021+0800');
2020-08-05 17:21:04.760 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:21:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 17:21:04.762 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:21:04 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 17:21:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:21:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:21:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:21:10.041 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 17:21:10.044 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 23, '2020-08-05T17:21:10.018+0800');
2020-08-05 17:21:21.581 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:22:00.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:22:00.014 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:22:00.009+0800');
2020-08-05 17:22:10.010 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:22:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:22:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:22:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:22:10.038 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-05 17:22:10.042 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-05T17:22:10.010+0800');
2020-08-05 17:22:21.583 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:23:00.046 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:23:00.049 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 17:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:23:00.046+0800');
2020-08-05 17:23:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:23:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:23:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:23:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:23:10.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:23:10.036 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 17:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-05T17:23:10.008+0800');
2020-08-05 17:23:21.586 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:24:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:24:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 17:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:24:00.021+0800');
2020-08-05 17:24:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:24:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:24:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:24:10.044 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:24:10.046 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 17:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:24:10.020+0800');
2020-08-05 17:24:21.591 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:25:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:25:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 17:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:25:00.021+0800');
2020-08-05 17:25:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:25:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:25:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:25:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:25:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 17:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-05T17:25:10.019+0800');
2020-08-05 17:25:21.592 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:26:00.009 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:26:00.012 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 17:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:26:00.009+0800');
2020-08-05 17:26:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:26:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:26:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:26:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:26:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-05 17:26:10.043 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 17:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-05T17:26:10.017+0800');
2020-08-05 17:26:21.595 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:27:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:27:00.025 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 17:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:27:00.021+0800');
2020-08-05 17:27:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:27:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:27:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:27:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:27:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 17:27:10.045 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 17:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T17:27:10.009+0800');
2020-08-05 17:27:21.597 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:28:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:28:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:28:00.020+0800');
2020-08-05 17:28:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:28:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:28:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:28:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:28:10.043 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-05 17:28:10.046 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-05T17:28:10.018+0800');
2020-08-05 17:28:21.601 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:29:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:29:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:29:00.020+0800');
2020-08-05 17:29:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:29:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:29:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:29:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:29:10.040 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 17:29:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T17:29:10.009+0800');
2020-08-05 17:29:21.617 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:30:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:30:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:30:00.020+0800');
2020-08-05 17:30:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:30:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:30:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:30:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:30:10.035 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 17:30:10.038 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T17:30:10.008+0800');
2020-08-05 17:30:21.621 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:31:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:31:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:31:00.021+0800');
2020-08-05 17:31:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:31:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:31:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:31:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:31:10.037 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 17:31:10.040 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T17:31:10.008+0800');
2020-08-05 17:31:21.622 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:32:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:32:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:32:00.019+0800');
2020-08-05 17:32:10.008 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:32:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:32:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:32:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:32:10.031 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-05 17:32:10.034 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-05T17:32:10.008+0800');
2020-08-05 17:32:21.626 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596616037100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:34:02.170 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19392 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 17:34:02.174 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 17:34:03.763 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 17:34:03.765 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 17:34:03.840 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-08-05 17:34:04.399 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9053b61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9f76ca90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.522 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$836f41bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.631 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$382492ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@73e776b7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.642 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5cf9357c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:04.648 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:34:05.014 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 17:34:05.030 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 17:34:05.039 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 17:34:05.039 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 17:34:05.047 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 17:34:05.162 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 17:34:05.163 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2910 ms
2020-08-05 17:34:05.528 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 17:34:05.537 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 17:34:06.000 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 17:34:06.000 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 17:34:06.000 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 17:34:06.000 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 17:34:06.512 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 17:34:08.427 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 17:34:08.458 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 17:34:08.469 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 17:34:08.469 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 17:34:08.472 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 17:34:08.474 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 17:34:08.475 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596620048458'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 17:34:08.475 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 17:34:08.475 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 17:34:08.476 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3bf01a01
2020-08-05 17:34:08.545 febs [main] INFO  p6spy - 2020-08-05 17:34:08 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 17:34:10.250 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 17:34:10.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 17:34:10.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 17:34:10.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:34:10.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 17:34:10.482 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 17:34:10.483 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 17:34:10.551 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@807c1e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@281ca256, org.springframework.security.web.header.HeaderWriterFilter@78508e6b, org.springframework.security.web.authentication.logout.LogoutFilter@10724a72, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@342394b3, org.springframework.security.web.session.ConcurrentSessionFilter@c335b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c8b37a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c4aa701, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@718d6b7c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4eb5764d, org.springframework.security.web.session.SessionManagementFilter@2cc97e47, org.springframework.security.web.access.ExceptionTranslationFilter@59cde35, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c02b3cb]
2020-08-05 17:34:10.602 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 17:34:10.616 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 17:34:10.618 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 17:34:10.983 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 17:34:11.597 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 17:34:11.611 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 17:34:11.674 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 17:34:11.694 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 17:34:11.708 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 17:34:11.738 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 17:34:11.742 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.429 seconds (JVM running for 11.379)
2020-08-05 17:34:11.766 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 17:34:11.766 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 17:34:11.766 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 17:34:11.766 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 17:34:11.766 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 17:34:12.424 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 17:34:12.424 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 17:34:12.442 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 17:34:12 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 17:34:12.442 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-05 17:34:12.695 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 17:34:12.706 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 17:34:12.706 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596616037100"'s failed in-progress jobs.
2020-08-05 17:34:12.712 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596620048458 started.
2020-08-05 17:34:12.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-05 17:34:12.786 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:35:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:35:00.084 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T17:35:00.039+0800');
2020-08-05 17:35:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:35:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:35:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:35:10.174 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:35:10.179 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：155 毫秒
2020-08-05 17:35:10.185 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 155, '2020-08-05T17:35:10.023+0800');
2020-08-05 17:35:12.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:36:00.031 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:36:00.045 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:36:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:36:00.031+0800');
2020-08-05 17:36:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:36:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:36:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:36:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:36:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 17:36:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-05T17:36:10.021+0800');
2020-08-05 17:36:12.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:37:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:37:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:37:00.025+0800');
2020-08-05 17:37:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:37:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:37:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:37:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:37:10.080 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-05 17:37:10.085 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-05T17:37:10.043+0800');
2020-08-05 17:37:12.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:38:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:38:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:38:00.021+0800');
2020-08-05 17:38:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:38:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:38:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 17:38:10.054 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T17:38:10.020+0800');
2020-08-05 17:38:12.792 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620048458_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:38:51.072 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18344 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 17:38:51.075 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 17:38:52.559 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 17:38:52.562 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 17:38:52.637 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-08-05 17:38:53.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ebb34556] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8224d485] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$661d4bb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.433 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ad29cbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c9ef6e9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3fa73f71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:38:53.792 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 17:38:53.808 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 17:38:53.817 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 17:38:53.818 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 17:38:53.824 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 17:38:53.930 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 17:38:53.931 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2792 ms
2020-08-05 17:38:54.247 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 17:38:54.255 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 17:38:54.713 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 17:38:54.713 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 17:38:54.713 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 17:38:54.713 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 17:38:55.211 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 17:38:57.174 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 17:38:57.204 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 17:38:57.215 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 17:38:57.215 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 17:38:57.219 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 17:38:57.221 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 17:38:57.221 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596620337205'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 17:38:57.221 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 17:38:57.221 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 17:38:57.223 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3e2772a9
2020-08-05 17:38:57.295 febs [main] INFO  p6spy - 2020-08-05 17:38:57 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 17:38:59.028 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 17:38:59.260 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 17:38:59.261 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 17:38:59.327 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43fbc2bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@455d04d2, org.springframework.security.web.header.HeaderWriterFilter@342394b3, org.springframework.security.web.authentication.logout.LogoutFilter@10f10230, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@17477bbb, org.springframework.security.web.session.ConcurrentSessionFilter@807c1e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30333941, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@654db80b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@13cc31df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c978637, org.springframework.security.web.session.SessionManagementFilter@1e01b195, org.springframework.security.web.access.ExceptionTranslationFilter@7c02b3cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a31abe9]
2020-08-05 17:38:59.374 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 17:38:59.388 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 17:38:59.389 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 17:38:59.758 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 17:39:00.395 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 17:39:00.408 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 17:39:00.467 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 17:39:00.486 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 17:39:00.499 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 17:39:00.528 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 17:39:00.533 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.229 seconds (JVM running for 11.92)
2020-08-05 17:39:00.556 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 17:39:00.556 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 17:39:00.556 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 17:39:00.556 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 17:39:00.556 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 17:39:01.106 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-05 17:39:01 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 17:39:01.343 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 17:39:01.343 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 17:39:01.356 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-08-05 17:39:01.488 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 17:39:01.509 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596620337205 started.
2020-08-05 17:39:01.515 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:39:10.035 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:39:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:39:10.116 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:39:10.149 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:39:10.153 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：117 毫秒
2020-08-05 17:39:10.163 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 117, '2020-08-05T17:39:10.035+0800');
2020-08-05 17:39:13.514 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:39:16.515 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 17:39:16.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596620048458"'s failed in-progress jobs.
2020-08-05 17:39:16.522 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-05 17:39:20.932 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9754353934C11EBF0923D65E65615A0C
2020-08-05 17:39:23.895 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:39:23 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 17:39:23.983 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:39:23 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 17:39:23.996 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:39:23 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 17:39:24.418 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:39:24.531 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T17:39:24.523+0800' WHERE (USERNAME = 'admin');
2020-08-05 17:39:24.543 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 17:39:24.548 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:39:24.552 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:39:24.558 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 17:39:24.561 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:39:24 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 17:39:25.513 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:39:27.522 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:39:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_administrator;
2020-08-05 17:39:27.536 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:39:27 | 耗时 0 ms | SQL 语句：
SELECT id, admin_name, dept_id, dept_name, idcard_num, account_num, account_pwd, phone_num, wechart_num, remaing_time, create_time, create_date, state, creator, modifier, mod_date FROM a_administrator ORDER BY id ASC LIMIT 0,10;
2020-08-05 17:39:30.760 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:39:30 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:39:57.110 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:39:57 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 357, MENU_NAME = '用户管理', URL = '/myUser/tUser/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-08-05T17:39:57.104+0800' WHERE MENU_ID = 363;
2020-08-05 17:39:57.144 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:39:57 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:39:57.155 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-05 17:39:57 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 12, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=用户管理, url=/myUser/tUser/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Wed Aug 05 17:39:57 CST 2020)"', '192.168.1.113', '2020-08-05T17:39:57.132+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 17:39:58.443 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:39:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:39:58.490 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:39:58 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:39:59.811 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:39:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:39:59.845 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:39:59 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:40:00.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:40:00.028 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-05T17:40:00.021+0800');
2020-08-05 17:40:01.668 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:40:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:40:01.685 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:40:01 | 耗时 15 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:40:10.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:40:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:40:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:40:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:40:10.054 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 17:40:10.058 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T17:40:10.023+0800');
2020-08-05 17:40:13.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:40:14.965 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:40:14 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:40:15.035 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:40:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:40:15.039 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:40:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:41:00.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:41:00.024 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:41:00.020+0800');
2020-08-05 17:41:10.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:41:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:41:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:41:10.052 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-05 17:41:10.055 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-05T17:41:10.019+0800');
2020-08-05 17:41:13.519 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:41:13.739 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:41:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:41:13.829 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:41:13 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:41:13.832 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:41:13 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:42:00.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:42:00.031 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T17:42:00.023+0800');
2020-08-05 17:42:00.813 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:42:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:42:00.897 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:42:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:42:00.900 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:42:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:42:10.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:42:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:42:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:42:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:42:10.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 17:42:10.046 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-05T17:42:10.012+0800');
2020-08-05 17:42:13.519 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:42:26.473 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:42:26 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:42:26.534 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:42:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:42:26.537 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:42:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:42:55.295 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:42:55 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:42:55.356 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:42:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:42:55.358 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:42:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:43:00.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:43:00.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:43:00.047+0800');
2020-08-05 17:43:10.017 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:43:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:43:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:43:10.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 17:43:10.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-05T17:43:10.017+0800');
2020-08-05 17:43:13.521 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:43:53.634 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:43:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:43:53.694 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:43:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:43:53.697 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:43:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:44:00.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:44:00.023 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:44:00.018+0800');
2020-08-05 17:44:06.739 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:44:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:44:06.810 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:44:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:44:06.813 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:44:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:44:10.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:44:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:44:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:44:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:44:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:44:10.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 17:44:10.054 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 17:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T17:44:10.019+0800');
2020-08-05 17:44:13.523 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:45:00.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:45:00.026 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 17:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:45:00.021+0800');
2020-08-05 17:45:10.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:45:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:45:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:45:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:45:10.051 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-05 17:45:10.054 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 17:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-05T17:45:10.020+0800');
2020-08-05 17:45:13.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:45:27.625 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:45:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:45:27.690 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:45:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:45:27.693 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:45:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:45:58.921 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:45:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:45:58.989 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:45:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:45:58.991 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:45:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:46:00.012 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:46:00.018 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 17:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:46:00.012+0800');
2020-08-05 17:46:04.155 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:46:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:46:10.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:46:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:46:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:46:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:46:10.048 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 17:46:10.051 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-05 17:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-05T17:46:10.019+0800');
2020-08-05 17:46:13.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:46:26.149 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:46:26 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '新增', PERMS = 'tUser:add', TYPE = '1', MODIFY_TIME = '2020-08-05T17:46:26.147+0800' WHERE MENU_ID = 365;
2020-08-05 17:46:26.159 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-05 17:46:26 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=365, parentId=363, menuName=新增, url=null, perms=tUser:add, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 17:46:26 CST 2020)"', '192.168.1.113', '2020-08-05T17:46:26.153+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 17:46:26.169 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:46:26 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:46:46.633 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:46:46 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '删除', PERMS = 'tUser:del', TYPE = '1', MODIFY_TIME = '2020-08-05T17:46:46.630+0800' WHERE MENU_ID = 366;
2020-08-05 17:46:46.641 febs [aps-Async-Thread3] INFO  p6spy - 2020-08-05 17:46:46 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 6, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=366, parentId=363, menuName=删除, url=null, perms=tUser:del, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Wed Aug 05 17:46:46 CST 2020)"', '192.168.1.113', '2020-08-05T17:46:46.636+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 17:46:46.649 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:46:46 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:46:48.193 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:46:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:46:48.243 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:46:48 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:46:50.186 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:46:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:46:50.189 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:46:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:47:00.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:47:00.015 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-05 17:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:47:00.011+0800');
2020-08-05 17:47:10.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:47:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:47:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:47:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:47:10.064 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-05 17:47:10.068 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-05 17:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-05T17:47:10.021+0800');
2020-08-05 17:47:13.531 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:47:29.433 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:47:29 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:47:29.475 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:29 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:47:30.123 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:47:30 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:47:30.153 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:47:30 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:47:31.452 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:47:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:47:31.454 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:47:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:47:33.218 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:47:33 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:47:33.222 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:47:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:47:33.224 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:47:33 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:47:46.744 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-05T17:47:46.742+0800' WHERE ROLE_ID = 82;
2020-08-05 17:47:46.756 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-05 17:47:46.781 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 17:47:46.783 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 17:47:46.787 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 17:47:46.795 febs [aps-Async-Thread4] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 49, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Wed Aug 05 17:47:46 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,368,365,366,367,358,369,370,371,372,373,374,375,376,380,383,387,396,384,385,388,389,394,393,395)"', '192.168.1.113', '2020-08-05T17:47:46.791+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-05 17:47:46.825 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:47:46.827 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:47:46 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:47:49.518 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:47:49 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:47:49.553 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:47:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-05 17:47:49.554 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:47:49 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-05 17:47:49.555 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:47:49 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-05 17:47:51.650 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:47:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:47:51.652 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:47:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:47:55.953 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:47:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:47:55.955 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:47:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:48:00.012 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:48:00.015 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-05 17:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:48:00.012+0800');
2020-08-05 17:48:10.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:48:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:48:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:48:10.046 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-05 17:48:10.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-05 17:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-05T17:48:10.019+0800');
2020-08-05 17:48:13.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:49:00.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:49:00.023 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-05 17:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:49:00.020+0800');
2020-08-05 17:49:10.018 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:49:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:49:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:49:10.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-05 17:49:10.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-05T17:49:10.018+0800');
2020-08-05 17:49:13.534 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:50:00.044 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:50:00.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:50:00.044+0800');
2020-08-05 17:50:10.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:50:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:50:10.044 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-05 17:50:10.047 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-05T17:50:10.018+0800');
2020-08-05 17:50:13.538 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596620337205_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:50:42.971 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11028 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 17:50:42.974 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 17:50:44.538 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 17:50:44.540 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 17:50:44.597 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45ms. Found 0 repository interfaces.
2020-08-05 17:50:45.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6bfe05f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d316f8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$8129e6bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$35df37c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2f054f70' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ab3da7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:50:45.719 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 17:50:45.733 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 17:50:45.741 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 17:50:45.741 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 17:50:45.747 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 17:50:45.847 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 17:50:45.848 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2788 ms
2020-08-05 17:50:46.181 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 17:50:46.189 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 17:50:46.647 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 17:50:46.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 17:50:46.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 17:50:46.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 17:50:47.116 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 17:50:49.069 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 17:50:49.099 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 17:50:49.111 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 17:50:49.111 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 17:50:49.114 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 17:50:49.116 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 17:50:49.117 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596621049100'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 17:50:49.117 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 17:50:49.117 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 17:50:49.118 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5b88af70
2020-08-05 17:50:49.187 febs [main] INFO  p6spy - 2020-08-05 17:50:49 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 17:50:50.993 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 17:50:51.228 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 17:50:51.229 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 17:50:51.302 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40fee459, org.springframework.security.web.context.SecurityContextPersistenceFilter@54f9326c, org.springframework.security.web.header.HeaderWriterFilter@61ce238e, org.springframework.security.web.authentication.logout.LogoutFilter@383e6734, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@350e3fb4, org.springframework.security.web.session.ConcurrentSessionFilter@5dd6f517, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33bfe6d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@675230cd, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@699bb304, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@bcd9ed6, org.springframework.security.web.session.SessionManagementFilter@7c02b3cb, org.springframework.security.web.access.ExceptionTranslationFilter@414d2821, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a299b9d]
2020-08-05 17:50:51.349 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 17:50:51.364 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 17:50:51.365 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 17:50:51.751 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 17:50:52.395 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 17:50:52.414 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 17:50:52.477 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 17:50:52.498 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 17:50:52.512 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 17:50:52.541 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 17:50:52.545 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.347 seconds (JVM running for 11.429)
2020-08-05 17:50:52.566 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 17:50:52.567 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 17:50:52.567 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 17:50:52.567 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 17:50:52.567 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 17:50:53.114 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 17:50:53.114 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 17:50:53.131 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-05 17:50:53 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 17:50:53.132 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-05 17:50:53.500 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 17:50:53.522 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596621049100 started.
2020-08-05 17:50:53.528 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:51:00.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:51:00.166 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-05T17:51:00.048+0800');
2020-08-05 17:51:00.584 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1B1B63DD74D56B901C966260C469AAD7
2020-08-05 17:51:03.666 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 17:51:03.745 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 17:51:03.757 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:51:03 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 17:51:04.151 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:51:04.287 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T17:51:04.253+0800' WHERE (USERNAME = 'admin');
2020-08-05 17:51:04.308 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 17:51:04.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:51:04.316 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:51:04.322 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 17:51:04.326 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:51:04 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 17:51:06.197 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:51:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:51:06.208 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:51:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:51:08.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 17:51:08.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596620337205"'s failed in-progress jobs.
2020-08-05 17:51:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:51:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:51:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:51:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:51:10.080 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-05 17:51:10.086 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-05T17:51:10.022+0800');
2020-08-05 17:51:16.534 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:51:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:51:16.536 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:51:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:51:17.528 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:51:34.251 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:51:34 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:51:34.255 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:51:34 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:52:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:52:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:52:00.014+0800');
2020-08-05 17:52:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:52:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:52:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:52:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:52:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 17:52:10.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 36, '2020-08-05T17:52:10.019+0800');
2020-08-05 17:52:17.530 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:53:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:53:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:53:00.010+0800');
2020-08-05 17:53:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:53:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:53:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:53:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 17:53:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T17:53:10.021+0800');
2020-08-05 17:53:17.532 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:54:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:54:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:54:00.022+0800');
2020-08-05 17:54:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:54:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:54:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:54:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:54:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 17:54:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-05T17:54:10.019+0800');
2020-08-05 17:54:17.533 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621049100_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:54:42.881 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6332 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-05 17:54:42.885 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-05 17:54:44.530 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-05 17:54:44.532 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-05 17:54:44.592 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-08-05 17:54:45.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c5aa447a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c1bd3a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$40144ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f4c99be3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.298 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@65be88ae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$199e3e95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-05 17:54:45.748 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-05 17:54:45.761 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-05 17:54:45.770 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-05 17:54:45.770 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-05 17:54:45.777 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-05 17:54:45.878 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-05 17:54:45.878 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2916 ms
2020-08-05 17:54:46.205 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-05 17:54:46.213 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-05 17:54:46.666 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-05 17:54:46.666 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-05 17:54:46.666 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-05 17:54:46.666 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-05 17:54:47.218 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-05 17:54:49.178 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-05 17:54:49.208 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-05 17:54:49.219 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-05 17:54:49.219 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-05 17:54:49.222 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-05 17:54:49.224 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-05 17:54:49.224 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596621289209'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-05 17:54:49.225 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-05 17:54:49.225 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-05 17:54:49.226 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7d5ef1c3
2020-08-05 17:54:49.295 febs [main] INFO  p6spy - 2020-08-05 17:54:49 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-05 17:54:51.058 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-05 17:54:51.296 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-05 17:54:51.297 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-05 17:54:51.297 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-05 17:54:51.362 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ea84346, org.springframework.security.web.context.SecurityContextPersistenceFilter@37b470df, org.springframework.security.web.header.HeaderWriterFilter@3d405fe5, org.springframework.security.web.authentication.logout.LogoutFilter@4fa6fb7f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@48aaaed9, org.springframework.security.web.session.ConcurrentSessionFilter@19d9ba89, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8d7718e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4be7acd9, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2fcffc05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e614370, org.springframework.security.web.session.SessionManagementFilter@4b475742, org.springframework.security.web.access.ExceptionTranslationFilter@362b384c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@91a1005]
2020-08-05 17:54:51.408 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-05 17:54:51.423 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-05 17:54:51.424 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-05 17:54:51.799 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-05 17:54:52.410 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-05 17:54:52.424 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-05 17:54:52.482 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-05 17:54:52.501 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-05 17:54:52.515 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-05 17:54:52.546 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-05 17:54:52.550 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.471 seconds (JVM running for 11.455)
2020-08-05 17:54:52.573 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-05 17:54:52.573 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-05 17:54:52.573 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-05 17:54:52.573 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-05 17:54:52.573 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-05 17:54:53.382 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-05 17:54:53.382 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-05 17:54:53.398 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-05 17:54:53 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-05 17:54:53.399 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-05 17:54:53.502 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-05 17:54:53.519 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-05 17:54:53.519 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596621049100"'s failed in-progress jobs.
2020-08-05 17:54:53.543 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596621289209 started.
2020-08-05 17:54:53.578 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:54:57.163 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:911E0A3D63DBAA7F896DFFEFFC175ADB
2020-08-05 17:55:00.034 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:55:00.138 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-05 17:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-05T17:55:00.034+0800');
2020-08-05 17:55:00.601 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:55:00 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-05 17:55:00.682 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:55:00 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-05 17:55:00.694 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:55:00 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-05 17:55:01.223 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:55:01.398 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-05T17:55:01.364+0800' WHERE (USERNAME = 'admin');
2020-08-05 17:55:01.412 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-05 17:55:01.416 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:55:01.420 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-05 17:55:01.426 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-05 17:55:01.431 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:55:01 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-05 17:55:07.364 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:55:07 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:55:07.386 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:55:07 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:55:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:55:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:55:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:55:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:55:10.096 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:55:10.099 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：73 毫秒
2020-08-05 17:55:10.103 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-05 17:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 73, '2020-08-05T17:55:10.026+0800');
2020-08-05 17:55:15.391 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:55:15 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:55:15.395 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-05 17:55:15 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:55:17.547 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:56:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:56:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-05 17:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:56:00.016+0800');
2020-08-05 17:56:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:56:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:56:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:56:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 17:56:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-05 17:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T17:56:10.022+0800');
2020-08-05 17:56:17.592 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:57:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:57:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-05 17:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T17:57:00.013+0800');
2020-08-05 17:57:06.610 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-05 17:57:06 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:57:06.719 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:57:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:57:06.721 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-05 17:57:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:57:09.599 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:57:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:57:09.603 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 17:57:09 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:57:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:57:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:57:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:57:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-05 17:57:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-05 17:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-05T17:57:10.017+0800');
2020-08-05 17:57:17.594 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:57:37.865 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:57:37 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:57:37.949 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:57:37 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:57:37.952 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 17:57:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:57:46.709 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:57:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:57:46.712 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-05 17:57:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:58:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:58:00.017 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-05 17:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-05T17:58:00.012+0800');
2020-08-05 17:58:02.101 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 17:58:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:58:02.194 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:58:02 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:58:02.197 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-05 17:58:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:58:04.025 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:58:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:58:04.028 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:58:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:58:10.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:58:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:58:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:58:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:58:10.062 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-05 17:58:10.072 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-05 17:58:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-05T17:58:10.016+0800');
2020-08-05 17:58:11.454 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 17:58:11 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 17:58:11.528 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:58:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 17:58:11.531 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-05 17:58:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 17:58:17.597 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 17:59:00.049 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 17:59:00.055 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-05 17:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-05T17:59:00.049+0800');
2020-08-05 17:59:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 17:59:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 17:59:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 17:59:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 17:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 17:59:10.041 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 17:59:10.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-05 17:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-05T17:59:10.009+0800');
2020-08-05 17:59:17.597 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 18:00:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 18:00:00.029 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-05 18:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T18:00:00.023+0800');
2020-08-05 18:00:07.874 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-05 18:00:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-05 18:00:07.945 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 18:00:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 18:00:07.948 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-05 18:00:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 18:00:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 18:00:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 18:00:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 18:00:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 18:00:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-05 18:00:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-05T18:00:10.019+0800');
2020-08-05 18:00:10.339 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID = 9;
2020-08-05 18:00:10.374 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-05 18:00:10.377 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-05 18:00:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-05 18:00:17.600 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-05 18:01:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-05 18:01:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-05 18:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-05T18:01:00.018+0800');
2020-08-05 18:01:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-05 18:01:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-05 18:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-05 18:01:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-05 18:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-05 18:01:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-05 18:01:10.053 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-05 18:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-05T18:01:10.020+0800');
2020-08-05 18:01:17.602 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596621289209_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
