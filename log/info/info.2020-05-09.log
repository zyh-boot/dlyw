2020-05-09 10:58:30.248 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 1628 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 10:58:30.250 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 10:58:31.593 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 10:58:31.598 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 10:58:31.687 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68ms. Found 0 repository interfaces.
2020-05-09 10:58:32.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$17da3060] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae4bbf8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$924436be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$46f987c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.558 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6e93b0e7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6bce2a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 10:58:32.917 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 10:58:32.929 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 10:58:32.936 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 10:58:32.936 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 10:58:32.942 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 10:58:32.942 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 10:58:32.942 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 10:58:32.964 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 10:58:33.076 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 10:58:33.076 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2764 ms
2020-05-09 10:58:33.359 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 10:58:33.366 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 10:58:33.676 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 10:58:33.676 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 10:58:33.676 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 10:58:33.676 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 10:58:34.161 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 10:58:36.448 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 10:58:36.479 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 10:58:36.479 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 10:58:36.480 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 10:58:36.481 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 10:58:36.481 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 10:58:36.481 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 10:58:36.481 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@54b35809
2020-05-09 10:58:38.041 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 10:58:38.423 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 10:58:38.424 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 10:58:38.487 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@702432cc, org.springframework.security.web.context.SecurityContextPersistenceFilter@1adec8d, org.springframework.security.web.header.HeaderWriterFilter@522f74a1, org.springframework.security.web.authentication.logout.LogoutFilter@2267b0bb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1f27f354, org.springframework.security.web.session.ConcurrentSessionFilter@506e382b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34d0c331, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c9bed65, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4425b6ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5039c2cf, org.springframework.security.web.session.SessionManagementFilter@1e6e29d6, org.springframework.security.web.access.ExceptionTranslationFilter@3d0f4ac4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7a79d99c]
2020-05-09 10:58:38.528 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 10:58:38.541 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 10:58:38.544 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 10:58:39.253 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 10:58:39.826 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 10:58:39.841 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 10:58:39.890 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 10:58:39.909 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 10:58:39.909 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 10:58:39.918 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 10:58:39.938 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 10:58:39.940 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 10.246 seconds (JVM running for 12.275)
2020-05-09 10:58:39.959 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 10:58:39.960 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 10:58:39.960 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 10:58:39.960 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 10:58:39.960 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 10:58:40.665 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 10:58:40.918 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:142d8d4c-a797-4f86-8d20-26ee8691a8f9:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 10:58:40.919 febs [QpidJMS Connection Executor: ID:142d8d4c-a797-4f86-8d20-26ee8691a8f9:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 10:58:41.477 febs [RMI TCP Connection(15)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 10:58:41.477 febs [RMI TCP Connection(15)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 10:58:41.484 febs [RMI TCP Connection(13)-192.168.137.101] INFO  p6spy - 2020-05-09 10:58:41 | 耗时 5 ms | SQL 语句：
select 1;
2020-05-09 10:58:41.488 febs [RMI TCP Connection(15)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2020-05-09 10:59:19.391 febs [JmsSession [ID:142d8d4c-a797-4f86-8d20-26ee8691a8f9:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/roller_error/post, messageId = 1258955150270381056, content = {"deviceType":"CustomCategory","identifier":"roller_error","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"滚筒错误","time":1588993272736,"type":"error","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"error_code":0}}
2020-05-09 11:00:47.007 febs [JmsSession [ID:142d8d4c-a797-4f86-8d20-26ee8691a8f9:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/roller_error/post, messageId = 1258955150270381056, content = {"deviceType":"CustomCategory","identifier":"roller_error","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"滚筒错误","time":1588993272736,"type":"error","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"error_code":0}}
2020-05-09 11:00:47.077 febs [Thread-23] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 11:00:47.085 febs [Thread-23] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-05-09 11:00:47.086 febs [Thread-23] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-05-09 11:00:47.086 febs [Thread-23] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2020-05-09 11:00:47.087 febs [Thread-23] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 11:00:47.087 febs [Thread-23] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2020-05-09 11:00:47.089 febs [Thread-23] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-05-09 11:00:47.090 febs [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-05-09 11:00:47.095 febs [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-05-09 11:40:24.988 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 11920 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 11:40:24.991 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 11:40:26.314 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 11:40:26.316 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 11:40:26.388 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-05-09 11:40:26.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$745b5f5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$accee8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.961 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$eec565bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a37ab6c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:26.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@c262f2f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:27.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c84f597a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:27.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 11:40:27.292 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 11:40:27.303 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 11:40:27.309 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 11:40:27.309 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 11:40:27.314 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 11:40:27.314 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 11:40:27.314 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 11:40:27.317 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 11:40:27.419 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 11:40:27.419 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2370 ms
2020-05-09 11:40:27.691 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 11:40:27.697 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 11:40:27.940 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 11:40:27.940 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 11:40:27.940 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 11:40:27.940 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 11:40:28.310 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 11:40:29.576 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 11:40:29.585 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 11:40:29.585 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 11:40:29.586 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 11:40:29.586 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 11:40:29.586 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 11:40:29.586 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 11:40:29.586 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@766db6f9
2020-05-09 11:40:30.641 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 11:40:30.819 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 11:40:30.820 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 11:40:30.870 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fca9fae, org.springframework.security.web.context.SecurityContextPersistenceFilter@5add7380, org.springframework.security.web.header.HeaderWriterFilter@1ecf784f, org.springframework.security.web.authentication.logout.LogoutFilter@6464f017, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@62cb977a, org.springframework.security.web.session.ConcurrentSessionFilter@4505015b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c25385a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d3b0397, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3f030217, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1104ad6a, org.springframework.security.web.session.SessionManagementFilter@34376069, org.springframework.security.web.access.ExceptionTranslationFilter@6a4d57b7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c41931a]
2020-05-09 11:40:30.909 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 11:40:30.921 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 11:40:30.923 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 11:40:31.204 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 11:40:31.665 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 11:40:31.676 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 11:40:31.717 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 11:40:31.732 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 11:40:31.732 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 11:40:31.741 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 11:40:31.760 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 11:40:31.762 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 7.395 seconds (JVM running for 8.302)
2020-05-09 11:40:31.780 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 11:40:31.781 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 11:40:31.781 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 11:40:31.781 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 11:40:31.781 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 11:40:32.293 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 11:40:32.496 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:56fd8b51-55f1-4a8b-a722-ef6a60554e2c:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 11:40:32.497 febs [QpidJMS Connection Executor: ID:56fd8b51-55f1-4a8b-a722-ef6a60554e2c:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 11:40:33.133 febs [RMI TCP Connection(5)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 11:40:33.133 febs [RMI TCP Connection(5)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 11:40:33.146 febs [RMI TCP Connection(5)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-05-09 11:40:33.190 febs [RMI TCP Connection(7)-192.168.137.101] INFO  p6spy - 2020-05-09 11:40:33 | 耗时 4 ms | SQL 语句：
select 1;
2020-05-09 11:40:48.987 febs [JmsSession [ID:56fd8b51-55f1-4a8b-a722-ef6a60554e2c:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/property/post, messageId = 1258965592292242944, content = {"deviceType":"CustomCategory","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1588995762302,"deviceName":"2020040001","items":{"roller_info":{"value":{"run_frequence":32.26,"out_power":10.23,"run_state":0},"time":1588995762308}}}
2020-05-09 14:23:40.151 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.provider.amqp.AmqpProvider - Transport failed: 远程主机强迫关闭了一个现有的连接。
2020-05-09 14:23:40.173 febs [QpidJMS Connection Executor: ID:56fd8b51-55f1-4a8b-a722-ef6a60554e2c:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionInterrupted, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 14:23:40.177 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 14:23:40.187 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-05-09 14:23:40.188 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-05-09 14:23:40.188 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2020-05-09 14:23:40.189 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 14:23:40.190 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2020-05-09 14:23:40.192 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-05-09 14:23:40.192 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-05-09 14:23:40.279 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-05-09 14:23:50.186 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 3636 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 14:23:50.188 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 14:23:51.702 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 14:23:51.705 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 14:23:51.787 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67ms. Found 0 repository interfaces.
2020-05-09 14:23:52.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$578d4d0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$edfedc3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$d1f7536a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$86aca475] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2ab8589a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.486 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ab814727] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 14:23:52.832 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 14:23:52.846 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 14:23:52.854 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 14:23:52.854 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 14:23:52.862 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 14:23:52.863 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 14:23:52.863 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 14:23:52.877 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 14:23:52.992 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 14:23:52.992 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2757 ms
2020-05-09 14:23:53.271 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 14:23:53.279 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 14:23:53.587 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 14:23:53.588 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 14:23:53.588 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 14:23:53.588 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 14:23:54.025 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 14:23:55.473 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 14:23:55.483 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 14:23:55.483 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 14:23:55.484 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 14:23:55.485 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 14:23:55.485 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 14:23:55.485 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 14:23:55.485 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@268e30d4
2020-05-09 14:23:56.863 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 14:23:57.187 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 14:23:57.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 14:23:57.188 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 14:23:57.189 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 14:23:57.190 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 14:23:57.191 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 14:23:57.192 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 14:23:57.282 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6164b3a2, org.springframework.security.web.context.SecurityContextPersistenceFilter@16e0afab, org.springframework.security.web.header.HeaderWriterFilter@63d14dbf, org.springframework.security.web.authentication.logout.LogoutFilter@45a05350, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f1d4ecf, org.springframework.security.web.session.ConcurrentSessionFilter@66cb9a63, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e111aeb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4db45d, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4e53c6ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@345af277, org.springframework.security.web.session.SessionManagementFilter@73839f22, org.springframework.security.web.access.ExceptionTranslationFilter@2566247d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@507fecf3]
2020-05-09 14:23:57.332 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 14:23:57.348 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 14:23:57.349 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 14:23:57.829 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 14:23:58.434 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 14:23:58.450 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 14:23:58.497 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 14:23:58.514 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 14:23:58.515 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 14:23:58.524 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 14:23:58.543 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 14:23:58.546 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 9.068 seconds (JVM running for 9.984)
2020-05-09 14:23:58.565 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 14:23:58.566 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 14:23:58.566 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 14:23:58.566 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 14:23:58.566 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 14:23:59.216 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 14:23:59.426 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 14:23:59.426 febs [QpidJMS Connection Executor: ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 14:23:59.998 febs [RMI TCP Connection(7)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 14:23:59.998 febs [RMI TCP Connection(7)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 14:24:00.012 febs [RMI TCP Connection(7)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-05-09 14:24:00.071 febs [RMI TCP Connection(9)-192.168.137.101] INFO  p6spy - 2020-05-09 14:24:00 | 耗时 3 ms | SQL 语句：
select 1;
2020-05-09 14:24:44.571 febs [JmsSession [ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/property/post, messageId = 1258965592292242944, content = {"deviceType":"CustomCategory","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1588995762302,"deviceName":"2020040001","items":{"roller_info":{"value":{"run_frequence":32.26,"out_power":10.23,"run_state":0},"time":1588995762308}}}
2020-05-09 14:26:15.835 febs [JmsSession [ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/variety_hum/post, messageId = 1259007231303852544, content = {"deviceType":"CustomCategory","identifier":"variety_hum","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"品种湿度","time":1589005689815,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"startflag":1,"variety":1,"humidity":30.22}}
2020-05-09 14:26:16.003 febs [JmsSession [ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 14:26:16 | 耗时 59 ms | SQL 语句：
INSERT INTO a_equipment_work_period (sb_code, start_time, work_type, work_sd, is_period, period_no, state, creator, create_date, modifier, mod_date) VALUES ('2020040001', '2020-05-09T14:26:15.836', 1, 30.22, 1, '20200509142615836', 1, NULL, '2020-05-09T14:26:15.903', NULL, '2020-05-09T14:26:15.903');
2020-05-09 14:27:53.275 febs [JmsSession [ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/property/post, messageId = 1259007640458289664, content = {"deviceType":"CustomCategory","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","productKey":"a1umzzYpOjO","gmtCreate":1589005787364,"deviceName":"2020040001","items":{"roller_info":{"value":{"run_frequence":52,"out_power":23,"run_state":0},"time":1589005787372}}}
2020-05-09 14:27:57.180 febs [JmsSession [ID:aa4fdcc7-fb5e-4bc5-838b-a6d852f22464:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 14:27:57 | 耗时 3 ms | SQL 语句：
INSERT INTO a_equipment_roller_info (sb_code, run_state, run_frequence, out_power, period_id, state, creator, create_date, modifier, mod_date) VALUES ('2020040001', 0, 52.0, 23.0, 1, 1, NULL, '2020-05-09T14:27:57.173', NULL, '2020-05-09T14:27:57.173');
2020-05-09 14:28:55.614 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 14:28:55.621 febs [Thread-22] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-05-09 14:28:55.623 febs [Thread-22] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-05-09 14:28:55.623 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2020-05-09 14:28:55.623 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 14:28:55.623 febs [Thread-22] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2020-05-09 14:28:55.626 febs [Thread-22] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-05-09 14:28:55.626 febs [Thread-22] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-05-09 14:28:55.631 febs [Thread-22] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-05-09 15:33:04.852 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 11720 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 15:33:04.854 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 15:33:06.085 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 15:33:06.087 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 15:33:06.159 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63ms. Found 0 repository interfaces.
2020-05-09 15:33:06.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6ba37768] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2150697] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e60d7dc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9ac2ced1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@77ecdc2b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.773 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bf977183] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:06.777 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:33:07.131 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 15:33:07.145 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 15:33:07.152 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 15:33:07.152 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 15:33:07.157 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 15:33:07.158 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 15:33:07.158 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 15:33:07.161 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 15:33:07.282 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 15:33:07.282 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2380 ms
2020-05-09 15:33:07.566 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 15:33:07.573 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 15:33:07.843 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 15:33:07.843 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 15:33:07.843 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 15:33:07.843 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 15:33:08.269 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 15:33:09.683 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 15:33:09.696 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 15:33:09.696 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 15:33:09.696 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 15:33:09.697 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 15:33:09.697 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 15:33:09.697 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 15:33:09.697 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@34ea86ff
2020-05-09 15:33:10.704 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 15:33:11.057 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 15:33:11.058 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 15:33:11.110 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28f6a008, org.springframework.security.web.context.SecurityContextPersistenceFilter@63541cd4, org.springframework.security.web.header.HeaderWriterFilter@397f925e, org.springframework.security.web.authentication.logout.LogoutFilter@2389f546, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@260fffec, org.springframework.security.web.session.ConcurrentSessionFilter@63c66980, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a023e34, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ef48b08, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4d359c69, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71dfca65, org.springframework.security.web.session.SessionManagementFilter@474deb4c, org.springframework.security.web.access.ExceptionTranslationFilter@b1f36e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43c3354]
2020-05-09 15:33:11.147 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 15:33:11.159 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 15:33:11.161 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 15:33:11.482 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 15:33:12.036 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 15:33:12.049 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 15:33:12.094 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 15:33:12.110 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 15:33:12.111 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 15:33:12.120 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 15:33:12.139 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 15:33:12.141 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 7.889 seconds (JVM running for 8.799)
2020-05-09 15:33:12.160 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 15:33:12.160 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 15:33:12.160 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 15:33:12.160 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 15:33:12.160 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 15:33:13.051 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 15:33:13.707 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:190bcbaa-37d5-469c-9321-ce2aee2ace24:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 15:33:13.708 febs [QpidJMS Connection Executor: ID:190bcbaa-37d5-469c-9321-ce2aee2ace24:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 15:33:14.547 febs [RMI TCP Connection(1)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 15:33:14.548 febs [RMI TCP Connection(1)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 15:33:14.573 febs [RMI TCP Connection(1)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 25 ms
2020-05-09 15:33:14.586 febs [RMI TCP Connection(2)-192.168.137.101] INFO  p6spy - 2020-05-09 15:33:14 | 耗时 5 ms | SQL 语句：
select 1;
2020-05-09 15:36:10.681 febs [JmsSession [ID:190bcbaa-37d5-469c-9321-ce2aee2ace24:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259024826031661056, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589009884731,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20986","signal":33}}
2020-05-09 15:36:11.065 febs [JmsSession [ID:190bcbaa-37d5-469c-9321-ce2aee2ace24:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:36:11 | 耗时 7 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:36:11.102 febs [JmsSession [ID:190bcbaa-37d5-469c-9321-ce2aee2ace24:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:36:11 | 耗时 10 ms | SQL 语句：
INSERT INTO a_equipment (code, type, sb_status, sb_jd, sb_wd, sb_address, sb_info, signal, state, creator, create_date, modifier, mod_date) VALUES ('2020040001', 1, 1, '116.483642', '40.008899', '北京市朝阳区望京开发街道屏翠东路;利泽东街与屏翠东路路口东189米', '21222121212', 33, 1, NULL, '2020-05-09T15:36:11.087', NULL, '2020-05-09T15:36:11.087');
2020-05-09 15:40:49.626 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 15:40:49.634 febs [Thread-20] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-05-09 15:40:49.636 febs [Thread-20] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-05-09 15:40:49.636 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2020-05-09 15:40:49.636 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 15:40:49.636 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2020-05-09 15:40:49.639 febs [Thread-20] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-05-09 15:40:49.639 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-05-09 15:40:49.648 febs [Thread-20] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-05-09 15:41:44.648 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 10684 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 15:41:44.650 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 15:41:45.863 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 15:41:45.865 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 15:41:45.936 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-05-09 15:41:46.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2fdd6e77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c64efda6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$aa4774d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5efcc5e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4d290757' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$83d16892] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 15:41:46.886 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 15:41:46.897 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 15:41:46.903 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 15:41:46.903 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 15:41:46.909 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 15:41:46.909 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 15:41:46.909 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 15:41:46.912 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 15:41:47.033 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 15:41:47.034 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2343 ms
2020-05-09 15:41:47.317 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 15:41:47.323 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 15:41:47.589 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 15:41:47.589 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 15:41:47.589 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 15:41:47.589 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 15:41:47.978 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 15:41:49.336 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 15:41:49.344 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 15:41:49.344 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 15:41:49.345 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 15:41:49.345 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 15:41:49.345 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 15:41:49.345 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 15:41:49.345 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1cb929a9
2020-05-09 15:41:50.294 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 15:41:50.477 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 15:41:50.478 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 15:41:50.530 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@217009bd, org.springframework.security.web.context.SecurityContextPersistenceFilter@4964d801, org.springframework.security.web.header.HeaderWriterFilter@39921410, org.springframework.security.web.authentication.logout.LogoutFilter@7d49fe37, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@11fa11b2, org.springframework.security.web.session.ConcurrentSessionFilter@6e4bccc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2caa9666, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d24703e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4c678a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6046fba0, org.springframework.security.web.session.SessionManagementFilter@36696821, org.springframework.security.web.access.ExceptionTranslationFilter@51d2d336, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d7c00de]
2020-05-09 15:41:50.569 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 15:41:50.583 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 15:41:50.585 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 15:41:50.874 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 15:41:51.343 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 15:41:51.354 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 15:41:51.396 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 15:41:51.410 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 15:41:51.411 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 15:41:51.420 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 15:41:51.439 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 15:41:51.441 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 7.437 seconds (JVM running for 8.287)
2020-05-09 15:41:51.458 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 15:41:51.458 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 15:41:51.458 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 15:41:51.458 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 15:41:51.458 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 15:41:52.003 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 15:41:52.207 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 15:41:52.208 febs [QpidJMS Connection Executor: ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 15:41:52.820 febs [RMI TCP Connection(3)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 15:41:52.821 febs [RMI TCP Connection(3)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 15:41:52.832 febs [RMI TCP Connection(3)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2020-05-09 15:41:52.842 febs [RMI TCP Connection(2)-192.168.137.101] INFO  p6spy - 2020-05-09 15:41:52 | 耗时 4 ms | SQL 语句：
select 1;
2020-05-09 15:42:00.020 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259026290867130880, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589010233975,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20986","signal":33}}
2020-05-09 15:42:28.650 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:42:28 | 耗时 8 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:42:39.885 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:42:39 | 耗时 0 ms | SQL 语句：
INSERT INTO a_equipment (code, type, sb_status, sb_jd, sb_wd, sb_address, sb_info, signal1, state, creator, create_date, modifier, mod_date) VALUES ('2020040001', 1, 1, '116.483642', '40.008899', '北京市朝阳区望京开发街道屏翠东路;利泽东街与屏翠东路路口东189米', '21222121212', 33, 1, NULL, '2020-05-09T15:42:39.878', NULL, '2020-05-09T15:42:39.878');
2020-05-09 15:42:47.634 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259026490616681472, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589010281598,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20986","signal":33}}
2020-05-09 15:43:00.166 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:00 | 耗时 8 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:43:10.015 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:10 | 耗时 20 ms | SQL 语句：
UPDATE a_equipment SET code = '2020040001', type = 1, sb_status = 1, sb_jd = '116.483642', sb_wd = '40.008899', sb_address = '北京市朝阳区望京开发街道屏翠东路;利泽东街与屏翠东路路口东189米', sb_info = '21222121212', signal1 = 33, state = 1, create_date = '2020-05-09T15:42:40', modifier = NULL, mod_date = '2020-05-09T15:43:09.992' WHERE id = 48;
2020-05-09 15:43:37.142 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259026698771682816, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589010331226,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20986","signal":33}}
2020-05-09 15:43:37.145 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:37 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:43:37.150 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:37 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET code = '2020040001', type = 1, sb_status = 1, sb_jd = '116.483642', sb_wd = '40.008899', sb_address = '北京市朝阳区望京开发街道屏翠东路;利泽东街与屏翠东路路口东189米', sb_info = '21222121212', signal1 = 33, state = 1, create_date = '2020-05-09T15:42:40', modifier = NULL, mod_date = '2020-05-09T15:43:37.147' WHERE id = 48;
2020-05-09 15:43:37.668 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259026696284360192, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589010330635,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20986","signal":33}}
2020-05-09 15:43:37.671 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:37 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:43:37.675 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:37 | 耗时 0 ms | SQL 语句：
UPDATE a_equipment SET code = '2020040001', type = 1, sb_status = 1, sb_jd = '116.483642', sb_wd = '40.008899', sb_address = '北京市朝阳区望京开发街道屏翠东路;利泽东街与屏翠东路路口东189米', sb_info = '21222121212', signal1 = 33, state = 1, create_date = '2020-05-09T15:42:40', modifier = NULL, mod_date = '2020-05-09T15:43:37.673' WHERE id = 48;
2020-05-09 15:43:55.974 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  com.cx.common.utils.IotAmqpClient - receive message, topic = /a1umzzYpOjO/2020040001/thing/event/device_info/post, messageId = 1259026777767187969, content = {"deviceType":"CustomCategory","identifier":"device_info","iotId":"3ThbY2DsTHuiFlb7pfps000100","requestId":"123","name":"设备信息上报","time":1589010350061,"type":"info","productKey":"a1umzzYpOjO","deviceName":"2020040001","value":{"ICCID":"21222121212","location":"1,4301,20987","signal":33}}
2020-05-09 15:43:56.186 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:56 | 耗时 0 ms | SQL 语句：
SELECT e.* FROM a_equipment e WHERE e.code = '2020040001';
2020-05-09 15:43:56.192 febs [JmsSession [ID:f15ca8ef-c2a4-4e6b-8932-dfc00130e68a:1:1] delivery dispatcher] INFO  p6spy - 2020-05-09 15:43:56 | 耗时 2 ms | SQL 语句：
UPDATE a_equipment SET code = '2020040001', type = 1, sb_status = 1, sb_jd = '116.482284', sb_wd = '39.998119', sb_address = '北京市朝阳区望京街道绿地中心5号楼;远安路与宏泰东街路口北178米', sb_info = '21222121212', signal1 = 33, state = 1, create_date = '2020-05-09T15:42:40', modifier = NULL, mod_date = '2020-05-09T15:43:56.187' WHERE id = 48;
2020-05-09 16:47:38.928 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:47:38 | 耗时 20 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 16:47:38.928 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:47:38 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 16:47:38.975 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 16:47:38.975 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:47:38 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 16:47:39.005 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 2 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 16:47:39.005 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 2 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 16:47:39.085 febs [http-nio-8099-exec-6] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:5C763A6546B3C3E5CFDAE88EE719CB3B
2020-05-09 16:47:39.085 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C827C50428AAC19E92C933B6BBE50447
2020-05-09 16:47:39.530 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 16:47:39.792 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T16:47:39.777+0800' WHERE (USERNAME = 'admin');
2020-05-09 16:47:39.811 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 7 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 16:47:39.819 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 6 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:47:39.825 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:47:39.836 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 16:47:39.839 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:47:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 16:48:17.525 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 16:48:17.620 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 15 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T16:48:17.600+0800' WHERE (USERNAME = 'admin');
2020-05-09 16:48:17.627 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 16:48:17.629 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:48:17.632 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:48:17.638 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 16:48:17.641 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:48:17 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 16:54:48.500 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 5 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 16:54:48.511 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T16:54:48.508+0800' WHERE (USERNAME = 'admin');
2020-05-09 16:54:48.544 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 16:54:48.547 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:54:48.549 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 16:54:48.555 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 16:54:48.560 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:54:48 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 16:54:55.691 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:54:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 16:54:55.706 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:54:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 16:54:58.849 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:54:58 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:06.092 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 2 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('319', '320', '355');
2020-05-09 16:55:06.097 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('319', '320', '355'));
2020-05-09 16:55:06.100 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 0 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('352', '353', '354', '356');
2020-05-09 16:55:06.106 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('352', '353', '354', '356'));
2020-05-09 16:55:06.124 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:06.142 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 16:55:06 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 41, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "319,320,355"', '192.168.137.101', '2020-05-09T16:55:06.123+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:12.924 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 0 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('322', '323', '324', '346', '348');
2020-05-09 16:55:12.932 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('322', '323', '324', '346', '348'));
2020-05-09 16:55:12.936 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 0 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('325', '326', '327', '328', '329', '330', '347', '349', '350', '351');
2020-05-09 16:55:12.939 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('325', '326', '327', '328', '329', '330', '347', '349', '350', '351'));
2020-05-09 16:55:12.947 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 20, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "322,323,324,346,348"', '192.168.137.101', '2020-05-09T16:55:12.943+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:12.952 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:55:12 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:19.670 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 16:55:19 | 耗时 1 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('304', '305', '306', '307');
2020-05-09 16:55:19.673 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 16:55:19 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('304', '305', '306', '307'));
2020-05-09 16:55:19.703 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 16:55:19 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 31, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "304,305,306,307"', '192.168.137.101', '2020-05-09T16:55:19.697+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:19.708 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:55:19 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:33.441 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:55:33 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:33.452 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:55:33 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 16:55:33.456 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:55:33 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 16:55:40.860 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 0 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('314', '315');
2020-05-09 16:55:40.865 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('314', '315'));
2020-05-09 16:55:40.872 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 5 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('343');
2020-05-09 16:55:40.875 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('343'));
2020-05-09 16:55:40.898 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 34, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "314,315"', '192.168.137.101', '2020-05-09T16:55:40.893+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:40.903 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 16:55:40 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:49.006 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 16:55:49 | 耗时 9 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('331');
2020-05-09 16:55:49.008 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 16:55:49 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('331'));
2020-05-09 16:55:49.025 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 16:55:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 26, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "331"', '192.168.137.101', '2020-05-09T16:55:49.022+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:49.029 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:55:49 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:55:54.579 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:55:54 | 耗时 1 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('318');
2020-05-09 16:55:54.582 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 16:55:54 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('318'));
2020-05-09 16:55:54.592 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 16:55:54 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 11, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "318"', '192.168.137.101', '2020-05-09T16:55:54.587+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:55:54.595 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 16:55:54 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:57:12.209 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:57:12 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-05-09 16:57:15.439 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 16:57:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-05-09 16:57:15.512 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 16:57:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 16:57:15.515 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 16:57:15 | 耗时 0 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, DEPT_CODE, socure_id, level, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept WHERE (level = 0);
2020-05-09 16:57:27.035 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:57:27 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 16:57:27.058 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:57:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 16:57:27.062 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:57:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 16:57:38.424 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 16:57:38 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:58:14.587 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 16:58:14 | 耗时 11 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (0, '客户管理', '', '', 'layui-icon-deleteteam', '0', 10, '2020-05-09T16:58:14.571+0800');
2020-05-09 16:58:14.597 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 16:58:14 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 22, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=357, parentId=0, menuName=客户管理, url=, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=Sat May 09 16:58:14 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T16:58:14.591+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 16:58:14.600 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:58:14 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 16:58:17.075 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 16:58:17 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 16:58:17.100 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 16:58:17 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:00:22.643 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:00:22 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, CREATE_TIME) VALUES (0, '设备管理', '', '', 'layui-icon-deploymentunit', '0', '2020-05-09T17:00:22.641+0800');
2020-05-09 17:00:22.652 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 17:00:22 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 40, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=358, parentId=0, menuName=设备管理, url=, perms=, icon=layui-icon-deploymentunit, type=0, orderNum=null, createTime=Sat May 09 17:00:22 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:00:22.648+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:00:22.657 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:00:22 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:00:33.733 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:00:33 | 耗时 0 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 0, MENU_NAME = '设备管理', URL = '', PERMS = '', ICON = 'layui-icon-deploymentunit', TYPE = '0', ORDER_NUM = 20, MODIFY_TIME = '2020-05-09T17:00:33.727+0800' WHERE MENU_ID = 358;
2020-05-09 17:00:33.766 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 17:00:33 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 35, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=358, parentId=0, menuName=设备管理, url=, perms=, icon=layui-icon-deploymentunit, type=0, orderNum=20, createTime=null, modifyTime=Sat May 09 17:00:33 CST 2020)"', '192.168.137.101', '2020-05-09T17:00:33.762+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:00:33.771 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:00:33 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:00:39.215 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:00:39 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:00:39.235 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:00:39 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:01:43.539 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:01:43 | 耗时 17 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (0, '异常管理', '', '', 'layui-icon-error', '0', 30, '2020-05-09T17:01:43.520+0800');
2020-05-09 17:01:43.559 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 17:01:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 35, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=359, parentId=0, menuName=异常管理, url=, perms=, icon=layui-icon-error, type=0, orderNum=30, createTime=Sat May 09 17:01:43 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:01:43.555+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:01:43.562 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:01:43 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:03:13.247 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:03:13 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (0, '实时数据', '', '', 'layui-icon-cloud-server', '0', 21, '2020-05-09T17:03:13.246+0800');
2020-05-09 17:03:13.280 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 17:03:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 29, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=360, parentId=0, menuName=实时数据, url=, perms=, icon=layui-icon-cloud-server, type=0, orderNum=21, createTime=Sat May 09 17:03:13 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:03:13.275+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:03:13.282 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:03:13 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:03:43.906 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:03:43 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (0, '历史数据', '', '', 'layui-icon-database', '0', 22, '2020-05-09T17:03:43.903+0800');
2020-05-09 17:03:43.936 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 17:03:43 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 29, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=361, parentId=0, menuName=历史数据, url=, perms=, icon=layui-icon-database, type=0, orderNum=22, createTime=Sat May 09 17:03:43 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:03:43.931+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:03:43.940 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:03:43 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:04:09.723 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:04:09 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:04:09.746 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:04:09 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:04:47.348 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:04:47 | 耗时 3 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (0, '统计分析', '', '', 'layui-icon-piechart', '0', 40, '2020-05-09T17:04:47.343+0800');
2020-05-09 17:04:47.357 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 17:04:47 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 11, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=362, parentId=0, menuName=统计分析, url=, perms=, icon=layui-icon-piechart, type=0, orderNum=40, createTime=Sat May 09 17:04:47 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:04:47.354+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:04:47.368 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:04:47 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:05:14.286 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 1 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('311');
2020-05-09 17:05:14.289 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('311'));
2020-05-09 17:05:14.291 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 0 ms | SQL 语句：
DELETE FROM t_menu WHERE MENU_ID IN ('312', '313', '332');
2020-05-09 17:05:14.293 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (PARENT_ID IN ('312', '313', '332'));
2020-05-09 17:05:14.305 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 15, 'com.cx.system.controller.MenuController.deleteMenus()', ' menuIds: "311"', '192.168.137.101', '2020-05-09T17:05:14.298+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:05:14.309 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:05:14 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:06:37.051 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:06:37 | 耗时 18 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (357, '客户管理', '', '', 'layui-icon-deleteteam', '0', 10, '2020-05-09T17:06:37.032+0800');
2020-05-09 17:06:37.070 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 17:06:37 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 35, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=363, parentId=357, menuName=客户管理, url=, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=Sat May 09 17:06:37 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:06:37.065+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:06:37.074 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:06:37 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:00.005 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:08:00 | 耗时 5 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME) VALUES (357, '客户分析', '', '', 'layui-icon-barchart', '0', 20, '2020-05-09T17:07:59.999+0800');
2020-05-09 17:08:00.025 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 17:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '新增菜单/按钮', 22, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=364, parentId=357, menuName=客户分析, url=, perms=, icon=layui-icon-barchart, type=0, orderNum=20, createTime=Sat May 09 17:07:59 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:08:00.020+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:00.028 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:00 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:02.297 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:02.333 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:08:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:08.281 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 17:08:08.287 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 17:08:11.032 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:08:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:11.037 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:08:11 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:11.044 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:15.951 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role WHERE (ROLE_ID IN ('85'));
2020-05-09 17:08:15.959 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('85'));
2020-05-09 17:08:15.966 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user_role WHERE (ROLE_ID IN ('85'));
2020-05-09 17:08:15.971 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:15.973 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:15.978 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:15 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:16.015 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 17:08:16 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除角色', 56, 'com.cx.system.controller.RoleController.deleteRoles()', ' roleIds: "85"', '192.168.137.101', '2020-05-09T17:08:16.002+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:16.022 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:08:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:16.024 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:08:16 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:19.325 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role WHERE (ROLE_ID IN ('84'));
2020-05-09 17:08:19.327 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('84'));
2020-05-09 17:08:19.329 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user_role WHERE (ROLE_ID IN ('84'));
2020-05-09 17:08:19.335 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:19.339 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:19.341 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:19.364 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除角色', 37, 'com.cx.system.controller.RoleController.deleteRoles()', ' roleIds: "84"', '192.168.137.101', '2020-05-09T17:08:19.359+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:19.378 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:19.381 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:08:19 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:21.399 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 19 ms | SQL 语句：
DELETE FROM t_role WHERE (ROLE_ID IN ('83'));
2020-05-09 17:08:21.411 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 11 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('83'));
2020-05-09 17:08:21.414 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user_role WHERE (ROLE_ID IN ('83'));
2020-05-09 17:08:21.419 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:21.423 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:21.425 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:21.433 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除角色', 52, 'com.cx.system.controller.RoleController.deleteRoles()', ' roleIds: "83"', '192.168.137.101', '2020-05-09T17:08:21.429+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:21.445 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:21.447 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:08:21 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:30.228 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'ROOT', REMARK = '超级管理员，拥有所有操作权限 ^_^', MODIFY_TIME = '2020-05-09T17:08:30.226+0800' WHERE ROLE_ID = 1;
2020-05-09 17:08:30.230 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('1'));
2020-05-09 17:08:30.280 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:30.282 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:30.284 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:30.295 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 64, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=1, roleName=ROOT, remark=超级管理员，拥有所有操作权限 ^_^, createTime=null, modifyTime=Sat May 09 17:08:30 CST 2020, menuIds=1,3,11,12,13,187,4,14,15,16,5,17,18,19,316,334)"', '192.168.137.101', '2020-05-09T17:08:30.290+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:30.307 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:30.310 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:08:30 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:49.505 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-05-09T17:08:49.503+0800' WHERE ROLE_ID = 82;
2020-05-09 17:08:49.507 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-05-09 17:08:49.527 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:49.528 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:49.530 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:49.540 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 33, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Sat May 09 17:08:49 CST 2020, menuIds=11,12,13,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,364)"', '192.168.137.101', '2020-05-09T17:08:49.535+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:08:49.555 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:08:49.557 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:08:49 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:08:53.030 febs [http-nio-8099-exec-8] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:5C763A6546B3C3E5CFDAE88EE719CB3B
2020-05-09 17:08:53.043 febs [http-nio-8099-exec-4] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:909325D58ACD3281A1BBDC071F4CF1A3
2020-05-09 17:08:59.470 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:08:59.479 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:08:59.481 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:08:59.713 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:08:59.749 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:08:59.747+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:08:59.756 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:08:59.759 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:08:59.762 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:08:59.765 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:08:59.769 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:08:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:09:04.005 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:09:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 17:09:04.010 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:09:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 17:09:09.966 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:09 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ('8');
2020-05-09 17:09:09.971 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:09 | 耗时 1 ms | SQL 语句：
DELETE FROM t_user_role WHERE (USER_ID IN ('8'));
2020-05-09 17:09:09.981 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 17:09:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除用户', 20, 'com.cx.system.controller.UserController.deleteUsers()', ' userIds: "8"', '192.168.137.101', '2020-05-09T17:09:09.976+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:09:12.427 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:09:12 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:09:12.453 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:09:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 17:09:12.457 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:09:12 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 17:09:15.150 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:09:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-05-09 17:09:15.196 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:15 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, DEPT_CODE, socure_id, level, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_dept WHERE (level = 0);
2020-05-09 17:09:15.199 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:09:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:09:22.138 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-05-09 17:09:22.165 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET EMAIL = 'mrbird@qq.com', MOBILE = '17788888881', STATUS = '1', MODIFY_TIME = '2020-05-09T17:09:22.163+0800', SSEX = '1', DESCRIPTION = 'asdasd' WHERE USER_ID = 1;
2020-05-09 17:09:22.169 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 1 ms | SQL 语句：
DELETE FROM t_user_role WHERE (USER_ID = 1);
2020-05-09 17:09:22.176 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:09:22.179 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:09:22.183 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:09:22.192 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 17:09:22 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改用户', 26, 'com.cx.system.controller.UserController.updateUser()', ' user: null', '192.168.137.101', '2020-05-09T17:09:22.187+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:09:24.644 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:24 | 耗时 11 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:09:29.111 febs [http-nio-8099-exec-9] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:80F3B5FB7D028095BFBACA8DCF7A803B
2020-05-09 17:09:29.119 febs [http-nio-8099-exec-10] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:184C88277ABAD4A5F3A85776B402C1C2
2020-05-09 17:09:34.557 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:09:34.561 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:09:34.564 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:09:34.808 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:09:34.845 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:09:34.843+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:09:34.850 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:09:34.854 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:09:34.856 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:09:34.859 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:09:34.861 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:34 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:09:43.793 febs [http-nio-8099-exec-7] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:0BFBFF5D13636B87B93A726CEEE4425D
2020-05-09 17:09:43.800 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D03A33177E31AD62A74668C8608B00A2
2020-05-09 17:09:51.620 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:09:51.623 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:09:51.636 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 11 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:09:51.869 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:09:51.905 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 5 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:09:51.898+0800' WHERE (USERNAME = 'root');
2020-05-09 17:09:51.928 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:09:51.930 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:09:51.932 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:09:51.934 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:09:51.948 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:09:51 | 耗时 10 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'root' GROUP BY days;
2020-05-09 17:09:55.939 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:09:55 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:09:57.177 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:09:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:09:57.186 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:09:57 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:09:57.190 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:09:57 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:10:13.188 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-05-09T17:10:13.185+0800' WHERE ROLE_ID = 82;
2020-05-09 17:10:13.190 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-05-09 17:10:13.203 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:10:13.206 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:10:13.209 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:10:13.213 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:10:13.214 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:10:13.216 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:10:13.225 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '修改角色', 37, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Sat May 09 17:10:13 CST 2020, menuIds=1,11,12,13,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,364)"', '192.168.137.101', '2020-05-09T17:10:13.220+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:10:13.240 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:10:13.241 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:10:13 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:10:15.486 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:10:15 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:10:15.499 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:10:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:10:15.505 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:10:15 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:10:15.508 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:10:15 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:10:19.267 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:10:19 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:12:02.460 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:12:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, PERMS, TYPE, CREATE_TIME) VALUES (363, '新增', 'mobile/account:add', '1', '2020-05-09T17:12:02.455+0800');
2020-05-09 17:12:02.481 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 17:12:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '新增菜单/按钮', 36, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=365, parentId=363, menuName=新增, url=null, perms=mobile/account:add, icon=null, type=1, orderNum=null, createTime=Sat May 09 17:12:02 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:12:02.476+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:12:02.491 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:12:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:15:02.676 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:15:02 | 耗时 16 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, PERMS, TYPE, CREATE_TIME) VALUES (363, '删除', 'mobile/account:del', '1', '2020-05-09T17:15:02.659+0800');
2020-05-09 17:15:02.695 febs [aps-Async-Thread1] INFO  p6spy - 2020-05-09 17:15:02 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '新增菜单/按钮', 51, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=366, parentId=363, menuName=删除, url=null, perms=mobile/account:del, icon=null, type=1, orderNum=null, createTime=Sat May 09 17:15:02 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:15:02.691+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:15:02.699 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:15:02 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:15:43.441 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:15:43 | 耗时 16 ms | SQL 语句：
INSERT INTO t_menu (PARENT_ID, MENU_NAME, PERMS, TYPE, CREATE_TIME) VALUES (363, '修改', 'mobile/account:mod', '1', '2020-05-09T17:15:43.423+0800');
2020-05-09 17:15:43.465 febs [aps-Async-Thread2] INFO  p6spy - 2020-05-09 17:15:43 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '新增菜单/按钮', 37, 'com.cx.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=367, parentId=363, menuName=修改, url=null, perms=mobile/account:mod, icon=null, type=1, orderNum=null, createTime=Sat May 09 17:15:43 CST 2020, modifyTime=null)"', '192.168.137.101', '2020-05-09T17:15:43.460+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:15:43.468 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:15:43 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:15:45.500 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:15:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:15:45.533 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:15:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:15:50.305 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:11436C066C4348D893DAC605DE3CCFBE
2020-05-09 17:15:50.313 febs [http-nio-8099-exec-10] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F46BBADD140B47E293360FE2316CBBBA
2020-05-09 17:15:57.580 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:15:57.583 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:15:57.589 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:15:57.842 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:15:57.878 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:15:57.875+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:15:57.910 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:15:57.913 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:15:57.915 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:15:57.918 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:15:57.922 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:15:57 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:16:02.922 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:16:02.949 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:16:02.946+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:16:02.955 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:16:02.959 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:16:02.962 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:16:02.964 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:16:02.967 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:16:02 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:16:04.628 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:16:04 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:16:09.551 febs [http-nio-8099-exec-9] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:059F24E73F6AEA9760527FEFCB2106AC
2020-05-09 17:16:09.559 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:789A1A498A4BC920940407CA1551EC2D
2020-05-09 17:16:15.312 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:16:15.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:16:15.314 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:16:15.314 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:16:15.317 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:16:15.317 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:16:15 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:16:21.276 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:16:21.280 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:16:21.290 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 9 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:16:21.513 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu WHERE (TYPE = 0) ORDER BY ORDER_NUM ASC;
2020-05-09 17:16:21.550 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:16:21.548+0800' WHERE (USERNAME = 'root');
2020-05-09 17:16:21.556 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:16:21.559 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:16:21.562 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:16:21.565 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:16:21.567 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'root' GROUP BY days;
2020-05-09 17:16:25.929 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:16:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ) TOTAL;
2020-05-09 17:16:25.934 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:16:25 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-05-09 17:16:27.132 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:16:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:16:27.133 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:16:27 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:16:27.135 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:16:27 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:16:37.572 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-05-09T17:16:37.570+0800' WHERE ROLE_ID = 82;
2020-05-09 17:16:37.574 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-05-09 17:16:37.589 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:16:37.591 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:16:37.593 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:16:37.597 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:16:37.599 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:16:37.602 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:16:37.612 febs [aps-Async-Thread3] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '修改角色', 38, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Sat May 09 17:16:37 CST 2020, menuIds=1,11,12,13,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,365,366,367,364)"', '192.168.137.101', '2020-05-09T17:16:37.608+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:16:37.628 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:16:37.631 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:16:37 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:17:31.703 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:17:31 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:17:53.121 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:17:53 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 0, MENU_NAME = '客户管理', URL = '/mobile/account/index', PERMS = '', ICON = 'layui-icon-deleteteam', TYPE = '0', ORDER_NUM = 10, MODIFY_TIME = '2020-05-09T17:17:53.118+0800' WHERE MENU_ID = 357;
2020-05-09 17:17:53.147 febs [aps-Async-Thread4] INFO  p6spy - 2020-05-09 17:17:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '修改菜单/按钮', 26, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=357, parentId=0, menuName=客户管理, url=/mobile/account/index, perms=, icon=layui-icon-deleteteam, type=0, orderNum=10, createTime=null, modifyTime=Sat May 09 17:17:53 CST 2020)"', '192.168.137.101', '2020-05-09T17:17:53.143+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:17:53.150 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:17:53 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-05-09 17:18:00.689 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:C827C50428AAC19E92C933B6BBE50447
2020-05-09 17:18:44.850 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-05-09T17:18:44.847+0800' WHERE ROLE_ID = 82;
2020-05-09 17:18:44.852 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-05-09 17:18:44.877 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'root' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:18:44.879 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-05-09 17:18:44.880 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 0 ms | SQL 语句：
SELECT PERMS FROM t_menu WHERE (PERMS IS NOT NULL AND PERMS <> '');
2020-05-09 17:18:44.891 febs [aps-Async-Thread5] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('root', '修改角色', 39, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Sat May 09 17:18:44 CST 2020, menuIds=1,11,12,13,4,14,15,5,17,18,19,335,336,337,338,339,340,341,342,357,363,365,366,367,364)"', '192.168.137.101', '2020-05-09T17:18:44.887+0800', '内网IP|0|0|内网IP|内网IP');
2020-05-09 17:18:44.903 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-05-09 17:18:44.906 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:18:44 | 耗时 0 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-05-09 17:18:47.551 febs [http-nio-8099-exec-8] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:3D7F758C6AFEF6275EB857F71413AD4F
2020-05-09 17:18:47.560 febs [http-nio-8099-exec-7] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:BD256B8FE06172B28ED7F6AA716BDC6E
2020-05-09 17:18:53.076 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:18:53.079 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:18:53.083 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:18:53.301 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:18:53.337 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:18:53.331+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:18:53.343 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:18:53.346 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:18:53.348 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:18:53.350 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:18:53.355 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:18:53 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:18:54.729 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:18:54 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:18:54.731 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:18:54 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:19:44.212 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-05-09 17:19:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:19:44.244 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:19:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:19:44.245 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:19:44 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:20:28.421 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:20:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:20:28.460 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:20:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:20:28.462 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:20:28 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:22:01.913 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:22:01 | 耗时 0 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:22:01.949 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:22:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:23:18.652 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-05-09 17:23:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:23:18.687 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:23:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:48:13.449 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 17:48:13.456 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-05-09 17:48:13.458 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-05-09 17:48:13.458 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2020-05-09 17:48:13.458 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2020-05-09 17:48:13.459 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2020-05-09 17:48:13.461 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-05-09 17:48:13.461 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-05-09 17:48:13.467 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-05-09 17:48:20.125 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on SKY-20190914UNV with PID 9272 (D:\fxp_xm\ZG_APP\target\classes started by Administrator in D:\fxp_xm\ZG_APP)
2020-05-09 17:48:20.170 febs [main] INFO  com.cx.AppApplication - The following profiles are active: dev
2020-05-09 17:48:21.351 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-09 17:48:21.352 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-09 17:48:21.425 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-05-09 17:48:21.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:21.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6dc581d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.030 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4371106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e82f8835] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9ce4d940] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f59da34' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c1b97bf2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-09 17:48:22.533 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-05-09 17:48:22.544 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-05-09 17:48:22.551 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-05-09 17:48:22.551 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-05-09 17:48:22.557 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-09 17:48:22.557 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-09 17:48:22.557 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-09 17:48:22.562 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-09 17:48:22.670 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-09 17:48:22.670 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2461 ms
2020-05-09 17:48:22.975 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-05-09 17:48:22.985 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-05-09 17:48:23.260 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-05-09 17:48:23.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-05-09 17:48:23.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-05-09 17:48:23.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-05-09 17:48:23.683 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-05-09 17:48:25.002 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-05-09 17:48:25.010 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-05-09 17:48:25.010 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-05-09 17:48:25.010 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-05-09 17:48:25.011 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-05-09 17:48:25.011 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-05-09 17:48:25.011 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-05-09 17:48:25.011 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7f9dbe11
2020-05-09 17:48:25.999 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-05-09 17:48:26.201 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-05-09 17:48:26.257 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@690e7b89, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b160208, org.springframework.security.web.header.HeaderWriterFilter@1104ad6a, org.springframework.security.web.authentication.logout.LogoutFilter@48d24d63, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5d24703e, org.springframework.security.web.session.ConcurrentSessionFilter@61c0fb12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16a15261, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e6e29d6, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@749ffdc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17554316, org.springframework.security.web.session.SessionManagementFilter@73e63b4d, org.springframework.security.web.access.ExceptionTranslationFilter@3f030217, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f6a5cc9]
2020-05-09 17:48:26.293 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-09 17:48:26.305 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-05-09 17:48:26.306 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-05-09 17:48:26.617 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-05-09 17:48:27.095 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-05-09 17:48:27.124 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-05-09 17:48:27.167 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-05-09 17:48:27.181 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-05-09 17:48:27.181 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-05-09 17:48:27.190 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-05-09 17:48:27.210 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-05-09 17:48:27.212 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 7.682 seconds (JVM running for 8.453)
2020-05-09 17:48:27.248 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-05-09 17:48:27.248 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-05-09 17:48:27.249 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-05-09 17:48:27.249 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-05-09 17:48:27.249 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.137.101:8099/login
2020-05-09 17:48:27.777 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  o.a.q.jms.sasl.SaslMechanismFinder - Best match for SASL auth was: SASL-PLAIN
2020-05-09 17:48:27.976 febs [AmqpProvider :(1):[amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com:-1]] INFO  org.apache.qpid.jms.JmsConnection - Connection ID:24cb331c-0b25-447d-aecd-8258851c9409:1 connected to remote Broker: amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com
2020-05-09 17:48:27.977 febs [QpidJMS Connection Executor: ID:24cb331c-0b25-447d-aecd-8258851c9409:1] INFO  com.cx.common.utils.IotAmqpClient - onConnectionEstablished, remoteUri:amqps://1950696194510916.iot-amqp.cn-shanghai.aliyuncs.com?amqp.idleTimeout=80000
2020-05-09 17:48:28.329 febs [RMI TCP Connection(2)-192.168.137.101] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-09 17:48:28.330 febs [RMI TCP Connection(2)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-09 17:48:28.340 febs [RMI TCP Connection(2)-192.168.137.101] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2020-05-09 17:48:28.351 febs [RMI TCP Connection(3)-192.168.137.101] INFO  p6spy - 2020-05-09 17:48:28 | 耗时 4 ms | SQL 语句：
select 1;
2020-05-09 17:48:54.007 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A89147800113CCEFBDFC7576851A8D9E
2020-05-09 17:49:16.832 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A7C1DF9742BCC06950983A6799723CDD
2020-05-09 17:49:23.948 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:49:23 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-05-09 17:49:24.016 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-05-09 17:49:24.027 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-05-09 17:49:24.345 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:49:24.476 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-05-09T17:49:24.442+0800' WHERE (USERNAME = 'admin');
2020-05-09 17:49:24.486 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-05-09 17:49:24.491 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:49:24.494 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-05-09 17:49:24.498 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-05-09 17:49:24.501 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:49:24 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-05-09 17:49:25.733 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:49:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:50:31.932 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:50:31 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:50:31.976 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:50:31 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:50:31.986 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-05-09 17:50:31 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:51:12.148 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:51:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:51:12.196 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:51:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:51:12.198 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:51:12 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:54:34.868 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-05-09 17:54:34 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:54:34.879 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:54:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:54:34.881 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-05-09 17:54:34 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:55:13.285 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-05-09 17:55:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:55:13.323 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:55:13 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:55:13.326 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:55:13 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:56:23.308 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-05-09 17:56:23 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:56:23.352 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:56:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
2020-05-09 17:56:23.356 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-05-09 17:56:23 | 耗时 2 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account ORDER BY id ASC LIMIT 0,10;
2020-05-09 17:57:49.219 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-05-09 17:57:49 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-05-09 17:57:49.253 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-05-09 17:57:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM a_account;
